# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - performance
    - cloud
    - security
    - testing
    - craftsmanship
    - agile
    - architecture
    - java
    - functional
title: 'Beyond lambdas, the aftermath'
recordingDate: 1456224740
description: "(Recorded at Jfokus 2016. http://www.jfokus.com)\n\nBeyond lambdas, the aftermath\n\nAs Java developers we are used to having rich ecosystems of libraries and tools that make our lives easier. As of the release of Java 8, we finally got our hands on building blocks like lambdas, optionals, and streams. All sorts of tools that help us write more concise code. But now, when the honeymoon is over, are there any downsides to Java 8 or is it a silver bullet? Are there any new anti-patterns emerging? Or subtle bugs caused by the new style of programming? Have there been any lessons learned? Are there any best practices? If you are interested in learning about the challenges encountered when moving over to a functional style of Java programming, what code constructs to avoid, and best practices to use, well then this session is for you.\n\nDaniel Deogun, Omegapoint\n\nCoder and Quality defender; fights security trolls on a daily basis using Domain Driven Design and a security mindset. Frequent speaker at international conferences. Daniel's extensive experience ranges from patient critical pacemaker systems to high performant software in the gaming industry. Combining this with his passion for DDD and his interest in security has made him a strong advocate of Domain Driven Security.\n\nDaniel Sawano, Omegapoint\n\nDeveloper, architect, public speaker, agile dude and sporadic blogger. Long-time builder of high-performance systems with a background in stock trading and gaming. Master of science and a Java programmer for 14+ years. Loves creativity, beautiful software, DDD, TDD/BDD and a whole bunch of other acronyms. Passionate about cloud computing and agile methodologies."
