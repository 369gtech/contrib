# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - startup
    - ruby
    - python
    - javascript
    - java
title: 'Abstractions Without Regret with GraalVM by Thomas Wuerthinger'
language: English
recordingDate: 1573074703
description: "Performance-aware code often sacrifices elegance and readability for being fast. Previously, to get the best performance developers often had to manually tweak the code to follow certain patterns known to run faster, use a low-level programming language or even write assembly directly. Nowadays we have better compilers which don’t require such efforts and allow to write readable code without sacrificing performance.\n\n\nIn this session, we discuss how to productively write Java code while letting the compiler and runtime system worry about making it performant. We will look at the typical code patterns for writing easily maintainable, better-looking code without losing performance and discuss what areas to focus on when optimizing your Java program.You will learn more about the GraalVM compiler and how it optimizes your Java code to create optimal machine code.\n\nThe session will cover how to make best use of GraalVM in your projects for better performance and better developer productivity. Also, how GraalVM’s native image capability is a game changer for lower memory footprint and instant startup for Java applications.\n\n\nThomas Wuerthinger is a Senior Research Director at Oracle Labs leading the GraalVM project with teams implementing programming languages including Java, JavaScript, Ruby, Python, and R. He is the architect of the GraalVM compiler and the Truffle self-optimizing runtime system. Previously, he worked on the Crankshaft optimizing compiler of V8 at Google, and the Maxine research virtual machine at Sun Microsystems. He received a PhD degree from JKU Linz for his research about dynamic code evolution."
