# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - testing
    - architecture
    - functional
title: 'microXchg 2018 - Reconstructing thalia.de with self-contained systems'
language: English
recordingDate: 1526134683
description: "Reconstructing thalia.de with self-contained systems\n\nBenjamin Leenen, Dennis Schneider\n\nIn a rapidly changing world functionally-structured organizations have to face challenges like distributed responsibilities, spatial separation, conflicts of objectives and many more. While rapid change in business needs enforces a high rate of feature output, challenges like the mentioned ones are leading to significant risks.\n \nTo overcome slow change Thalia decided to break with its functional structure. Instead employees of different organizational units, like quality assurance, operations, software development and business, have been put into cross-functional product teams.\n \nAccording to the way the organization is changing the technical architecture has to evolve as well. Software components are divided into smaller units that are being separated vertically and loosely coupled by applying explicit domain boundaries. Unlike large monolithic systems these units are easier to maintain, test and deploy.\n \nAs a result each product team is able to realize new features, deliver perceivable values for customers and explore state-of-the-art technologies independently from each other.\n \nAt Thalia we are in the midst of such a reengineering of our e-commerce platform by replacing a monolithic webshop application with an architecture consisting of self-contained systems (SCS) that provide all application layers like business logic, persistence as well as frontend (http://scs-architecture.org/).\n \nIn this talk we want to show where the Thalia e-commerce platform started multiple years ago, which changes have taken place so far and how SCS are being used to rebuild the application landscape. Thereby, we want to share our experiences and cover topics like the technology stack to build, test and deploy an SCS, technical implications and challenges of a such a distributed system as well as organizational implications to our product-based organization."
