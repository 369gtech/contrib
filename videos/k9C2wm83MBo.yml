# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - security
    - craftsmanship
    - agile
title: 'Alexandru Bolboaca - Removing Structural Duplication and Refactoring Hidden Loops'
language: English
recordingDate: 1501676286
description: "Alexandru Bolboaca is a polyglot programmer, trainer, and coach at Mozaic Works. He worked for almost 15 years in software development, for various industries and in various European countries and UK.\n\nHe co-facilitated the first code retreat outside the US in Bucharest in 2009. Since then, he facilitated tens of events such as coding dojos, architectural katas, code retreats and others in many countries from Europe.\n\nHe is also a contributor to publications and blogs such as Today Software Magazine, Agile Record Magazine, mozaicworks.com/blog and my own blog, alexbolboaca.ro.\n\nMy speaking experience includes sessions at OpenAgile Romania, I TAKE Unconference, SoCraTes UK, Agile Cambridge, Agile Lean Europe Unconference, ACE Conf and OWASP.\n\nTalk summary \n\nREMOVING STRUCTURAL DUPLICATION\n\n \n\nStructural duplication is a type of code similarity that is difficult to identify. A common example is the similarity in exception handling:\n\ntry{\n\n     doSomething()\n\n} catch (Exception1 exc1){\n\n     // treat exception1\n\n} catch (Exception2 exc2){\n\n    // treat exception2\n\n}\n\ntry{\n\n    doSomethingElse()\n\n} catch(Exception1 exc1){\n\n    // treat exception1\n\n} catch(Exception3 exc3){\n\n    // treat exception3\n\n}\n\nThe structural duplication is obvious – the code has the same structure but calls different things. Refactoring it can prove challenging.\n\nIn this session, I will show you how to remove structural duplication from your code and some of the benefits that can result from it.\n\n \n\nREFACTORING HIDDEN LOOPS\n\nThis session introduces you to the hidden loops smell and shows an example of refactoring it away.\n\nThe hidden loops smell manifests as an operation that is duplicated in various forms in code. The typical example I encounter is a series of if statements:\n\nif(…) doSomething()\n\nif(…) doSomethingElse()\n\nYou will learn how to identify hidden loops and how to refactor them to a much shorter version that generalizes the solution and allows flexibility."
