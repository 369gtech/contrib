# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - 'distributed systems'
    - storage
    - elixir
    - agile
    - architecture
title: 'Introducing RIG – the Reactive Interaction Gateway by Kevin Bader'
language: English
recordingDate: 1510303699
description: "In microservice architectures, getting real-time notifications to frontends is not trivial to implement in a scalable fashion. Our Reactive Interaction Gateway (RIG) solves this – it maintains frontend connections, so your services don't have to. RIG allows your microservices to be stateless.\n\nRIG is session-aware – it knows which users' devices are connected – and solves the connection-state problem for microservice based architectures RIG uses its state to provide blacklisting of JWTs, enabling instant user logout without awaiting the JWT timeout RIG includes a simple, distributed API gateway implementation (not API management) RIG is simple to use, easy to deploy (no external database!), and highly scalable RIG is written in Elixir on top of Erlang/OTP. Leveraging the platform, it is scalable by design, supported by a battle-proven application runtime designed from the start for distributed systems. RIG also heavily uses modules from the Phoenix Framework.\n\n# Kevin Bader\nKevin works out of Vienna as a technical architect within Accenture's Emerging Technology & Software Innovation practice. He has a master's degree in Software Engineering, likes agile methodologies, functional programming, the actor model and microservices. Lately, he spends a lot of time with Elixir and the Erlang ecosystem."
