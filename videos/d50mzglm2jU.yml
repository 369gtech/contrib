# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


title: 'The future of Supervisor Binary Interface(SBI)'
language: English
recordingDate: 1550135866
description: "by Atish Patra\n\nAt: FOSDEM 2019\nhttps://video.fosdem.org/2019/AW1.126/riscvsbi.webm\n\n\nSupervisor Binary Interface (SBI) is one of the most fundamental\ninterfaces in RISC-V eco-system. It allows the operating system to\ninteract with the supervisor execution environment (SEE). The SEE always\nruns in higher privileged mode than the supervisor OS. It can be\na simple bootloader in low-end hardware platform, a hypervisor-provided\nvirtual machine in a high-end server, or simply machine mode software in\nbare metal systems. An unchecked rapid development of many RISC-V systems\ncould lead to incompatibilities between different systems SEE, preventing\nthe use of a common OS binary image. \n\nThe RISC-V ISA has defined SBI to provide a cleaner interface for the\nsupervisor OS which makes virtualization and bring-up of new hardware\nplatforms much easier. In hypervisor extended supervisor (HS) mode, an OS or\nhypervisor interacts with the machine through the same SBI as an OS\nnormally does from supervisor mode. An HS-mode hypervisor is expected to\nimplement the SBI for its virtualized supervisor (VS) mode guest. The\ncurrent RISC-V SBI only defines a few mandatory functions such as\ninter-processor interrupts (IPI) interface, reprogramming timer, serial\nconsole, and memory barrier instructions. Many important functionalities\nsuch as CPU/system power management are not yet defined due to\ndifficulties in accommodating modifications without breaking backward\ncompatibility with the current interface. \n\nThis talk presents the ongoing work to make SBI an extensible yet robust\nspecification. The proposal to extend SBI is based on the foundation\npolicy of RISC-V i.e. modularity and openness. It will always be\nbackward compatible with previous versions including the existing aka\nlegacy version. To achieve that, the focus will be only to develop a\nBase SBI extension that will contain feature list, version and vendor\ntype queries. Once that is ratified, the future extension such as\nCPU/system power management, vendor extensions can be developed in\nparallel. The use cases and calling convention of these extensions will\nbe discussed in details. We will also talk about a reference\nimplementation i.e. OpenSBI for the SBI specification. This project will\nbe licensed under most permissive software license which will allow\neverybody to reuse the OpenSBI code base in their favorite software\neco-system in whatever way choose to do so. This will help in reducing\nSBI fragmentation in future as well. \n\nIn the spirit of the open design nature of RISC-V, the goal of this\npresentation is to continue the open discussion leading to the\nformalizing RISC-V SBI specification simplifying both hardware and\nsoftware designs and doing so, contributing to further development of\nthe RISC-V ecosystem. \n\nRoom: AW1.126\nScheduled start: 2019-02-02 12:30:00+01"
