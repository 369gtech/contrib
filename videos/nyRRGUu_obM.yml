# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: '[GDG Cloud Nantes]¬†Resiliency and Availability Design Patterns for the Cloud'
language: French
recordingDate: 1611312909
description: "Conseils pour cr√©er des architectures r√©siliantes aux pannes\nNous avons traditionnellement construit des architectures robustes en essayant d'√©viter les bugs ou les erreurs de d√©ploiement, ou en testant des parties du syst√®me de mani√®re isol√©e. Cependant, les techniques modernes de d√©veloppement adoptent une approche tr√®s diff√©rente: accepter l'√©chec au lieu d'essayer de l'√©viter. Les architectures r√©siliantes am√©liorent l'observabilit√©, tirent parti de mod√®les bien connus tels que la d√©gradation partielle, les d√©lais d'attente et les disjoncteurs, mais √©galement de nouveaux mod√®les tels que l'architecture √† base de cellules et le shuffle sharding. Dans cette session, je passerai en revue les mod√®les les plus utiles pour la construction de syst√®mes r√©siliants et je montrerai en particulier comment VOUS pouvez b√©n√©ficier de ces mod√®les dans VOS applications.\n\nResiliency and Availability Design Patterns for the Cloud\nWe have traditionally built robust architectures by trying to avoid mistakes or failures in production, or by testing parts of the system in isolation. However, modern techniques take a very different approach: embracing failure instead of trying to avoid it. Resilient architectures enhance observability, leverage well-known patterns such as graceful degradation, timeouts and circuit breakers but also new patterns like cell-based architecture and shuffle sharding. In this session, will review the most useful patterns for building resilient software systems and especially show the audience how they can benefit from the patterns.\n\nSpeaker\nSebastien Stormacq, Developer ü•ë Advocate, Amazon Web Services\n\nhttps://stormacq.com/about/index.html"
