# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - android
    - craftsmanship
    - kotlin
    - lisp
    - java
title: 'Refactoring a large and complex Java application to Kotlin by Irwan Syahrir'
language: English
recordingDate: 1557993658
description: "As one of those Java programmers who feel energised and inspired by Kotlin, I want to use it right away in my project. It is an internet banking application for the business market redesigned and redeveloped in 2015 to comply with ISO 20022 (Universal financial industry message scheme). By the time it was first launched in 2017, the codebase was already \"modern\" enough with Java 8. However, like most complex java applications it still suffers, among others: POJO boiler plate in its domain and DTO classes, aggressive null-checks due to downstream data we consume, and less readable code caused by a combination of the previous points.\n\nAdopting Kotlin in the codebase, especially due to its interoperability, can be seen as a refactoring or a way to potentially improve the codebase with Kotlin's features. Here I will present a critical analysis of the refactoring with the focus on performance and readability of the resulting code."
