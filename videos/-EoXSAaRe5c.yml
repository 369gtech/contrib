# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - c++
    - cloud
    - startup
    - architecture
    - javascript
    - java
    - spring
    - 'c#'
title: 'RSocket - Future Reactive Application Protocol by Oleh Dokuka @ Spring I/O Bridge'
language: English
recordingDate: 1591963021
description: "Spring I/O Bridge (online conference) - 15 May 2020\n\nSlides: https://www.icloud.com/keynote/0hQ06PXKGNOTbCe5L6y_JRYag#RSocket_-_the_future_reactive_protocol_(SMALL_TALK)\n\nGitHub repo: https://github.com/OlegDokuka/rsocket-crosslanguage-example\n\nAre you making microservices/cloud-native applications? Are you frustrated by slow REST? Tired of unreliable gRPC? Do you need faster client-server communication, but donâ€™t want to invent your own WebSocket-protocol? RSocket is a new application-level protocol capable of reactive streaming that can be used to simplify the way enterprises build and operate cloud-native applications. It enables traditional enterprise developers to build sophisticated, cloud-native, distributed applications.\n\nRSocket is transport agnostic and can be used on top of any transport protocol like TCP/Aeron or even on top of HTTP/2 or WebSocket. RSocket has various interaction models so it can satisfy the needs of today applications. The protocol is agnostic when it comes to programming languages, message formats, and API architecture. Any developer can use RSocket to meet all business requirements. RSocket simplifies life for any startup or enterprise, whether it is used in a protocol implementation like Java, C#, C++, JavaScript or deployed in an RPC framework.\n\nIn this presentation, we are going to cover all these cases and concepts and answer why, when and how you can start using RSocket today and how high traffic giants like Facebook, Netflix and others have adopted RSocket."
