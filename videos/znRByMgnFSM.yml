# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - craftsmanship
    - architecture
    - java
title: 'Sławomir Sobótka -- Czego mama nigdy nie mówiła Ci na temat testowania automatycznego'
recordingDate: 1394181340
description: "Bio:\n\nSławomir Sobótka --\nProgramujący architekt aplikacji specjalizujący się w technologiach Java i efektywnym wykorzystaniu zdobyczy inżynierii oprogramowania.\n\nTrener i konsultant w firmie Bottega IT Solutions (http://bottega.com.pl).\n\nEntuzjasta Software Craftsmanship.\nDo jego zainteresowań należy szeroko pojęta inżynieria oprogramowania: architektury wysokowydajnych systemów webowych (w szczególności CqRS), modelowanie (w szczególności DDD), wzorce, zwinne procesy wytwórcze. Hobbystycznie interesuje się psychologią i kognitywistyką.\nW wolnych chwilach działa w community jako: prezes Stowarzyszenia Software Engineering Professionals Polska (http://ssepp.pl), lider lubelskiego Java User Group, publicysta w prasie branżowej i blogger.\n\n\nPrezentacja:\nCzego mama nigdy nie mówiła Ci na temat testowania automatycznego\nJęzyk: PL\n\nW ciągu godziny pochylimy się nad typowymi problemami, przeglądając mniej lub bardziej znane strategie, taktyki, techniki i narzędzia radzenia sobie z tymi problemami:\n\n    Eksplozja kombinatoryczna przypadków testowych\n    Powolne restarty serwera i żmudne klikanie w ekrany\n    Koszt stworzenia i utrzymania testów\n    Nieaktualna dokumentacja (nikt jej nie czyta ani nie aktualizuje)\n    Problem z komunikacją -- brak zrozumienia celów biznesowych, biznes nie rozumie systemu\n    Kosztowne w utrzymaniu skrypty do \"wyklikania\"\n    Architektura wspierająca testability (zależności, rozwarstwienie i rygor warstw)\n    Delikatne testy (fragile), Nieczytelne testy, Wolne testy\n\nA przy okazji rozprawimy się z mitami:\n\n    \"Konieczność 80+% pokrycia kodu testami\" -- a może lepiej w 100% przetestować krytyczne 20% kodu?\n    \"Testy wpływają korzystanie na design\" -- tak, pod warunkiem, że skill programisty na po pozwala\n    \"You are not allowed to write a single line of production code until you have written a failing test\" -- czasem tak, jednak w praktyce: zależy kto, zależy co, zależy jak..."
