# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - security
    - functional
title: 'YOW! Lambda Jam 2018 - Fraiser Tweedale -Taming the C monster: Haskell FFI techniques'
recordingDate: 1533859200
description: "Haskell has a powerful foreign function interface (FFI) for interfacing with C libraries. Haskell is a great language for building libraries and tools, but interoperability requirements or time constraints can make the FFI a compelling option.\n\nBinding to a non-trivial C library presents several challenges including C idioms, memory management, error handling and more. This presentation will address a selection of these concerns, using hs-notmuch, a binding to the notmuch mail indexer, as a case study. We will discuss:\n\n   1. FFI basics and tools to assist binding authors\n 2. Working with \"double pointer\"-style constructors\n  3.  Working with iterators; how to do lazy iteration\n   4. How to use Haskell's garbage collector to manage lifecycles of external objects, and \"gotchas\" encountered\n    5. Using types to enforce correct use of unsafe APIs\n    6. Performance considerations (including profiling results)\n\nThe presentation will conclude with a mention of some important FFI concepts that were not covered (e.g. callbacks) and a look at how hs-notmuch is being used in the Real World.\n\nDevelopers familiar with C will get the most out of this talk (because there will be limited time to explain C idioms, memory management, etc). To varying degrees, most of the concepts and techniques discussed will apply to other languages' FFIs.\n\nFraser works at Red Hat on the FreeIPA identity management system,\nDogtag Certificate System and related projects. He's interested in security,\ncryptography and functional programming.  Jalape√±o aficionado.\n\nFor more on YOW! Conference, visit http://www.yowconference.com.au"
