# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - .net
    - 'c#'
title: 'Потоки (stream) и файлы (file) в C# - Учим Шарп #16'
language: Russian
recordingDate: 1547145375
description: "Потоки (stream) и файлы (file) в языке программирования C#\n\nНа этом занятии мы познакомимся с основными возможностями языка программирования C# для работы с потоками (stream) и наиболее часто используемой их разновидностью для работы с файлами (FileStream). Научимся безопасно работать с потоками с использованием конструкций try/catch/finally и  using. Также поговорим про кодировки.\n\nПодписывайтесь на информационные каналы курса, чтобы ничего не пропустить и не потерять информацию:\nЗакрытый чат для участников курса: https://vk.cc/8Ev4Gv \nРассылка с оповещениями в ВК: https://vk.cc/86Y7Pa\n\nПодписывайтесь на мои социальные сети, там много всего интересного и полезного: \nhttps://vk.com/codeblog\nhttps://tele.click/codeblog\nhttps://zen.yandex.ru/codeblog\n\nПоддержать канал: https://www.donationalerts.ru/r/shwanoff\n\nКстати, меня зовут Шванов Вадим, и я программист на языке C# уже больше 8 лет, а также я являюсь автором ресурсов для разработчиков CODE BLOG. На этом канале я рассказывают про IT, технологии и веду курс C# с нуля под названием Учим Шарп. В его рамках мы рассматриваем язык программирования c# с нуля, синтаксис, структуры данных, алгоритмы, паттерны проектирования и многое другое. Эти уроки c sharp подойдут для начинающих и для тех кто хочет подробнее изучить платформу .net и среду разработки visual studio. Для меня важно не только показать практическое применение языка си шарп и платформы dotnet, но и  объяснить базовые идеи программирования. Уроки с# выходят как минимум два раза в неделю в понедельник и четверг в 20-00. C# курс рассчитан на то, чтобы изучить программирование с нуля. Все занятия веду я сам - опытный программист c#. Разработка ведется в IDE visual studio c#. Подписывайтесь, впереди еще много интересного и полезного об it, программировании как для  начинающих, так и для более опытных программистов c#.\n\nПространство имен System.IO в .NET — это область библиотек базовых классов, посвященная службам файлового ввода-вывода, а также ввода-вывода из памяти. Подобно любому пространству имен, в System.IO определен набор классов, интерфейсов, перечислений, структур и делегатов, большинство из которых находятся в mscorlib.dll. В дополнение к типам, содержащимся внутри mscorlib.dll, в сборке System.dll определены дополнительные члены пространства имен System.IO. Обратите внимание, что все проекты Visual Studio 2010 автоматически устанавливают ссылки на обе сборки.\n\nМногие типы из пространства имен System.IO сосредоточены на программных манипуляциях физическими каталогами и файлами. Дополнительные типы предоставляют поддержку чтения и записи данных в строковые буферы, а также области памяти. Ниже кратко описаны основные (неабстрактные) классы, которые дают понятие о функциональности System.IO:\n\nBinaryReader, BinaryWriter\nЭти классы позволяют сохранять и извлекать элементарные типы данных (целочисленные, булевские, строковые и т.п.) в двоичном виде\n\nBufferedStream\nЭтот класс предоставляет временное хранилище для потока байтов, которые могут затем быть перенесены в постоянные хранилища\n\nDirectory, DirectoryInfo\nЭти классы используются для манипуляций структурой каталогов машины. Тип Directory представляет функциональность, используя статические члены. Тип DirectoryInfo обеспечивает аналогичную функциональность через действительную объектную ссылку\n\nDriveInfo\nЭтот класс предоставляет детальную информацию относительно дисковых устройств, используемых данной машиной\n\nFile, FileInfo\nЭти классы служат для манипуляций множеством файлов данной машины. Тип File представляет функциональность через статические члены. Тип FileInfo обеспечивает аналогичную функциональность через действительную объектную ссылку\n\nFileStream\nЭтот класс обеспечивает произвольный доступ к файлу (т.е. возможности поиска) с данными, представленными в виде потока байт\n\nFileSystemWatcher\nЭтот класс позволяет отслеживать модификации внешних файлов в определенном каталоге\n\nMemoryStream\nЭтот класс обеспечивает произвольный доступ к данным, хранящимся в памяти, а не в физическом файле\n\nPath\nЭтот класс выполняет операции над типами System.String, содержащими информацию о пути к файлу или каталогу в независимой от платформы манере\n\nStreamWriter, StreamReader\nЭти классы используются для хранения (и извлечения) текстовой информации из файла. Эти классы не поддерживают произвольного доступа к файлу\n\nПодробный курс по языку программирования C#:\nhttps://www.youtube.com/watch?v=p9QxqrwkPbA&list=PLIIXgDT0bKw4OmiZ9yGmShKsY0XncViZ8\n\nПодробный курс по структурам данных на языке программирования C#:\nhttps://www.youtube.com/watch?v=hZYQmNJBsKM&list=PLIIXgDT0bKw4DB9toGU73ntyYIZV7aJi5\n\nПодробный курс по алгоритмам сортировки на языке C#:\nhttps://www.youtube.com/watch?v=PD1Nn4fHcts&list=PLIIXgDT0bKw4n6pwBjymd3wCPyQ3_SLMo\n\nРазговоры о программировании, мотивации, и ответы на IT вопросы:\nhttps://www.youtube.com/watch?v=cjjA6SQ_i3Y&list=PLIIXgDT0bKw7oKRr2c1n-e_dUgR8Aqdsi\n\n#программирование #программист #csharp #ityoutubersru #codeblog"
