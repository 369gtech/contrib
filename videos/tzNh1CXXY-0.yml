# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Envoy Mesh Acceleration: From Iptables to Fully BPF - Xiyao Zhang & Xu Liu, Tencent'
language: English
recordingDate: 1639859074
description: "Don’t miss out! Join us at our next event: KubeCon + CloudNativeCon Europe 2022 in Valencia, Spain from May 17-20. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.\n\nEnvoy 网格加速从 iptables 到完全 BPF | Envoy Mesh Acceleration: From Iptables to Fully BPF - Xiyao Zhang & Xu Liu, Tencent\n\neBPF sockmap 已经成为一种为服务网格加速 Envoy 和容器之间本地进程通信的理想方法。然而，这一方法依赖于 iptables 来实现透明的流量劫持。这已经成为了系统性能的主要瓶颈。本次讨论将从针对当前解决方案、来自社区的 Cilium 以及我们去年在 KubeCon China 中引入的轻量级方法开始进行详细调查。我们将解释 iptables 重定向如何影响入站和出站流量上的 sockmap 匹配结果。然后我们将展示我们的第一个类决方案，此类方案根本不使用 iptables。此类解决方案：1. 通过挂钩绑定调用，使用 eBPF 定向入站流量到 envoy。2. 使用 eBPF 执行透明出站流量重定向。3. 为 Daemonset 部署和维护提供集成的控制面，并通过注释和配置地图进行完全控制。\n\neBPF sockmap has been a desirable approach to accelerate local process communication between Envoy and container for Service Mesh. This approach, however, relies on iptables for transparent traffic hijacking. This has become a major bottleneck of the system performance. This talk will start with a detailed survey on the current solutions, Cilium from the community and the lightweight approach we introduced in KubeCon China last year. We will explain how the iptables redirections influence the sockmap match results on both inbound and outbound traffic. We will then present our first-of-the-kind solution, that does not use iptables at all. The solution: 1.Uses eBPF to direct inbound traffic to envoy, by hooking bind calls. 2.Uses eBPF to implement transparent outbound traffic redirection. 3.Provides an integrated control plane, for Daemonset deployment and maintenance, and full control by annotation and configmap."
