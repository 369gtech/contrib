# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - career
    - c++
title: 'CppCon 2018: Arthur O''Dwyer “Return Value Optimization: Harder Than It Looks”'
language: English
recordingDate: 1541142002
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018\n—\nJoin Arthur O'Dwyer on a deep dive into Return Value Optimization and related topics. \n\nEven C++03 allowed the compiler to \"elide\" copy construction in certain cases. We'll start with an explanation of the calling convention on a typical machine, showing where the mysterious \"return slot\" lives, and why it makes sense that C++03 allowed copy elision in certain special cases (but not others). Then we'll show how C++11 (and a subsequent defect report) upped the game by quietly turning the remaining copies into moves, so that the commonly received wisdom these days is that `return std::move(x)` is never necessary and often a pessimization. \n\n...Or is it? We'll show some real-world examples where `return x` quietly copies a large object instead of moving it. We'll explain the little-known notion of a \"converting constructor\", contrast it with \"conversion operator\", and show the precise way in which C++17 drops the ball on these examples. Finally, Arthur implemented a Clang compiler warning to detect and suggest fixes for problematic return statements; he'll walk through the relatively painless process of creating that diagnostic, and perhaps inspire you to contribute to Clang yourself!\n— \nArthur O'Dwyer\n\nArthur O'Dwyer started his career writing pre-C++11 compilers for Green Hills Software; he currently writes C++14 for Akamai Technologies. Arthur is the author of \"Colossal Cave: The Board Game,\" \"Mastering the C++17 STL\" (the book), and \"The STL From Scratch\" (the training course). He is occasionally active on the C++ Standards Committee and has a blog mostly about C++.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
