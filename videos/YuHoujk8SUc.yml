# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Rust : sûr et concurrent. Mais comment fait-il ? (Benjamin Coenen)'
language: French
recordingDate: 1634026866
description: "Vous avez sûrement déjà entendu parler du langage Rust et de ses avantages. Mozilla a créé ce langage pour répondre à différentes problématiques qu’ils ont eu avec le langage C++ sur le code source de Firefox. C’est un langage assez bas niveau qui pourtant ne nous laisse pas gérer directement la mémoire nous-même comme en C, nous empêche de créer des data races et nous permet d’écrire du code multithread qui soit sans comportements indéfinis.\n\nEn découvrant ses caractéristiques, on s'interroge:\n\nComment fait-il pour se passer d’un garbage collector ? Pour combattre les undefined behavior et data race, quel recette « magique » Rust utilise-t-il ? On a l’impression que c’est de la magie noire seulement compréhensible par des chercheurs sauf que pas du tout. Je vous propose de découvrir ensemble et simplement comment le langage Rust arrive à tenir ses promesses et bien plus encore en partie grâce à son système de types."
