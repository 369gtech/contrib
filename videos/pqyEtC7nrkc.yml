# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Angular Master Podcast 14: Let''s talk about the future of Angular with Minko Gechev'
recordingDate: 1635840014
description: "Hi everyone, this is Dariusz Kalbarczyk co-founder of NG-Poland.pl & JS-Poland.pl. Welcome back to Agular Master Podcast. Together with Manfred Steyer - Speaker, Trainer, Author from angulararchitects.io. We discuss everything related to our favorite framework. Today we have some special guests from Angular Team:  Minko Gechev.\nWe talk about, among others:\n\n1. The Angular team is currently working on ideas for making Angular-Modules optional. However, originally, they were not even planned for Angular. Why did the Angular Team implement them even though?\n\n2. What are the challenges of making Angular-Modules optional?\n\n3. Who could benefit the most from optional Angular-Modules and who should stick with Angular-Modules?\n\n4. Can you tell us a bit about how the Angular-Teams plan to implement optional Angular-Modules and how this would look like for people developing with Angular?\n\n5. I’ve seen you are currently collecting case studies for Micro Frontends. What are your current learnings you’ve gained from them?\n\n6. Are there ideas to directly support Micro Frontends by Angular and/or the CLI? How could this look alike?\n\n7. Some people in the community are really looking forward to going fully zone-less. It’s also on the roadmap. How could this work technically? How could Angular find out that it’s time to do change detection?\n\n8. If we go zoneless, what would this change for Angular devs?\n\n9. Some years ago, the Angular team experimented with partial hydration. The idea was to just download an index.html upfront. Then, the rest could be downloaded as needed. Where did these experiments lead to and what plans do you have for this topic?\n\n10. With Angular 6 we already got Angular Elements for wrapping Angular Components into Web Components. Frankly, since then, it didn’t evolve that much. What’s the future of it?\n\n11. What can we expect from Angular 13?\n\n12. What do you expect from the future of Angular after version 13?\n\n\nhttps://ng-poland.pl\nhttps://js-poland.pl\nhttps://angularmaster.dev\nhttps://www.angulararchitects.io"
