# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - functional
title: 'Breaking Dependencies: The SOLID Principles - Klaus Iglberger - CppCon 2020'
language: English
recordingDate: 1600939826
description: "https://cppcon.org/\nhttps://github.com/CppCon/CppCon2020\n---\n\nSOLID is an abbreviation for five of the most important software design principles:\n- (S)ingle Responsibility Principle\n- (O)pen-Closed Principle\n- (L)iskov Substitution Principle\n- (I)nterface Segregation Principle\n- (D)ependency Inversion Principle\n\nFor almost two decades, these principles have proven to be a valuable set of guidelines to cope with software dependencies. Although initially introduced as guidelines for object-oriented programming, they have become a universal set of guidelines that can be used equally well for procedural, functional or generic programming. In this talk I'll recap the SOLID principles and explain why they form such a valuable set of universal design guidelines. Also, I'll go into detail about several common misconceptions.\n\n---\nKlaus Iglberger is a freelancing C++ trainer and consultant. He has finished his PhD in computer science in 2010 and since then is focused on large-scale C++ software design. He shares his experience in popular advanced C++ courses around the world (mainly in Germany, but also the EU and US). Additionally, he is the initiator and lead designer of the Blaze C++ math library (https://bitbucket.org/blaze-lib/blaze/src/master/) and one of the organizers of the Munich C++ user group (https://www.meetup.com/MUCplusplus/).\n\n---\nStreamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk\nevents@digital-medium.co.uk"
