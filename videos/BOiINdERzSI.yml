# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - unix
    - web
    - mobile
    - security
title: 'The Web Is Dead! Long Live The Web!'
language: English
recordingDate: 1517944056
description: "It's time to build for the web, again.\n\nIt was declared dead[1], largely in favour of native apps. But the web, the biggest and most open platform we have, is fighting back[2]—it's caught up with features only available in proprietary, native APIs, including making websites feel more 'app-like'. Sure, native development has it's place—but only if you're big, or lucky. For you as a developer, the web provides a frictionless way to reach users (while providing 'app-like features') all via a single href.\n\nFor a history lesson: in 2007, smartphones hit the mainstream. Steve Jobs announced the first iPhone. At the time, Apple famously (albeit briefly) resisted \"apps\", instead directing developers to 'write amazing Web 2.0 and Ajax apps'[3].\n\nOf course, native apps quickly came to dominate, as we now have closed app ecosystems on these billions on mobile devices. This is not without good cause; it's difficult to imagine the next trendy social platform or addictive, casual game appearing as anything but \"the latest native app\". On the other hand, these ecosystems are dominated by a few behemoths. The average mobile user spends the majority of their time in just a few apps—no prizes for guessing what they are—and installs an average of zero[5] or one[6] new app per month.\n\nBut the web has maintained its incredible reach since before the Age of Apps. Sites that deliver content have been able to do it whether the user's browser was automatically updated last night or is an unpatched mess of security holes from several years ago.\n\nModern, 'evergreen'[4] browsers—like Chrome, Edge, Firefox and Safari—have also helped drive a rapid iteration of APIs on the web. These are the 'triple-A' of browsers, and as developers, we can target them via the best of the best APIs—because we can be confident they're up to-date—while shipping the same or a similar website to old browsers. This all works because, fundamentally, HTML is still the same as it was ten or even twenty years ago.\n\nToday, we can build what's called a \"Progressive Web App\", or PWA. This describes a site using the group of APIs that let the web act in an 'app-like' way—but more importantly, it's the phrase you tell your manager or your investors who only want \"an app\"! These APIs include:\n* Websites that work and load on a poor or or offline connection\n* That can push native notifications to users (where accepted)\n* And which can have an icon on a user's home screen, or in any place an 'App' might appear\n\nIn this talk, I'll show you how to create a Progressive Web App and demonstrate the APIs that make up this definition, and talk about the future of the standard, open web.\n\nEVENT:\n\nLinux.conf.au 2018 (LCA2018)\n\nSPEAKER:\n\nSam Thorogood\n\nPERMISSIONS:\n\nThe original video was published with the Creative Commons Attribution license (reuse allowed).\n\nCREDITS:\n\nOriginal video source: https://www.youtube.com/watch?v=ogMjMN1G6V8"
