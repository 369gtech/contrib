# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Вагиф Абилов — Типизированный или динамический API? Дайте два!'
language: Russian
recordingDate: 1502095168
description: "DotNext\_2020 Piter\n15-18 июня, Online\nПодробности и билеты: https://bitly/dotnext2020piter\n\n Уже несколько лет разработчики могут использовать в C# элементы динамических языков, так что, определяя API, можно сделать его доступным для данных типа dynamic Заманчиво для отдельных сценариев, но очень не хотелось бы отказываться от преимуществ статически заданных типов Можно ли совместить два подхода? Если да, то насколько это трудоёмко? И как при таком подходе избежать дупликации кода? Этому всему и посвящен доклад В основе презентации — принципы реализации мультиплатформенной опенсорсной библиотеки, написанной и поддерживаемой докладчиком В процессе доклада показывается, как с нуля написать подобную библиотеку для обработки SQL команд"
