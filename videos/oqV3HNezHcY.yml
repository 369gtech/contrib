# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
    - performance
    - security
    - embedded
title: 'CppCon 2019: Matthew Butler “If You Can''t Open It, You Don''t Own It”'
language: English
recordingDate: 1570690804
description: "http://CppCon.org\n—\nDiscussion & Comments: https://www.reddit.com/r/cpp/\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019\n—\nFor the past 30 years, we have dealt with penetrations into secure systems almost exclusively from the software layer: applications and operating systems. With the advent of side channel exploits like Spectre, Meltdown and Foreshadow, hardware designs are now battlefields. In this talk, we’ll look at four real-world hardware attacks that changed the way we think about secure systems and see how hardware exploit strategies drive software exploit strategies.\nAnd what that means for the future of Modern C++.\nWe’ll explore four lines of attack:\n  Roots of Trust,\n  Side channels exploits,\n  How physical access creates opportunities, and\n  How our supply chains often create our greatest vulnerabilities.\nAs the Standards Committee puts the final touches on C++20 this year, we’ll use these as the framework to get an inside look at the committee’s efforts to build a safer, more resilient language. We’ll see:\n  How new language features, like Concepts, Contracts and Ranges, help (or hurt) our ability to write secure software.\n  How Undefined Behavior is explicitly used by compiler developers to generate high performance machine code and what that means for software security.\n  Which proposals coming for C++23, like Zero-overhead deterministic exceptions and secure_clear, will help address some of the worst vulnerabilities in the language.\n\nThis talk is about how our language and design choices affect our system’s ability to withstand attack. It’s also about how the evolution of the language is addressing the insecure world it operates in and the places where it still falls short.\n— \nMatthew Butler\nLaurel Lye LLC\nmbutler@laurellye.com\nMatthew Butler has spent the last three decades as a systems architect and software engineer developing systems for network security, law enforcement and the military. He primarily works in signals intelligence using C, C++ and Modern C++ to build systems running on hardware platforms ranging from embedded micro-controllers to FPGAs to large-scale airborne platforms. Much of his experience has come in either building systems that defend against attackers or building highly sensitive systems that are targets. He is actively involved in the C++ community and is on various planning committees for C++Now and CppCon as well as being a speaker at both. He is also a member of the ISO C++ Standards Committee.\n\nOver the past thirty years, he has learned the harsh lessons on how we often write systems that fail, not because they don't scale, but because they aren't designed to be secure.\n\nHe can be reached at mbutler@laurellye.com\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
