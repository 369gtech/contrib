# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - web
    - react
    - testing
    - craftsmanship
    - javascript
title: 'React and APIs - Full Tutorial - Hacker News API Application'
language: English
recordingDate: 1569936678
description: "Learn how to use APIs with React in this intermediate tutorial. We're going to be creating a small application in React that calls the Hacker News API. We'll be looking at React memo, Axios (to make API calls), styled components, and finally we will test our work using React Testing Library.\n\nOnce we have done all this we will run our application through Lighthouse (a browser extension) that allows us to test for accessibility, performance and so much more. We will be making 500+ automated API calls in this application, and I want to show you how to use memo with React so that we can avoid making multiple network calls if we already have the data. \n\nüíª Code: https://github.com/karlhadwen/newsreader\n\nüé• Video by Karl Hadwen. Check out his YouTube channel: https://youtube.com/c/cognitivesurge\nüê¶ Karl on Twitter: @karlhadwen\n\n‚≠êÔ∏è Course Contents ‚≠êÔ∏è\n‚å®Ô∏è (0:00:00) Introduction (what are we building?), tech stack talk\n‚å®Ô∏è (0:01:50) Using create-react-app as our base\n‚å®Ô∏è (0:03:30) Stripping out the files & content that we do not need\n‚å®Ô∏è (0:05:00) Refactoring to named exports\n‚å®Ô∏è (0:08:35) Modifying our .env file\n‚å®Ô∏è (0:09:15) Scaffolding our application\n‚å®Ô∏è (0:10:15) Looking at the Hacker News Api\n‚å®Ô∏è (0:11:50) Looking at all the news article Ids\n‚å®Ô∏è (0:12:58) Adding Axios using Yarn\n‚å®Ô∏è (0:13:00) Creating our hnApi.js service file\n‚å®Ô∏è (0:15:07) Adding the ability to get all story Ids from HN Api\n‚å®Ô∏è (0:17:14) Starting work on App.js\n‚å®Ô∏è (0:22:30) Adding useEffect to App.js to show all story Ids\n‚å®Ô∏è (0:30:00) Explaining how useEffect works\n‚å®Ô∏è (0:36:00) Creating our StoriesContainer.js container/component\n‚å®Ô∏è (0:37:50) Adding the ability to get stories from HN Api\n‚å®Ô∏è (0:39:50) Demonstrating the results that we receive from the HN Api\n‚å®Ô∏è (0:41:30) Creating our Story.js component file\n‚å®Ô∏è (0:43:15) Adding our Story component to the StoriesContainer component\n‚å®Ô∏è (0:44:10) Adding storyId as a prop to the Story.js component\n‚å®Ô∏è (0:46:40) Adding state to our Story.js component\n‚å®Ô∏è (0:47:10) Using useEffect to get a story in our Story.js component\n‚å®Ô∏è (0:47:40) Adding validation when getting stories\n‚å®Ô∏è (0:49:00) Dumping our stories onto the page\n‚å®Ô∏è (0:49:55) Building out the Story.js component with real data\n‚å®Ô∏è (0:53:20) Adding a selector for the story fields\n‚å®Ô∏è (0:56:00) Adding styled components\n‚å®Ô∏è (0:57:00) Building out our StoryStyles.js file using styled components\n‚å®Ô∏è (0:59:00) Adding a title to StoriesContainer.js\n‚å®Ô∏è (1:00:00) Adding a StoryWrapper to our Story.js component\n‚å®Ô∏è (1:01:50) More work on styling\n‚å®Ô∏è (1:02:30) Adding styling for StoryMeta\n‚å®Ô∏è (1:03:55) Adding styling for StoryMetaElements & styled component props\n‚å®Ô∏è (1:04:55) Adding our styled components to our Story.js component\n‚å®Ô∏è (1:11:30) Adding StoriesContainerStyles for more styling on the container\n‚å®Ô∏è (1:12:05) Looking at adding global styles (createGlobalStyle)\n‚å®Ô∏è (1:13:00) Adding our container styles to StoriesContainer.js\n‚å®Ô∏è (1:14:55) Brief look at the React profiler\n‚å®Ô∏è (1:16:00) Quick run through as to what we have built so far\n‚å®Ô∏è (1:18:10) Making our time display properly using mapTime.js\n‚å®Ô∏è (1:22:00) Adding InfiniteScroll to our application (custom hook)\n‚å®Ô∏è (1:22:40) Constants to be used by InfiniteScroll for per page items\n‚å®Ô∏è (1:39:05) Adding debounce functionality for scrolling\n‚å®Ô∏è (1:42:00) Adding a fixture folder with fixtures for tests\n‚å®Ô∏è (1:46:00) Testing! Lets test App.js\n‚å®Ô∏è (1:48:00) Adding react-testing-library to our application\n‚å®Ô∏è (1:59:00) Adding Jest coverage (good practise to do so)\n‚å®Ô∏è (2:02:00) Testing the StoriesContainer.js\n‚å®Ô∏è (2:03:40) Testing the Story.js component\n‚å®Ô∏è (2:10:00) Testing the HnApi.js file\n‚å®Ô∏è (2:22:18) Looking at our coverage and more testing!\n‚å®Ô∏è (2:22:53) Collecting coverage from the right places\n‚å®Ô∏è (2:25:43) Looking at React memo\n‚å®Ô∏è (2:27:33) Adding memo to Story.js to prevent additional Api calls\n‚å®Ô∏è (2:29:18) Overview of what we have achieved!\n‚å®Ô∏è (2:30:29) Running our application through Lighthouse!\n‚å®Ô∏è (2:33:00) Thanks for watching, I hope you learned a lot!\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://www.freecodecamp.org/news\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_center?add_user=freecodecamp"
