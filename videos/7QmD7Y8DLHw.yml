# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Q&A session with Martin Odersky and Scala 3 team'
language: English
recordingDate: 1621242701
description: "Scala 3 is here! Watch a Q&A session with Martin Odersky and the team working on the latest version of this language from Scala 3 Release Party (23.04.2021).\n\nHere’s a list of the questions that guests were asked during the session:\n\n13:05 → Question from Tomek Godzik: \n\nWhat new tooling feature would you love to see implemented in Scala 3, but that did not exist in Scala 2?\n\n21:28 → Question from Daniela Sfregola: \n\nWhere can people learn about Scala 3? What are the resources/courses we have out there that can help us learn more about this new, powerful Scala language?\n\n30:22 → Question from Wiem Zine Elabidine:\n\nIs there a plan to enable SAM to a trait that has a polymorphic function?\n\n31:06 → Question from Daniel Spiewak: \n\nWhat features of Scala 3 are you most excited to see the community adapt? What are the things you expect will give rise to a whole new class of expressiveness, safety, and comprehensibility that never could have happened on Scala 2. What are the features that you believe will benefit the ecosystem most? \n\nQuestions from the audience:\n\n43:35 → General question on the roadmap for Scala 3.1, onward changes, and SIP process. The SIP process was put somewhat on hold going on from Scala 2 to 3. Will this change back to \"normal\"? When?\n\n49:17 → What's being done to ensure that the main projects in the ecosystem (Play, Spark) support Scala 3? What's the outlook for Akka for Scala 3?\n\n51:34 → Is there a possibility for functional effects to be part of the language feature in future?\n\n52:47 → With GraalVM gaining traction, does it change anything for Scala native?\n\n55:58 → Scala 3's Macro system is really amazing but it means a huge rewrite effort for all metaprogramming libraries. Can we expect that five years from now, when Scala 4 happens there won't be this kind of radical change? \n\n58:55 → Are there plans to bring back macro annotations?\n\n1:00:36 → Will Scala 3 contain the `Not` type? I didn't find it in RC2.\n\n1:01:12 → I see Scala.js working nicely with Scala 3 code, could it be extended to transpile Jjava source code too (mixed in the same project)?\n\n1:04:28 → Martin, what is your casual working day? How much time you spent on coding, on management, on leading, etc..?\n\n1:06:16 → How fast is the new compiler compared to the Scala 2 compiler?\n\n1:09:08 → Metals: Will its features be used in IntelliJj Idea? \n\n1:10:44 → Are there some plans to improve for-comprehension in Scala 3. In particular, to make it work like F#'s computation expressions?\n\n1:13:10 → How to convince people that Scala 3 is a better vehicle for teaching programming than Python?\n\n1:16:19 → What new programming patterns were invented in Scala 3, that are absent in Scala 2?\n\nFor more info about Scala 3 Release Party go here: https://bit.ly/Scala3Party"
