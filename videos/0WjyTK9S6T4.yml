# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - testing
    - craftsmanship
    - 'code design'
    - tdd
title: 'Adrian Bolboaca - Evolutionary Design – Refactoring Techniques'
language: English
recordingDate: 1502882925
description: "Adrian was involved in developing software for domains like energy, ecommerce, banking, customsand ERP/CRM. He has been working with companies from Netherlands, Romania, Italy, France and Germany, and he is knowledgeable in software technical domains like: clean code, test driven development, simple design, emergent design, working effectively with legacy code.\n\nAs a continuous learner and challenger of existing ideas and concepts, Adrian is a supporter of movements that give new ideas on how to continuously improve software and that embrace the values of software quality and efficiency. He facilitated many code retreats in Romania, Belgium, France, Germany, Netherlands, Bulgaria, Finland and has a keen interest in serious games and using gamestorming for continuous improvement.\n\nHe is fluent in Romanian, English and French, but when it comes to programming languages he supports language agnosticism, since he strongly believes that a programming language is only a tool towards higher level software concepts.\n\nAs a constant participant to conferences and workshops, he is recognized for challenging ideas and getting people out of their comfort zone, not out of disrespect or lack of reverence for his peers, but out of his desire to show people that there are always things to learn.\n\n“I try to be a continuous learner and a continuous teacher, because I think good software comes from the skills of the people that are involved in the process, on each and every level. Whenever I write code I focus on reducing domain complexity to obtain maintainable software. I love to develop software that helps companies to improve their business, to implement solutions that improve their internal processes and to motivate teams to use their capabilities to yet another level.”\n\nTalk Summary\n\nIntroduction\nEvolutionary Design seems to be one of the black arts of software development. Test Driven Development brought the need of understanding how to evolve the code in order to solve a solution. Evolving the code is not done by magic, we evolve the code, the programmers. And we need specific techniques for that.\n\nThis talk will be an interactive one, presenting some of the most useful refactoring techniques for Evolutionary Design.\n\nProcess Mechanics\nWe will have a list of refactoring techniques that can evolve the design elements of the code. By design elements of the code, we mean functions, classes, variables, constants, etc.\nFor each of the refactoring technique, we will present purpose, context, mechanics, remarks.\nAlso for each one of them, we will show the code that evolves with the help of this specific technique."
