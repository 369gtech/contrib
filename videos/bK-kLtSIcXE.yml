# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - unix
    - testing
    - craftsmanship
    - java
    - functional
title: 'Make your testing Groovy'
recordingDate: 1484803299
description: "Paul King\nhttp://linux.conf.au/schedule/presentation/157/\nWe tend to take enormous care these days making sure our production code is highly refactored and easily maintainable but what about our test code?\r\nThis talk looks at the benefits of using an open source scripting language and utilising a high degree of automation rather than a vendor tool for unit, functional, acceptance, customer/BDD testing.\r\nThe talk uses Apache Groovy as an example testing language but also considers other polyglot options.\r\nGroovy happens to be an excellent choice as a scripting/testing language for JVM users but the techniques described in the talk are applicable to other similar languages.\r\nSimilarly, while specific forms of testing will be looked at, the techniques and lessons learned can be applied to other kinds of testing. Drivers and Runners discussed will include a selection from: Native Groovy, HttpBuilder, HtmlUnit, WebTest, Watij, Selenium, WebDriver, Tellurium, JWebUnit, JUnit, TestNG, Spock, EasyB, JBehave, Cucumber, Robot Framework, JMeter, ScalaCheck and FitNesse/Slim.\r\nSome techniques discussed will include all-pairs testing, model-driven testing, data-driven testing, constraint-programming based testing scenarios and code/test coverage.\r\nParticipants in this talk should leave with some new insights into possible testing approaches and techniques which they can take back and incorporate in their own projects."
