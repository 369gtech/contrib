# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - java
    - spring
title: 'Going Beyond Dependency Injection'
recordingDate: 1398812567
description: "Recorded at SpringOne2GX 2013 in Santa Clara, CA\nSpeaker: Mark Secrist\nMany developers who are learning the Spring Framework think of it as simply another mechanism for centralized dependency injection. While the framework does handle that responsibility quite well, the framework is so much more. In this session, we'll explore some of the building blocks and patterns used by the core framework as well as many of the other Spring projects. The result is that attendees will gain a better understanding of how to use the Spring Framework and learn how to build their own components that can leverage these same patterns. Topics we'll explore: \n- What is the benefit of centralized lifecycle management \n- Programming to interfaces \n- Leveraging the power of proxies \n- Using annotations \n- Understanding the template pattern\n\nDependency injection is one very important part of what the Spring Framework does. However, it is also a collection of very key patterns that we'll explore.\n- Centralized lifecycle management\n- Examining the BeanFactoryPostProcessor\n- Examining the BeanPostProcessor\n- How to write your own BeanPostProcessor\n- Programming to interfaces \n- Benefits of programming to interfaces \n- loose coupling \n- Examples of how Spring leverages this mechanism \n- How to leverage in your own Spring applications \n- Leveraging the power of proxies \n- How proxies work in Spring \n- How Spring uses them \n- Writing your own proxy-based solution \n- Using annotations \n- Examples of how Spring uses annotations \n- Using your own annotations \n- Understanding the template pattern \n- Purpose of template pattern \n- How Spring uses templates \n- Creating your own template"
