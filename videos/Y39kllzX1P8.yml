# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - java
title: 'With GC Solved, What Else Makes a JVM Pause?'
language: English
recordingDate: 1433236731
description: "Garbage collection—more specifically, GC pauses—has been a dominant cause of temporary stalls in Java code execution since the inception of the platform. But with GC pauses being a thing of the past in some commodity JVMs (and eventually in all, presumably), it turns out that many other things JVMs do besides GC can also cause significant program pauses. This session describes the main contributors to JVM pause behavior that rise to the surface once GC pauses are removed and discusses what you can do about them. It covers common causes such as Time To Safepoint (TTSP), lock deflation, weak and soft reference processing, class unloading, and code cache cleaning as well as various OS interactions that can disrupt JVM behavior.\n\n\nAuthor:\n John Cuthbertson\nJohn Cuthbertson has been a Hotspot JVM developer for almost 12 years for HP, Intel, Sun/Oracle, and Azul. At Sun/Oracle, John was one of the main developers on the G1 garbage collector. John is currently working on Azul's Continuously Compacting Concurrent Collector (C4) that ships as part of the Zing VM. John was a 2013 JavaOne Rock Star and was co-speaker on the talks \"Garbage-First Collector: Migration to, Expectations, and Advanced Tuning\", and \"Garbage-First Collector: Current and Future Adaptability and Ergonomics\"\nView more trainings by  John Cuthbertson at https://www.parleys.com/author/john-cuthbertson-1\n\nFind more related tutorials at https://www.parleys.com/category/developer-training-tutorials"
