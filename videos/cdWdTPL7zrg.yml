# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - ml
    - tensorflow
    - performance
    - python
    - embedded
title: 'Saul Shanabrook: metadsl: separating API from execution | PyData Austin 2019'
language: English
recordingDate: 1576694398
description: "\"Overview of motivation\nNew hardware (GPU, TPU, asic) and execution paradigm (distributed, polyhedral compilation)\nFragmented array ecosystem (Tensorflow, PyTorch, Tensor Comprehensions, numexpr)\nRequires reimplementing optimizations on all backends\nRequires end user libraries (like scikit-learn) to support all backends\nDifferent APIs for users to learn\nHard to collaborate\nNeed to provide users with some sort of API that they can target, agnostic of optimizations and backends\nSo can't we just have a __array_index__ and __shape__ API in Python that we can all collaborate over?\nNo, this would be super slow! We don't do our execution in Python.\nBut we do want this sort of API, but instead of doing the execution eagerly, it builds up a representation of the computation we want to do that can then be targeted to different backends\nReference Mathematics of Arrays as original specification of this kind of algebra\nOverview of metadsl, the resulting framework\nShow how we can go from NumPy like API to LLVM\nShow integrations with other libraries\nAlso show how this can be embedded in notebooks for context about the execution\nConclusion\nHow can we encourage distributed collaboration to solve the problems in our ecosystem?\"\n\nmetadsl is a Python framework for writing APIs that are detached from how they are executed. With it we can be framework agnostic definitions of concepts like \"arrays\" and compile them to backends like Tensorflow or LLVM. In this talk, we will use metadsl to build high performance scientific computing libraries.\n\nwww.pydata.org\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases."
