# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - agile
    - architecture
title: 'AgileTuras2011. D. Šilingas & R. Bartkevičius. Agile Modeling'
recordingDate: 1323540596
description: 'It is a popular myth that in agile development UML-based modeling is a redundant tool/practice that needs to be discarded. In fact, in large agile projects, modeling can be an essential tool for improving communication and preserving high-level knowledge such as domain concepts, user roles and use cases, system composition/integration architecture, etc. However, modeling is still immature practice, which causes many novice modelers to create models that directly replicate code details. Such models are of little value for improving communication and knowledge capturing. Also, they require huge maintenance effort and quickly get out of sync with code, which causes agile practitioners to take the modeling out of their toolbox. Scott Ambler, a famous agile evangelist, promotes agile modeling based on the best practices that help getting more value from simpler models. Although some of these best practices seem to be common sense, in real life we see a lot of anti-patterns that violate them in extremely severe ways. Best practices are not convincing if you are not aware what happens if you don''t follow them. People learn best from mistakes. Therefore, in this session we will discuss best practices for agile modeling starting from anti-patterns that are collected from 7 year modeling consultancy done in close to 100 organizations from 20 countries. For each anti-pattern, we will present UML diagram reflecting fragments from real-life modeling projects and discuss what problems modelers faced creating, using and maintaining it. Then we will introduce a corresponding best practice, which enables transforming information contained in presented anti-pattern into a valuable model element. After examining concrete cases, we will generalize a list of main principles of agile modeling and discuss how to build agile modeling culture in a software organization.'
