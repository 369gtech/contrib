# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - craftsmanship
    - tdd
title: 'Marcin Zajączkowski -- Testowanie mutacyjne, czyli jak dobre w rzeczywistości są Twoje testy?'
recordingDate: 1394181108
description: "Bio:\n\nDoświadczony programista i architekt od ponad 8 lat zawodowo zajmujący się tworzeniem oprogramowania. Specjalizuje się w budowaniu wysokiej jakości rozwiązań z użyciem technik związanych z automatycznym testowaniem kodu (jak Test-Driven Development, czy Continuous Integration) oraz idei ruchu Software Craftsmanship.\n\nOprócz codziennego wykorzystywania swojej wiedzy w realizowanych projektach prowadzi szkolenia oraz mentoring zespołów pokazując jak można tworzyć czytelny, testowalny i łatwy w utrzymaniu kod. Dodatkowo prelegent na konferencjach, ekspert techniczny podczas publicznych warsztatów oraz prowadzący zajęcia ze studentami.\n\nZ zamiłowania entuzjasta wolnego oprogramowania, szczególnie powiązanego z Linuksem oraz autor i kontrybutor projektów FOSS. Od czasu do czasu bloguje o dobrym kodzie.\n\n\nPresentation:\nTestowanie mutacyjne, czyli jak dobre w rzeczywistości są Twoje testy?\nLanguage: PL\n\nBadanie \"standardowego\" pokrycia kodu przez testy daje nam informację, czy przez daną linię (bądź rozgałęzienie) \"przeszedł\" jakiś test. Testowanie mutacyjne idzie o krok dalej i weryfikuje poprzez zmianę (modyfikację lub usunięcie) danej linii, czy kod w niej zawarty był w rzeczywistości istotny dla któregokolwiek z testów. Ta znana od ponad 30 lat w kręgach naukowych, a ostatnio odkryta na nowo dla \"rozwiązań komercyjnych\" technika pozwala dowiedzieć się jak dobre w rzeczywistości są nasze testy oraz które fragmenty kodu tak naprawdę tylko wydają się być testowane (a w rzeczywistości nie są), co bardzo przydaje się szczególnie w rozwiązaniach, dla których poprawność działania jest kluczowym wymaganiem.\n\nW czasie prezentacji odpowiem między innymi na poniższe pytania:\n\n    Czym jest testowanie mutacyjne?\n    Co może nam dać (po co je stosować)?\n    Jakie ma ograniczenia?\n    Dlaczego mimo że znane od ponad 30 lat dopiero teraz zyskuje na popularności w \"komercyjnym programowaniu\"?\n    Jak przygotować naszą aplikację do efektywnego wykorzystywania tej techniki?\n    Czy ktoś naprawdę używa testowania mutacyjnego w \"aplikacjach typu enterprise\"?\n\nPrezentacja przeznaczona jest dla osób, które chciałyby dowiedzieć się czym jest testowanie mutacyjne, jakie ma przewagi nad \"zwykłym\" badaniem pokrycia kodu przez testy i jak zastosować je we własnych aplikacjach. Przydatna będzie ogólna wiedza dotycząca testów automatycznych oraz \"zwykłego\" mierzenia pokrycia (ang. code coverage)."
