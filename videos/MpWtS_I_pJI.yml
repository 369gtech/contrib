# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - ml
    - tensorflow
    - c++
    - functional
title: 'Functional Error and Optional-value Handling with STX - Basit Ayantunde - CppCon 2020'
language: English
recordingDate: 1602235810
description: "https://cppcon.org/\nhttps://github.com/CppCon/CppCon2020\n---\nError-handling is arguably the most divergent part of C++. Many coding guidelines partially allow exceptions or totally ban it and this leads to many projects supporting multiple error-handling interfaces such as exceptions, the error-prone c-style error-handling, and/or custom error-handling types. This also leads many C++ developers to not use exceptions and instead roll their in-house error and optional-value handling facilities which are duplicated across the ecosystem.\n\nThis divergence has birthed numerous projects like boost.expected, boost.outcome, boost.leaf, tl::optional, tl::expected, and many others that have done a great job at addressing these issues.\n\nThis talk introduces STX; a C++ library that tries to address some of these concerns with error and optional-value handling in the C++ ecosystem and also tries to unify some of these efforts/implementations.\n\n---\nBasit Ayantunde is an undergraduate at the University of Ilorin, Nigeria where he majors in Mechanical Engineering. Basit has 4 years of experience writing industrial software both as a contract software developer and intern. He is one of the C++Now 2020 scholars, he contributes to open source projects like Tensorflow and CMSIS, and authors STX and a number of open source C++ libraries.\n\n---\nStreamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk\nevents@digital-medium.co.uk"
