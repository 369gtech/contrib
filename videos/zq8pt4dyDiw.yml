# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - web
    - angular
    - ux
    - testing
title: 'DrupalCon Nashville 2018: Webcomponents, Polymer and HAX: decoupling authoring for Drupal and beyond'
recordingDate: 1523550333
description: "Last year, the ELMS: Learning Network team\_wrote\_an Angular app using Drupal as a backend and then presented at Drupalcon about how we'd never do it that way ever again! We then laid out the case for Webcomponents\_and started to explain how we could leverage\_Polymer\_to produce them faster. We also proposed a theoretical content creation solution we called HAX which was short for Headless Authoring eXperience. We then spent much of 2017 working on Webcomponents, HAX, and integrating them into Drupal while positioning for anything as the end target CMS.\n\nThis talk will highlight the state of webcomponents and polymer and demonstrate areas where we've had success in implementing them in Drupal. It will also showcase\_HAX and how you can teach HAX and Drupal about the structure of your front-end assets.\_I'll also cover the webcomponents modules and how it helps streamline the integration of webcomponents\_into\_Drupal 6 (yes, I went back in time and backported), Drupal 7, Drupal 8, Backdrop and GravCMS (because they work anywhere!). We'll also showcase how HAX works in Drupal, how it can be extended and why I\_feel it\_not only unlocks future upgrade paths between older versions of Drupal and Drupal 8.x.x but also frees up your organization to tackle non-Drupal projects more effectively (best tool for the job).\n\nKey take aways / what you'll learn\nWebcomponents are a fundamentally different way to produce front-ends and we should be exploring or embracing them actively\nHow the webcomponents module can improve integration of webcomponents into CMS\_based workflows\nDemonstrating multiple Polymer only Apps we've built using webcomponents module and why you don't need anything other then \"the platform\" #usetheplatform\_in order to deliver high quality user experiences\nHAX, an advanced authoring solution\_that knows how to edit webcomponents and build its own UI\_with little effort; gaining complex functionality and authoring without complex types\nCKEditor and the 2000s class of WYSIWYG approachs are dead (yes, this one I just typed this into) and we must embrace that in order to transform authoring experience and improve drupal's market position.\nThis isn't tied to Drupal; we've integrated it into Drupal which means it can integrate anywhere else easily\nIf we don't start adopting these types of approaches, eventually Wordpress will get\_gutenberg right and corner the market on authoring for clients.\nPlease join us in escaping the up-side-down (netflix reference) and embracing inside out development workflows. If we don't, someone else will and Drupal will risk obsolence as other more nimble projects that are authoring experience centric\_will\_catch us\_on capabilities. They'll never hit Drupal capabilities overall, but we're in a death by a thousand alternatives scenario right now and webcomponents may be the only way to survive the\_transition to PWAs and client driven solutions.\n\nAudience\nThis talk is directed at Drupal module and front-end developers as well as something valuable for site-builders to grasp the concept of so they can take it back to project managers. While technical in nature, the UX that HAX and webcomponents provide is something we've had success demonstrating the utility of to C-levels so this is really accessible to multiple audience levels."
