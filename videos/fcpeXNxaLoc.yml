# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - bigdata
    - java
    - spring
    - .net
title: 'Big Data in Memory'
language: ""
recordingDate: 1427167938
description: "Recorded at SpringOne2GX 2014.\nSpeaker: John Davies, C24\nBig Data Track\nSlides: http://www.slideshare.net/SpringCentral/spring-one2gx-2014-john-davies-41130273\nOK so everyone’s into big data but they’re usually talking about persistence, disk or more recently SSD, how about memory? We could simply add a few terabytes of RAM but even at $100 per GB that’s going to cost a LOT. What if we could reduce the size of the data by 50 fold and effectively bring the cost RAM down towards cost of disk? Keep Spring Integration, Spring Batch, GemFire in-memory cache, RabbitMQ messaging but reduce your data down to binary, yes bits and bytes rather than objects. Less garbage, less network overhead, same APIs but big-data in memory. John will show a Spring work-flow consuming 7.4kB XML messages, binding them to 25kB Java but storing them in just 450 bytes each, 10 million derivative contracts in-memory on a laptop."
