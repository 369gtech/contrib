# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Harsh Bardhan - Build Serverless Python Applications using AWS Chalice'
language: English
recordingDate: 1633341662
description: "Build Serverless Python Applications using AWS Chalice\n[EuroPython 2021 - Talk - 2021-07-29 - Ni]\n[Online]\n\nBy Harsh Bardhan\n\nWith the rise of Serverless Applications, Developers now focus on developing the Code Logic and allow their Cloud Service Provider to focus on the deployment. Serverless exactly doesn’t mean that there are no servers. It just means that we don’t need to provision and maintain them. The Cloud Service Provider takes care of packaging and deployment almost instantaneously.\n\nAmazon Web Services (AWS) released an interesting Micro Web-Framework named: Chalice. It features everything would want from a Serverless Framework to develop and deploy applications using Python. With an easy to understand syntax, a unified Command Line Interface to create and deploy applications with ease of development experience, Chalice is a must.\n\nThe talk would introduce you to the Serverless Environment on Amazon Web Services and how you can develop and deploy Python-based Production Grade RESTful API Services using Chalice.\n\n\nWhat is Serverless?\nBackground to AWS Lambda\nSetting up a Project on Chalice\nDeveloping a REST API Service\nDeploying the Application on AWS\nTesting the API\n\n\nBy the end of the talk, we will learn how you can run your Code on Serverless Platforms like AWS. We will also have set up an API on AWS tied up with various other AWS Services at ease. Finally, we will be taking a look at how Chalice aims to improve the developer experience with ease through the intuitive use of Serverless Technologies.\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 4.0 license: https://creativecommons.org/licenses/by-nc-sa/4.0/\nPlease see our speaker release agreement for details: https://ep2021.europython.eu/events/speaker-release-agreement/"
