# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - java
title: 'Java Tutorial - 2 | Edureka'
recordingDate: 1362667391
description: "Take instructor-led Live class on Java Tutorial at : \nhttp://www.edureka.co/java-course\n\n\nConstructor:\nA constructor is used in the creation of an object.\nIn the previous we created a class and different things with in a class like variables, methods. In order to use the variables and methods of the class we need to create an object.\nYou can consider class as blue print and using that blue print you create many kinds of objects.\nHow the objects are created using their blueprint?\nIt is created using constructor.\nAs the name suggests it actually constructs the objects according to the class.\nA constructor is a special method that has no return type. When you declare a method it should have a return type either it should be an integer, float or any data type depending on the logic of the program. You use void for method which does not return anything.\nBut constructors do not have any return type as a normal method. So constructor is a special method with no return type.\nMust have same name as the class it is in.\nE.g.: If you have a class with name \"Class1\" then constructor should also be named as \"Class1\".\nConstructors can have access specifiers. If use public then that constructor will be accessed publically.\nWhen a variable is declared without any access specifier then it can be taken as \"default\" which means that the classes present in the same package can be access that variable.\n\nConstructor Overloading:\nWhen we have two or more constructors with same name and different type of arguments then we say that we are overloading the constructor. This is what we call as constructor overloading.\nIf we have different names overloading does not happen.\nHence overloading of a constructor takes place if and only if:\nAll constructors defined for a class should have same name.\nThey should have different type of arguments.\nThey might also differ in the number of arguments and order of arguments passed.\nConstructor overloading gets executed at run-time.\nWhen we create we use \"new\" operator because it helps in allocating memory for the object.\nWhat happen if I have two constructors with same name and with no parameters?- it returns an error\nWhen we create an object of a class, you can use only one constructor of that class when constructor overloading is present in class.\nIf you want to use the other constructor then we have create a different object of that class and use it.\nHence you can use only one constructor of the class having many constructors for an object of that class.\nDo we need to initialize all the instance variables of the class in the constructor? --No. If some of the instance variables are not initialized in the constructor then those variables will be assigned default values.\nJava Syntax for Loop Constructs:\nLoop means that it will do the things again and again. So when you want to do something repeatedly we use loops. There are different types of loop.\nFor loop\nWhile loop\nDo while loop\nFor each loop\nFor Loop:\nIt allows the code to be executed repeatedly.\nThis loop is typically used when the number of iterations is known.\nIteration means the number of times the loop should be executed.\nFor Loop working:\n\"for\" is k\nThis repeats until the condition becomes false.\nThe difference between do-while loop and while loop is:\nIn while loop first the condition is evaluated and if condition is true then only the statements in the while loop will execute. If the condition is false then the statements in while loop will not execute.\nBut if you consider the reverse is happening. i.e first the statement in the loop will be executed and then condition is evaluated. Even if the condition is true or false the statements are getting executed at least once.\nIn general in a group of nested loops, which loop is executed the most number of times?-the innermost loop.\n\nPlease write back to us at support@edureka.in or call us at +91-8880862004 for more information. \n\nhttp://www.edureka.co\n\nVisit - http://www.edureka.co/java-course"
