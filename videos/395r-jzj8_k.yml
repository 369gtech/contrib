# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - mongo
    - performance
    - architecture
    - python
title: 'Vinicius Pacheco - Understanding and Applying CQRS'
language: English
recordingDate: 1535664156
description: "Understanding and Applying CQRS\n[EuroPython 2018 - Talk - 2018-07-26 - Smarkets]\n[Edinburgh, UK]\n\nBy Vinicius Pacheco\n\nCreating scalable applications has a number of complex variables and one of them is to work with scalability and performance in the database layer. Command Query Responsibility Segregation (CQRS) is a design pattern that helps produce more performance and resilience in applications where data access is intense.\nIn this talk, we will understand when to use and the problems that CQRS solves. We will also apply CQRS in a Python application using the Nameko framework. \n\nThe outline talk is:\n        ○ (4 minutes) - Present a real problem of a web application, when creating new instances is not a solution, because the database receives an overwrite of writing and unfeasible to read the data, collapsing the application. \n        ○ (6 minutes) - Present the CQRS pattern conceptually and how this design pattern solves this type of problem using the structure of Command Stack and Query Stack \n        ○ (3 minutes) - Show Nameko as an interesting tool to apply the CQRS. It will demonstrate the use of HTTP, RPC and the possibility of applying pub/sub. \n        ○ (6 minutes) - Create (live code) the Command Stack layer using Nameko on a Postgresql database.\n        ○ (5 minutes) - Create (live code) the Query Stack layer using Nameko over a MongoDB database. \n        ○ (3 minutes) - Explain common myths and mistakes about CQRS \n(3 minutes) - Q &amp; A Session\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/"
