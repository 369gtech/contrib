# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
title: 'CppCon 2016: Kenny Kerr & James McNellis “Putting Coroutines to Work with the Windows Runtime"'
language: English
recordingDate: 1475638127
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016\n—\nCoroutines are one of the hot new features that are being proposed for C++ standardization. They have the potential to revolutionize how we C++ developers work with asynchronous operations, both in terms of consuming long-running operations and in formalizing the way in which asynchronous operations are described by the developer and implemented by the compiler.\n\nThe theory is interesting, and \"Hello, World\" examples are fun, but how does the proposed coroutines feature fare when applied to a major library or operating system? How well does the coroutines feature work in practice with real-world user interface code and background tasks? \n\nIn this session, we'll explore the application of the C++ coroutines feature to C++ for the Windows Runtime. We'll look at the coroutine types that we designed for the \"C++/WinRT\" language projection, with a focus on their usability and performance. Most importantly, we'll look at how coroutines can be used with a sophisticated platform library and discover how various problems are greatly simplified in the face of real platform complexities like UI and threading models.\n— \nKenny Kerr\nMicrosoft\nKenny Kerr is an engineer on the Windows team at Microsoft, an MSDN Magazine contributing editor, Pluralsight author, and creator of moderncpp.com (C++/WinRT). He writes at kennykerr.ca and you can find him on Twitter at @kennykerr.\n\nJames McNellis\nSenior Software Engineer, Microsoft Visual C++\nJames McNellis is a senior engineer on the Visual C++ team at Microsoft, where he works on C++ library design and is responsible for the Microsoft C Runtime (CRT) and C Standard Library implementation. He can be found on Twitter at @JamesMcNellis and can be found elsewhere online via http://www.jamesmcnellis.com.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
