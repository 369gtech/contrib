# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - testing
    - functional
title: 'YOW! Lambda Jam 2019 - Sean Chalmers + Jack Kelly - Property Base Your State Machine (Combo Talk)'
recordingDate: 1564520405
description: "Types are great, but in most languages we use, they can't cover everything.Testing tries to fill that gap. Property-based testing generates bizarreexamples and finds minimal reproductions that break your tests - a significantimprovement over writing test cases by hand. But what if you have a thornystateful system to test?\n\nState Machine Testing extends property-based testing to randomly test statefulsystems. The actions performed against the system are modeled as commands, andthe usual property-based test machinery, generates test cases, and shrinksfailing tests to their minimal counter-examples.\n\nIn this talk we will provide a quick refresher (or crash-course) ofproperty-based testing, and then give an overview of 'property-based statemachine testing' and how it works. We'll then start a workshop where we beginbuilding up a state-machine test suite for a small imperative system.\n\nSean Chalmers likes riding motorcycles, crossfit, software that works, and writing documentation. Hates not having errors as values, not being able to use lenses, and writing bios. Also a closet game developer working, currently working on integrating WebGL and SVG with Functional Reactive Programming.\n\nJack Kelly is a Haskell enthusiast, lapsed tall-ship sailor and recent addition to the Queensland FP Lab. He has tutored functional programming at universities and for industrial programmers, and loves seeing the lightbulb go on above people's heads. He became frustrated with how difficult it is to reason about imperative code in dynamic languages, decided that Haskell looked like a good tool to solve business problems and followed a path through Data61 to the QFPL's door.\n\nFor more on YOW! Conference, visit http://www.yowconference.com.au"
