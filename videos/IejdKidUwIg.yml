# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - career
    - c++
title: 'CppCon 2018: Arthur O''Dwyer “An Allocator is a Handle to a Heap”'
language: English
recordingDate: 1540623601
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018\n—\nC++17 introduced the std::pmr framework. In this framework, a std::pmr::polymorphic_allocator?T? holds a pointer to a std::pmr::memory_resource. The memory resource is in charge of managing and organizing the heap itself, and the allocator object is just a thin \"handle\" pointing to the memory resource. \n\nThis is not just a convenient implementation strategy for std::pmr! Rather, this elucidates the true meaning of the Allocator concept which has existed, unchanged, since C++98. An Allocator *is* a (value-semantic) handle to an (object-semantic) MemoryResource. Even std::allocator can — and should — be viewed as a handle to a global singleton \"heap\", and not as a heap itself. \n\nFrom this core insight we derive many corollaries, such as the need for allocator types to be lightweight and efficiently copyable, the fundamental impossibility of implementing an \"in-place\" std::vector via stupid allocator tricks, and the philosophical underpinnings of \"rebinding.\" \n\nTime permitting, we'll \n- discuss what we can expect from a \"moved-from\" allocator object \n- relate the notion of \"handle\" to neighboring notions such as \"façade\" and \"adaptor\" \n- suggest similarities between \"allocator/heap\" and \"executor/execution-context\"\n— \nArthur O'Dwyer\n\nArthur O'Dwyer started his career writing pre-C++11 compilers for Green Hills Software; he currently writes C++14 for Akamai Technologies. Arthur is the author of \"Colossal Cave: The Board Game,\" \"Mastering the C++17 STL\" (the book), and \"The STL From Scratch\" (the training course). He is occasionally active on the C++ Standards Committee and has a blog mostly about C++.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
