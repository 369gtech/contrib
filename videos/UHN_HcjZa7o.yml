# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - android
    - testing
    - architecture
    - kotlin
    - scala
    - java
    - spring
title: 'Deep Dive into JUnit 5 by Sam Brannen'
language: English
recordingDate: 1478765805
description: "Take a Deep Dive into JUnit 5 with core committer Sam Brannen!\n\nOver the last decade a lot has happened in the world of Java and testing, but JUnit 4 hasn't kept up. Now JUnit 5 is here to help shape the future of testing on the JVM with a focus on Java 8, extensibility, and a modern programming API for testing in Java. And well, the JUnit Platform isn't just about Java anymore. Third parties are already developing TestEngines for Scala, Groovy, Kotlin, etc.\n\nThis session starts off with an overview of the inspiration for & architecture of JUnit 5, from launchers to test engines. Sam will then take the audience on a live coding tour, highlighting support for tagging, custom display names, dependency injection, conditional test execution, lambda expressions for assertions, assumptions, & dynamic tests, and implementing tests via interface default methods (a.k.a., testing traits).\n\nNext, Sam will present the new extension model in JUnit 5, discussing how to author and register extensions for conditional tests, parameter resolution, lifecycle callbacks, & more.\n\nTo round off the session, Sam will quickly showcase JUnit 5 support in the Spring Framework.\n\nSam Brannen is a seasoned enterprise Java and open source developer and co-founder of Swiftmind, a software consulting agency in Zurich, Switzerland. At Swiftmind Sam helps international clients achieve best practices in software development, architecture, design, implementation, and testing of enterprise Java applications using the Spring Framework, JUnit, and a plethora of open source technologies.\n\nSam is a popular speaker at conferences on Java and Spring. He is also an active core committer for the Spring Framework and JUnit 5 as well as the author and maintainer of the Spring TestContext Framework.\n\n[OJP-6150]"
