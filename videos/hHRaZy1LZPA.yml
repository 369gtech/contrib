# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
    - testing
title: 'CppCon 2016: Boris Kolpackov “Using build2, C++ Build Toolchain"'
language: English
recordingDate: 1475438213
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016\n—\nIt all started with a CppCon 2014 lightning talk where I tried to convince the audience we needed a C++ package manager. Turned out, no convincing was necessary. Fast forward two years and we have a new build system, a package manager, and cppget.org, a repository of open source C++ packages. In this talk I would like to give a practical overview of what it's all about. \n\nWe start with a brief discussion of what exactly are we trying to achieve, how it is \"better\" than other solutions, and why we need yet another build system. \n\nThen, we put on the \"consumer\" hat and see how to find packages that we are interested in and use the package manager to build/upgrade/downgrade them and their dependencies using multiple build configurations. \n\nIn the second half we look into more interesting features of the build system: out-of-source, persistent build configurations (don't you wish you could just edit them with a text editor), high-fidelity builds (what happens if I upgrade my compiler or change compile options), command-line configuration overrides (what if I want to quickly rebuild my project with clang++ instead of g++), cross-compilation (something is wrong if it's harder to cross-compile than to build natively on Windows), subprojects and amalgamation (what if I really don't like external dependencies). \n\nBuild systems also rarely handle just building. There is testing, installation (do we really have to run the whole process as sudo), and preparation of distributions (no, shipping your .gitignore files is not cool). \n\nWe finish with a brief discussion of cppget.org: what's its future, who should control it, and what should its policies be (acceptable licenses, name disputes, etc)? \n— \nBoris Kolpackov\nCode Synthesis\nChief Hacking Officer\nSouth Africa\nBoris Kolpackov is a founder and CHO (Chief Hacking Officer) at Code\nSynthesis, a company focusing on the development of open-source\ntools and libraries for C++. For the past 10 years Boris has been\nworking on solving interesting problems in the context of C++ using\ndomain-specific languages (DSL), C++ parsing, source-to-source\ntranslation, and code generation. His notable projects to date\ninclude ODB (ORM for C++), XSD and XSD/e (XML Schema to C++ compilers), as well as libstudxml (XML parser/serializer library for C++).\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
