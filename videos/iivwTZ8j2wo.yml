# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - php
title: 'DrupalCon Nashville 2018: Integration of Drupal Coding standards with Git hooks'
recordingDate: 1523462973
description: "Introduction\n\nGit hooks are scripts that Git executes before or after events such as: commit,\npush, and receive. Git hooks are a built-in feature - no need to download anything. Git hooks are run locally.\n\nHooks we will use in our session :\n\npre-commit: Check for the line of code thats getting committed. This is something i will be explaining in detail in this article.\npre-receive: Checks for the code that is getting pushed to git-repo. Invoked before the line of code gets pushed to git repo.\npost-receive: Gets triggered once the code is merged to the remote git repo. A simple usecase could be to notify other team members by sending an email with commit link and the commit message or to deploy the committed code to production\n\n\nThese hooks are\_disabled in default state on your local repository and resides in .git/hooks. you just need to remove .sample extension, make them executable and you are all set to go!!\n\nThe main objective while reviewing a pull request is to focus on the logic.\_As a Drupal developer and code reviewer, i have noticed people commiting code which lacks coding standard and at times they have syntactical errors as well. This used to waste a lot of my time as well as the developers leading to obvious problems towards the end of the Projects.\_when i found git-hooks and started playing around with it.\_Right now i have a pre-commit hook that tests the files for coding standards and syntactical errors before them getting committed and reaching to me. The following code in the pre-commit file takes care of parsing any file thats getting committed against Drupalcoding standards using\_PHP_Codesniffer\_and then parsing them against\_php lint.\n\n\n\nTake Away for attendees:\n\nImproved Project Management.\nProper code as per coding standards.\nProper workflow when you deploy something on the repository.\nProper formatted commit messages as per defined in the documentation."
