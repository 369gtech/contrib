# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - c++
    - swift
    - mobile
    - ios
    - testing
    - craftsmanship
    - tdd
    - functional
title: 'CppCon 2018:  Brand & Nash “What Could Possibly Go Wrong?: A Tale of Expectations and Exceptions”'
language: English
recordingDate: 1539625500
description: "http://CppCon.org\n--\nSimon Brand & Phil Nash “What Could Possibly Go Wrong?: A Tale of Expectations and Exceptions”\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018\n—\nIn software things can go wrong. Sometimes we might expect them to go wrong. Sometimes it’s a surprise. In most cases we want to build in some way of handling these disappointments.\n\nIn some cases we can use exceptions. But there are many cases where the overhead of exceptions is more than we want or can afford - and some are so constrained that exceptions are not even possible. Alternatives now include std::optional, or the proposed std::expected - but these come with a lot of code overhead\n\nWhat we really want is a way to concisely produce and handle disappointments in our code in a performant manner. This talk will evaluate a few approaches to solving this, including monads, syntactic sugar for error handling, and we'll even look at an intriguing possibility that promises to unify these worlds.\n— \nSimon Brand, Microsoft\nC++ Developer Advocate\n\nSimon is a C++ Developer Advocate at Microsoft. He turns into a metaprogramming fiend every full moon, when he can be found bringing compilers to their knees with template errors and debating undefined behaviour online. He co-organises the Edinburgh C++ user group and contributes to various programming standards bodies.\n\nOutside of programming, he enjoys experimental films, homebrewing, and board games.\n\nPhil Nash, JetBrains\nDeveloper Advocate\n\nPhil is the author of the test frameworks, Catch - for C++ and Objective-C, and Swordfish for Swift. As Developer Advocate at JetBrains he's involved with CLion, AppCode and ReSharper C++. More generally he's an advocate for good testing practices, TDD and using the type system and functional techniques to reduce complexity and increase correctness. He's previously worked in Finance and Mobile as well as an independent consultant and coach specialising in TDD on iOS.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
