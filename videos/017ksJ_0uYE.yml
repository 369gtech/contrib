# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - security
title: 'RecordFlux: Facilitating the Verification of Communication Protocols'
language: English
recordingDate: 1549646715
description: "by Tobias Reiher\n\nAt: FOSDEM 2019\nhttps://video.fosdem.org/2019/UD2.218A/recordflux.webm\n\n\nMany security problems have been discovered in communication protocols in the past, examples are: \n\n\nBlueBorne, a set of security vulnerabilities in the Bluetooth implementation which affect millions of devices\nHeartbleed, a security bug in the OpenSSL library that lead to exposure of sensitive data\nCVE-2018-10933, a critical bug in libssh which allows successful authentication without any credentials\n\n\n\nStill today many critical issues remain in protocol implementations, as their root causes have not been addressed. Two classes of faults dominate: runtime errors like buffer overflows, and logic errors in protocol state machines. The main reasons for runtime errors is the use of unsafe programming languages. Better alternatives with formal guarantees like Rust, SPARK or Frama-C exist, but re-implementing complex protocols means a lot of effort. Logic errors are caused by the complexity of protocols and imprecise specifications in natural language. \n\nRecordFlux is a framework for the secure implementation of communication protocols. From a formal protocol specification written in a domain-specific language the tools generate SPARK code, for which the absence of runtime errors can be proven automatically. In the future RecordFlux will also allow the specification of dynamic protocol semantics and support formal correctness proofs for protocol state machines. In this talk we give an overview of the current state and speak about an upcoming project that uses RecordFlux for a complex real-world application, the compartmentalized implementation of TLS 1.3 for component-based operating systems. \n\nRoom: UD2.218A\nScheduled start: 2019-02-03 13:30:00+01"
