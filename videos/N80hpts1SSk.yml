# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
    - performance
    - craftsmanship
    - 'code design'
title: 'CppCon 2016: “Building and Extending the Iterator Hierarchy in a Modern, Multicore World"'
language: English
recordingDate: 1475777305
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016\n—\nYou've likely used the STL before, and you are probably comfortable using std::vector some algorithms, but you may not be quite so comfortable with STL iterators. What even are \"single pass writable iterators\"? What does that mean to me as a user of the STL? \n\nIn this talk, we will motivate the iterator concept hierarchy as it exists in the STL today by looking at useful algorithms and how they traverse their input and output ranges. We will take these concrete examples and slowly begin to abstract, building up the STL iterator concepts, step-by-step. \n\nAfter presenting the iterator concepts that exist in the STL today, we will build up to two further iterator concepts by looking at useful algorithms and then generalizing from them. First, we will motivate contiguous iterators, which have been voted into the C++17 working draft. Then, we will motivate a less-commonly known iterator concept, segmented iterators, and show how they can help us write parallel and cache-aware algorithms. \n\nYou should come away from this talk with an appreciation for generic programming, experience with the syntax in the Concepts Lite Technical Specification, and a better understanding of why iterators are fundamental to the algorithms you write every day.\n— \nPatrick Niedzielski\nIthaca, NY\nPatrick is a Senior at Cornell University, pursuing a BA in Linguistics and Computer Science. In particular, he is interested in compiler technologies and building high-level, easy-to-use abstractions that maintain well-defined performance characteristics. With over ten years experience in C++ through open source, academic, and industry work, Patrick is enthusiastic about pushing the our understanding of C++ forward. To that end, Patrick teaches an informal C++ course that focuses on introducing students to idiomatic, modern C++ style and producing clean code. When not working at a computer, Patrick spends his time studying ancient languages and playing jazz harmonica.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
