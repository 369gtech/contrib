# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - mobile
    - android
    - architecture
    - kotlin
title: 'Android Development Course - Build Native Apps with Kotlin Tutorial'
recordingDate: 1572355127
description: "Learn to build native Android apps with Kotlin. You will also learn how to use Android Jetpack, Firebase, Room, MVVM, Navigation, LiveData, and Kotlin Coroutines. This full course explains how to build an entire Android app using best practices.\n\nüíª Code: https://github.com/BracketCove/SpaceNotes\n\nüé• Course developed by Ryan Kay. Check out his YouTube channel: https://www.youtube.com/channel/UCSwuCetC3YlO1Y7bqVW5GHg\nüîó Absolute Beginner's Introduction to Android Development w/ Android Studio: https://skl.sh/2ZU6ZT9\nüîó Programming Fundamentals w/ Kotlin and Android: https://www.udemy.com/course/application-programming-fundamentals-with-kotlin/\n\n\n‚≠êÔ∏è Course Contents ‚≠êÔ∏è\n\n1\n(0:00) Introduction\n\n2\n(5:14) Model View ViewModel (MVVM) Architecture fundamentals and variations\n(5:38) Is MVVM the perfect architecture?\n(7:41) Overview of MVVM with whiteboard example\n(12:11) Pros and Cons of MVVM\n(18:58) Package structure\n\n3\n(23:22) How to create Vector Drawables\n(24:22) Difference between Raster (PNG, JPG, BMP) and Vector (SVG) Images?\n(27:55) Uh Oh!\n(28:41) How to use Inkscape to create an SVG from a BMP/PNG\n(30:07) How to convert an SVG into an Android Studio Vector Asset\n(32:29) How to create simple animations using animation lists and fade animations\n\n4\n(38:19) Material Design User Interface using ConstraintLayout and Styles\n(41:00) Building an XML Layout using  ConstraintLayout\n(51:09) Using ConstraintLayout Chains\n(55:43) Some tips on using Styles to create a material design look\n\n5\n(56:51) How to use (and when not to use) the Android Navigation Component from Android Jetpack\n(1:00:00) Adding Safe Args to gradle\n(1:01:15) Building a Navigation Graph using the Navigation Editor (XML)\n(1:11:00) Creating a NavHostFragment to host the Navigation Component and adding it to an Activity\n(1:15:29) How to actually change destinations in our Fragments using the Navigation Component (with safe args)\n\n6\n(1:20:00) Setting up Fragments as Views in MVVM using Kotlin Synthetic Properties\n(1:25:32) Starting point\n(1:27:54) Importing an XML layout to an Activity/Fragment using Kotlin Synthetic Properties\n(1:32:09) How to reference Views in the Fragment using synthetic properties\n(1:33:41) Adding onClickListener to our views\n(1:38:03) Intercepting OnBackPressed (NOTE: The API for this has changed since making this video. I have updated the Repository appropriately)\n(1:39:40) How to observe the ViewModel using LiveData callbacks\n\n7\n(1:43:22) ViewModels in MVVM with Kotlin Coroutines for Concurrency\n(1:45:26) A look at my BaseViewModel class which contains part of the Coroutines Implementation (Coroutine Scope)\n(1:49:25) Starting point\n(2:01:40) Handling events from the View in the ViewModel\n(2:05:34) Using the launch Coroutine Builder to access data\n(2:08:44) How to update the MutableLiveData fields to publish data to the View\n\n8\n(2:19:35) Modern RecyclerView implementation using LiveData to handle ItemTouchListener() callbacks\n(2:22:49) Overview of the RecyclerView within the XML View with LinearLayoutManager\n(2:26:53) What does the DiffUtil do?\n(2:28:48) A look at the source code of ListAdapter to better understand how it works\n(2:35:34) Writing the RecyclerView.ViewHolder class\n(2:37:23) Why is it actually called a RecyclerView? What gets Recycled?\n(2:37:58) Writing our RecyclerView.ListAdapter\n(2:46:37) How to use a MutableLiveData object to publish events from the onClickListener in the ViewHolders\n(2:48:09) Overview of the Fragment which manages the RecyclerView, and how to avoid memory leaks!\n\n9\n(2:53:17) FirebaseAuth for User Authentication using Google Sign In\n(2:54:00) How to set up a new Firebase Project using Android Studio\n(2:54:36) Enabling Authentication (FirebaseAuth) in the Firebase Console\n(2:55:00) Setting up a debug signing certificate for your App in Firebase\n(2:56:48) Gradle Configurations for FirebaseAuth\n(2:58:00) Setting up GoogleSignInProvider\n(2:59:24) Handling the result in onActivityResult\n(3:01:06) Back FirebaseAuth Implementation  using Coroutines\n\n10\n(3:05:31) Local Database with Room Persistence Library and Coroutines\n(3:06:17) Entities and Primary Keys in Room\n(3:08:50) Setting up a Dao (Data Access Object) in Room\n(3:12:28) Overview of RoomDatabase implementation\n(3:14:21) How to build your Database and get a reference to you Dao\n(3:14:47) How to get data in and out of the Dao using suspend functions\n\n11\n(3:16:34) Setting up a Local and Remote Database using Firebase's Firestore NoSQL library\n(3:17:33) Communicating with Firestore using a Repository, with Coroutines\n\n12\n(3:21:59) Dependency Injection using an AndroidViewModel, and ViewModelProvider.Factory\n(3:22:29) What is dependency injection in simple terms?\n(3:23:36) Implementing Dependency Injection using AndroidViewModel\n(3:24:13) Quick look at using a ViewModelProvider.Factory to create our ViewModel with the Injected Repository\n(3:24:27) How to use our Dependency Injector from within a Fragment or Activity"
