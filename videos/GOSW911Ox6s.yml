# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - architecture
    - java
    - spring
title: 'Domain-Driven Design with Relational Databases Using Spring Data JDBC'
language: English
recordingDate: 1571602640
description: "Abstract: Domain-driven design introduces the concepts of Aggregate, AggregateRoot, and Repository. If one takes these concepts seriously, certain habits we picked up while fighting working with JPA become unacceptable. Even more, a substantial part of the complexity of JPA seems to become superfluous. The result will be performant, scalable, and maintainable.\n\nA drawback of this approach is that we might have to fight our database administrator. But you can’t have it all, can you?\n\nAs it turns out, Spring Data JDBC supports this approach rather well.\n\nIn this talk, I’ll present how to design an object model the DDD way, why this might be a good idea, and how to build a persistence layer for it backed by Spring Data JDBC.\n\nAnd I’ll even figuratively bring some candy to pacify the Database Admins.\n\nSpeakers: Jens Schauder, Staff Software Engineer, Pivotal\nFilmed at SpringOne Platform 2019\nSlideShare: https://www.slideshare.net/SpringCentral/domaindriven-design-with-relational-databases-using-spring-data-jdbc"
