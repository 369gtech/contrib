# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - storage
    - architecture
    - java
speaker:
    name: 'Kevlin Henney'
    twitter: kevlinhenney
title: 'Declarative Thinking, Declarative Practice by Kevlin Henney'
language: English
recordingDate: 1478851767
description: "Do this, do that. Coding from assembler to shell scripting, from the mainstream languages of the last century to the mainstream languages now, is dominated by an imperative style. From how we teach variables — they vary, right? — to how we talk about databases, we are constantly looking at state as a thing to be changed and programming languages are structured in terms of the mechanics of change — assignment, loops and how code can be threaded (cautiously) with concurrency.\n\nFunctional programming, mark-up languages, schemas, persistent data structures and more are all based around a more declarative approach to code, where instead of reasoning in terms of who does what to whom and what the consequences are, relationships and uses are described, and the flow of execution follows from how functions, data and other structures are composed. This talk will look at the differences between imperative and declarative approaches, offering lessons, habits and techniques that are applicable from requirements through to code and tests in Java and other languages.\n\nKevlin Henney is an independent consultant, speaker, writer and trainer. His software development interests are in patterns, programming, practice and process. He has been a columnist for various magazines and websites and has contributed to both open- and closed-source software. He is co-author of A Pattern Language for Distributed Computing and On Patterns and Pattern Languages, two volumes in the Pattern-Oriented Software Architecture series, and editor of 97 Things Every Programmer Should Know.\n\n[TDC-8712]"
