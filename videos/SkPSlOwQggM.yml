# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - performance
    - security
    - java
title: 'Lazy Versus Eager Loading Strategies for JPA 2.1'
language: English
recordingDate: 1433262330
description: "The Java Persistence API provides a powerful interface for object-relational mapping. Its usage is straightforward for simple models, but complex models require care and expertise to achieve good performance. JPA loading strategies are a key factor for better performance. This session discusses lazy and eager loading strategies and their applicability and impact on performance. It explains how fetch settings and entity graphs in JPA 2.1 can be used to implement various loading strategies. The presented code samples illustrate applicable use cases that can vary, depending on the structure of an entity graph, its usage contexts, and even a deployment infrastructure. The summary provides guidelines on how and when to apply each loading strategy.\n\n\nAuthor:\nPatrycja Wegrzynowicz\nPatrycja Wegrzynowicz is the Head of Software R&D Department at NASK, Research and Academic Computer Network. At NASK she shapes the future direction of technological research in software as well as acts as a chief architect and consultant on the projects from the field of Internet domain names and DNS, Internet security, and large-scale digital archives together with semantic search. Patrycja holds a master degree in Computer Science and is currently finalizing her PhD at Warsaw University. Her academic interests are focused on language semantics and automated software engineering, particularly on static and dynamic analysis techniques to support program validation, verification, and comprehension\nView more trainings by Patrycja Wegrzynowicz at https://www.parleys.com/author/patrycja-wegrzynowicz\n\nFind more related tutorials at https://www.parleys.com/category/developer-training-tutorials"
