# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - performance
    - lisp
    - java
    - functional
title: 'Dragan Djuric - Interactive GPU programming with ClojureCUDA & ClojureCL | Code Mesh LDN 18'
language: English
recordingDate: 1544788803
description: "This video was recorded at Code Mesh LDN 18 http://bit.ly/2P7SPII\n\nGet involved in Code Sync's next conference http://bit.ly/2Mcm4aS\n\n---\n\nINTERACTIVE GPU PROGRAMMING WITH CLOJURECUDA AND CLOJURECL\nby Dragan Djuric\n\nTHIS TALK IN THREE WORDS:\nClojure\nCUDA\nOpenCL\n(Interactive)\n\nTALK LEVEL: Intermediate\n\nABSTRACT\nWho wouldn't like to program with CUDA dynamically, in an interactive, but compiled, environment?\nDragan will present an interactive approach to accelerating dynamic functional programs with GPU kernels.\n\nDragan developed ClojureCUDA an ClojureCL, libraries that integrate CUDA and OpenCL into a Clojure environment, which compiles to Java bytecode and integrates into ubiquitous Java enterprise ecosystem. They help programmers discover the solutions by growing GPU programs inside a live session, by constantly learning and experimenting with instant results, rather than having to specify the whole GPU program right away, compile it, and run it to see the result. \n\nCUDA and parallel programming are complex and brittle.\nInteractive programming is indispensable when the details of the solution are not certain beforehand. For both the novice and the expert, the instant feedback is of great help. We aim at full CUDA power at a low level and offer a nice dynamic environment and the power of LISP to automate grudge work without hiding the important details of CUDA kernels.\n\nClojureCUDA demonstrates this in Bayadera and Neanderthal projects. The resulting programs are novel, require typically very little code (low thousands instead of hundreds of thousands), have little if any overhead, and, what is unusual, have equivalent functionality a similar performance on both Nvidia (CUDA) and AMD (OpenCL) hardware.\n\nRead the full abstract: https://codesync.global/speaker/dragan-djuric/\n\n---\n\nTHE SPEAKER - DRAGAN DJURIC\nClojure + CUDA + OpenCL infrastructure; Bayesian GPU software\n\nDragan Djuric is a professor at the Department of Software Engineering, FON, University of Belgrade, Serbia. He passionately uses Clojure as a primary language since 2009, and teaches Clojure-based courses at the university since 2010. He published his Clojure-based research in leading scientific journals, but does not skip contributiing to the community through open-source Clojure projects (www.uncomplicate.org). His main interests are in the area of software engineering and intelligent systems, but programming in Clojure is the activity he enjoys the most. When he is not working in Emacs, he likes doing his daily dose of long-distance running, gym, and Cuban salsa dancing.\n\nMore on Dragan Djuric: https://codesync.global/speaker/dragan-djuric/\n\n---\n\nCODE SYNC & CODE MESH LDN 18\nCode Mesh LDN is powered by Code Sync. Code Mesh LDN 18 was sponsored by WhatsApp, Toyota Connected, Erlang Solutions, TEAMango, and aeternity. \n\nCODE SYNC \nWebsite: www.codesync.global\nTwitter: www.twitter.com/CodeMeshIO\nFacebook: https://www.facebook.com/CodeSyncGlobal\nLinkedIn: https://www.linkedin.com/company/code-sync/\nMail: info at codesync.global"
