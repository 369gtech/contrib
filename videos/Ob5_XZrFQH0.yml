# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - c++
    - swift
    - mobile
    - ios
    - testing
    - craftsmanship
    - tdd
    - functional
title: 'CppCon 2018: Phil Nash “Modern C++ Testing with Catch2”'
language: English
recordingDate: 1540191600
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018\n—\nCatch has gained popularity over the last seven years as a modern, C++-native, test framework. Simple to use, easy to get started with, yet still powerful. With features like expression-template-based assertions, hierarchical sections (giving a more natural flow than set-up/ tear-down methods) and more, a lot of users say it makes testing easier and even fun!\n\nUntil recently, though, it has been constrained by pre-C++11 compatibility. \nCatch2 rebases on C++11 and takes advantage of this to simplify further, as well as offer new capabilities. \nThis talk takes a look at what's new in Catch and Catch2 and how to effectively test-drive modern C++ codebases. \n\nFamiliarity with the original Catch is not assumed, but if you already use it, or have seen previous talks, in this material we'll focus more on some of the newer features.\n— \nPhil Nash, JetBrains\nDeveloper Advocate\n\nPhil is the author of the test frameworks, Catch - for C++ and Objective-C, and Swordfish for Swift. As Developer Advocate at JetBrains he's involved with CLion, AppCode and ReSharper C++. More generally he's an advocate for good testing practices, TDD and using the type system and functional techniques to reduce complexity and increase correctness. He's previously worked in Finance and Mobile as well as an independent consultant and coach specialising in TDD on iOS.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
