# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - ml
    - tensorflow
    - web
    - react
    - ux
    - testing
    - python
    - javascript
title: 'TensorFlow.js & Testing Web Accessibility || Frontend Love Virtual Meetup'
recordingDate: 1597950965
description: "Frontend Love Virtual Meetup\n\nDate:\_Thursday 20th August\_\nTime: 19:30 CEST\n\n1. Håkan Silfvernagel\nMachine learning in the browser with TensorFlow.js\n\nIn order to start out with machine learning you typically would need to learn Python, Tensorflow, Jupyter Notebook etc. But what if you could run your machine learning straight in the browser. This can be done through Tensorflow.js. In this session you will get an introduction so that you can use it in your own projects.\n\nThis session will give you an introduction to what Machine learning is and what types of problem you can solve. TensorFlow as a library will be introduced and then TensorFlow.js will be presented with a focus on how you can use a machine learning model in your JavaScript application.\n\nNext, we will build an image classification web app that uses a predefined TensorFlow model.\n\nFinally, some examples on how TensorFlow.js is used in commercial applications will be given.\n\n2. Adrián Bolonio\nTesting Web Accessibility\n\nWhen we develop a new web application, we often put a lot of work on the design, on making it beautiful and usable. In other words, we want our web app to be effective, efficient, and satisfying for the user. But a lot of times we don’t think about the user experience for people with disabilities, including people with age-related impairments.\n\nFor the web, accessibility (a11y ) means that people with disabilities can perceive, understand, navigate, and interact with websites and tools, and that they can contribute equally without barriers.” (Source: W3C - Web Accessibility Initiative). Our role as frontend and web developers is to create clear interfaces to make people understand and care about data, independently of their disabilities or impairments, but what we, developers, often forget is to ensure that the code we write follows the Web Content Accessibility Guidelines (WCAG), and the only way to achieve that is testing, either manual or automated.\n\nAutomated web a11y tests can free up our QA team from manual testing every part of our application…but…they can’t automatically, and magically, make our site accessible.\n\nWe should use automated a11y tests as one step of a larger testing process. Don’t forget that only 20% to 50% of all accessibility issues can automatically be detected.\n\nI will show you some testing tools, libraries and techniques to increase the a11y test coverage of your code with a simple React application example."
