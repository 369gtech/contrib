# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
    - performance
title: 'CppCon 2019: David Olsen “Faster Code Through Parallelism on CPUs and GPUs”'
language: English
recordingDate: 1570604404
description: "http://CppCon.org\n—\nDiscussion & Comments: https://www.reddit.com/r/cpp/\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019\n—\nEver since multicore CPUs became widely available, programmers have been working to get compute-intensive code to run in parallel and take advantage of CPU hardware parallelism. This effort has continued in the era of general-purpose programming on GPUs. There are many approaches to parallelizing C++ code on multicore CPUs or GPUs. C++11 threads, OpenMP or OpenACC pragmas, CUDA, and class libraries like Kokkos are among the options. The C++17 standard introduced parallel versions of standard algorithms, offering an approach that is fully portable across C++17 implementations and supports both CPUs and GPUs. This talk will survey many of these approaches and compare them for ease of use, clarity of the code, and performance. It will include an overview of the current state of implementations of C++17 parallel algorithms in different compilers.\n— \nDavid Olsen\nSoftware engineer, NVIDIA\nDavid Olsen has more than two decades of software development experience in a variety of programming languages and development environments. For the last three years he has been the lead engineer for the PGI C++ compiler at NVIDIA. He is a member of the ISO C++ committee.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
