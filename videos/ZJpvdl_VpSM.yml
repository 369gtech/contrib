# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
    - 'code design'
title: 'CppCon 2019: Gal Zaban “Behind Enemy Lines - Reverse Engineering C++ in Modern Ages”'
language: English
recordingDate: 1571382009
description: "http://CppCon.org\n—\nDiscussion & Comments: https://www.reddit.com/r/cpp/\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019\n—\nWhat do C++ programs really look like? When developers think about hierarchy and virtual calls they see it as design patterns and code but reverse engineers look at it from a different angle, they think about Assembly puzzles.\n\nC++ is known as a tangled language, templates, lambdas and pointers. All of these features create a jungle of objects intended to make life easier for the programmer. But once the program is compiled, the target program is no longer what it once seemed.\n\nReversing C++ programs is tedious, demanding, and requires rebuilding inheritance, identifying templates and tainting program flow in order to combat the ties of function overloading and class utilization.\n\nC++ Binaries are a world of mysteries. In my presentation I am going to show how C++ binaries looks like after compilation and how reverse engineers see C++ binaries and understand their logic.\n— \n\nGal Zaban\nGal Zaban is a Reverse Engineer with a particular interest in C++ code, currently working as a Vulnerability Researcher. As part of her journey in understanding the catacombs of C++, she developed various RE tools for C++ including Virtuailor. \nIn her spare time when she's not dwelling into low-level research, she designs and sews her own clothes and plays the Clarinet. \nTwitter: @0xgalz\nGithub: https://github.com/0xgalz/\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
