# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - web
    - mobile
    - ios
    - architecture
    - scala
    - java
title: 'YOW! 2013 Ben Christensen - Creating Observable APIs with Rx'
recordingDate: 1513953381
description: "Learn how functional reactive programming styles are used by Netflix to create “Observable APIs” and implement concurrent web services against asynchronous data sources without blocking, synchronization or thread-safety concerns by using declarative functional reactive composition.\n\nTo achieve this Netflix ported Rx from .Net to the JVM and open sourced it as RxJava (http://techblog.netflix.com/2013/02/rxjava-netflix-api.html). It is a library for composing asynchronous and event-based programs using observable sequences for the Java VM that supports Java 6+, Clojure, Scala, Groovy, JRuby and Java 8 lambdas.\n\nCome see what functional reactive programming looks like, what use cases it addresses and real-world examples of how it can become a tool in your application development.\n\nBen Christensen is a software engineer on the Netflix Edge Services Platform team responsible for fault tolerance, performance, architecture and scale while enabling millions of customers to access the Netflix experience across more than 1,000 different device types. Interests include building maintainable, performant, high-volume, high-impact systems which has recently led to functional and reactive programming styles, polyglot codebases and open source projects such as Hystrix (https://github.com/Netflix/Hystrix) and RxJava (https://github.com/Netflix/RxJava). Prior to Netflix, Ben was at Apple making iOS apps and media available on the iTunes store.\n\nFor more on YOW! Conference, visit http://www.yowconference.com.au"
