# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'The Science of Unit Tests'
language: English
recordingDate: 1616536779
description: "Unit testing has emerged as one of the foundations of modern software development. There are plenty of good talks on how to write tests, full of good advice, guidelines, and procedures: \"Test using only the public interface\", \"Use Test-Driven Development\", \"Write Behavior-Driven Tests\".\n\nBut what are the fundamentals that lie beneath all the good advice? What principles should guide our testing?\n\n\nThis talk will start by reviewing the basics of good testing, and then explore the close relationship between unit testing and the scientific method. Unit tests are, in some sense, small scientific instruments to detect phenomena in our source code. When seen in this light, we can start to see *why* the good advice we've been getting is good, and how an empirical approach can help guide decisions about what, when, and how to test our code.\n\n\nPUBLICATION PERMISSIONS:\nCppCon provided Coding Tech with the permission to republish CppCon tech talks. CppCon YouTube channel: https://www.youtube.com/channel/UCMlGfpWw-RUdWX_JbLCukXg"
