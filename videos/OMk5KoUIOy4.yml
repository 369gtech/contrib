# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - c++
    - performance
    - security
    - architecture
    - java
title: 'Your next JVM: Panama, Valhalla, Metropolis by John Rose'
language: English
recordingDate: 1492159459
description: "Strap in for a high-speed deep dive into JVM features now on the drawing board, which will benefit Java and all other languages that run on the JVM. Project Panama is building new modes of interconnection with native C and C++ APIs, including direct up-calls, down-calls, direct coding of vectorized loops, and access to structured off-heap data. Project Valhalla will naturalize flat, pointer-free data types to the JVM heap, giving JVM programmers the ability to define new classes with the flexibility of Java objects or C++ templates, and the efficiency of C or assembly code. Meanwhile, in the engine room, Project Metropolis is contemplating \"Java on Java\", the promise of a reboot of JVM technology using a modern code generator, Graal, which can be easily ported to new platforms and adapted to new workloads. All of this is happening in real time, in the OpenJDK. The combined result will be a JVM which will be the best platform to code the systems of the future, on the hardware of the future, for all of us coders of the future.\n\nLead or guide for Project Panama (native interconnect), the Da Vinci Machine Project (JVM futures), Project Valhalla (polymorphism and value types), Arrays 2.0, Metropolis (Java-on-Java RI), JVM security.\n\nHas worked on Java technology at Sun then Oracle since 1995, contributing widely to functionality and performance of the Sun/JDK stack, touching everything from hardware architecture to code generators to libraries to programming languages.\n\nPast projects include JVM invokedynamic, Java inner classes, Pack200 (archive format), the initial port of HotSpot (to SPARC), the Unsafe API, and various dynamic, parallel, and hybrid languages, including Common Lisp, Scheme (“esh”), dynamic bindings for C++."
