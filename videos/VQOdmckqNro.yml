# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'How NOT to Sample Audio! - Computerphile'
language: English
recordingDate: 1610726700
description: "Could Dave recreate audio from a wav file preview image grabbed from a screen cap?  \n\nMore about David Domminney Fowler: https://youtube.com/c/DavidDomminneyFowler \n\nhttps://www.facebook.com/computerphile\r\nhttps://twitter.com/computer_phile\r\n\r\nThis video was filmed and edited by Sean Riley.\r\n\r\nComputer Science at the University of Nottingham: https://bit.ly/nottscomputer\r\n\r\nComputerphile is a sister project to Brady Haran's Numberphile. More at http://www.bradyharan.com\n\n\nDave's Code:\n(angle brackets weren't allowed in YT description)\nusing System;\nusing System.Collections.Generic;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Extract_Audio\n{\n    internal class Program\n    {\n        private static void Main(string[] args)\n        {\n            string file = \"computerphile.png\";\n\n            Bitmap b = new Bitmap(@\"g:\\Computerphile\\\" + file);\n\n            var values = new System.Collections.Generic.ListANGLEBRACKETOPENintANGLEBRACKETCLOSE();\n\n            for (int x = 0; x ANGLEBRACKETOPEN b.Width; x++)\n            {\n                int max = 0;\n                int min = b.Height;\n\n                for (int y = 0; y ANGLEBRACKETOPEN b.Height; y++)\n                {\n                    if (b.GetPixel(x, y).GetBrightness() ANGLEBRACKETCLOSE 0.5)\n                    {\n                        min = Math.Min(y, min);\n                        max = Math.Max(max, y);\n                    }\n                }\n\n                values.Add(min);\n                values.Add(max);\n            }\n\n            int filter = 4;\n\n            for (int x = 0; x ANGLEBRACKETOPEN values.Count - filter; x++)\n                values[x] = (int)values.GetRange(x, filter).Average();\n\n            var f = new System.IO.StreamWriter($@\"g:\\Computerphile\\{file}.txt\");\n\n            foreach (var v in values)\n                f.WriteLine(v);\n\n            f.Close();\n\n            var wf = System.IO.File.OpenWrite($@\"g:\\Computerphile\\{file}.wav\");\n\n            var RIFF_HEADER = new byte[] { 0x52, 0x49, 0x46, 0x46 };\n            var FORMAT_WAVE = new byte[] { 0x57, 0x41, 0x56, 0x45 };\n            var FORMAT_TAG = new byte[] { 0x66, 0x6D, 0x74, 0x20 };\n            var AUDIO_FORMAT = new byte[] { 0x1, 0x0 };\n            var SUBCHUNK_ID = new byte[] { 0x64, 0x61, 0x74, 0x61 };\n            int BYTES_PER_SAMPLE = 1;\n            int samplerate = 48000;\n            int channelcount = 1;\n            int lastv2 = 0;\n            int stretch = 9;\n            int datalength = values.Count * stretch * BYTES_PER_SAMPLE;\n            int byteRate = samplerate * channelcount * BYTES_PER_SAMPLE;\n            int blockAlign = channelcount * BYTES_PER_SAMPLE;\n\n            wf.Write(RIFF_HEADER, 0, RIFF_HEADER.Length);\n            wf.Write(BitConverter.GetBytes(datalength + 40), 0, 4);\n            wf.Write(FORMAT_WAVE, 0, FORMAT_WAVE.Length);\n            wf.Write(FORMAT_TAG, 0, FORMAT_TAG.Length);\n            wf.Write(BitConverter.GetBytes(16), 0, 4);\n            wf.Write(AUDIO_FORMAT, 0, AUDIO_FORMAT.Length);\n            wf.Write(BitConverter.GetBytes(channelcount), 0, 2);\n            wf.Write(BitConverter.GetBytes(samplerate), 0, 4);\n            wf.Write(BitConverter.GetBytes(byteRate), 0, 4);\n            wf.Write(BitConverter.GetBytes(blockAlign), 0, 2);\n            wf.Write(BitConverter.GetBytes(BYTES_PER_SAMPLE * 8), 0, 2);\n            wf.Write(SUBCHUNK_ID, 0, SUBCHUNK_ID.Length);\n            wf.Write(BitConverter.GetBytes(datalength), 0, 4);\n\n            foreach (var v in values)\n            {\n                double v2 = (v - values.Min()) / (double)(values.Max() - values.Min()) * 255;\n\n                for (int x = 0; x ANGLEBRACKETOPEN stretch; x++)\n                {\n                    double v3 = x / (double)stretch * v2 + (1 - x / (double)stretch) * lastv2;\n                    wf.WriteByte(Convert.ToByte(v3));\n                }\n\n                lastv2 = (int)v2;\n            }\n\n            wf.Close();\n        }\n    }\n}"
