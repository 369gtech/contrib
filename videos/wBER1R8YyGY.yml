# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - performance
    - containers
title: 'CppCon 2016: Matthew Bentley “Colonies, performance and why you should care"'
language: English
recordingDate: 1475163811
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016\n—\nIn game development and many other high-performance, highly-modular development architectures, maintaining valid references to container elements regardless of erasure and insertion is often crucial. While there are many workarounds for this, typically using std::vector with various methods to avoid invalidation, to date there exist no generalized solutions to the problem which also provide strong cache performance.\n\nplf::colony, a proposed unordered container class from the SG14 working group, is one attempt to remedy this situation: it provides fast insertion, erasure and iteration performance while maintaining pointer stability to non-erased elements, which is unaffected by both insertion and erasure.\n\nIn this talk we’ll explore both the structure and comparative performance of plf::colony, contrasting it with other standard library containers and their potential modifications, showing how it can outperform many typical alternatives where large amounts of insertions and erasures are concerned. This will include details on:\n\nThe “jump-counting” skipfield pattern, a new numeric pattern which has better performance than its boolean counterpart.\n\nplf::stack, a replacement for std::stack with stronger stack performance than other standard library containers.\n\nThe chained-group allocation pattern, common to both containers.\n\nIf you’re not interested in new containers, you may still pick up a few concepts to help you with improving your own implementations and high-performance C++ code. If you are interested in better containers, or better container usage, you should definitely attend this talk.\n— \nMatthew Bentley\nComputer Engineer\nMatt Bentley was born in 1978 and never recovered from the experience. He started programming in 1986, completing a BSc Computer Science 1999, before spending three years working for a legal publishing firm, getting chronic fatigue syndrone, quitting, building a music studio, recovering, getting interested in programming again, building a game engine, and stumbling across some generalized solutions to some old problems.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
