# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - lisp
    - java
title: 'Shenandoah: An Open Source Garbage Collector (JEP 189) with an Ultralow Pause Time'
language: English
recordingDate: 1433260147
description: "Back in the Lisp machine days, hitting a GC pause meant that it was time to go get a cup of coffee. JVMs do better by using parallel (multiple threads working together) and concurrent (GC threads working while the mutator is running) techniques, but they can still cause unacceptably long pause times with today’s large heaps. This session discusses a new GC algorithm being developed at Red Hat for OpenJDK.  Shenandoah is the first open source GC algorithm for OpenJDK that does marking and evacuation concurrently with running Java threads. Performing evacuation concurrently makes it possible to hit much stricter response time goals.\n\n\nAuthor:\nChristine Flood\nChristine H. Flood has been working on Garbage Collection (GC) since dinosaurs roamed the earth. She's co-written several papers on JVM GC algorithms including the parallel GC paper and the G1 paper. She is now working at Red Hat on Shenandoah, a new open-source pauseless GC algorithm for OpenJDK.\nView more trainings by Christine Flood at https://www.parleys.com/author/christine-flood-1\n\nFind more related tutorials at https://www.parleys.com/category/developer-training-tutorials"
