# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - cloud
    - devops
    - architecture
title: 'CD for DBs: Database Deployment Strategies - Electric Cloud'
recordingDate: 1479329840
description: "CD for DBs: Database Deployment Strategies\n\nChris Fulton, Global Technical Account Manager, Electric Cloud\n\nAs organizations invest in DevOps to release more frequently, there’s a need to treat the database tier as an integral part of your automated delivery pipeline – to build, test and deploy database changes just like any other part of your application.\n\nHowever, databases (particularly RDBMS) are different from source code, and pose unique challenges to Continuous Delivery - especially in the context of deployments. Often, code changes require updating or migrating the database before the application can be deployed. A deployment method that works for installing a small database or a green-field application may not be suitable for industrial-scale databases. Updating the database can be more demanding than updating the app layer: database changes are more difficult to test, and rollbacks are harder. Furthermore, for organizations who strive to minimize service interruption to end users, database updates with no-downtime are a laborious operation. \n\nYour DB stores the most mission-critical and sensitive data of your organization (transaction data, business data, user information, etc.). As you update your database, you’d want to ensure data integrity, ACID, data retention, and have a solid rollback strategy - in case things go wrong …\n\nThis talk covers strategies for database deployments and rollbacks:\n\n• What are some patterns and best practices for reliably deploying databases as part of your CD pipeline?\n• How do you safely rollback database code? \n• How do you ensure data integrity?\n• What are some best practices for handling advanced scenarios and backend processes, such as scheduled tasks, ETL routines, replication architecture, linked databases across distributed infrastructure, and more.\n• How to handle legacy database, alongside more modern data management solutions? \n\nDOES16 San Francisco\nDevOps Enterprise Summit\nhttps://events.itrevolution.com/us/"
