# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Demystifying Memory Leaks in JavaScript – Ruben Bridgewater'
language: English
recordingDate: 1613390372
description: "Node Congress 2021 #NodeCongress\nWebsite – https://nodecongress.com \n\nWatch the full version of all the conference talks including QnA sessions on GitNation Video platform, follow the link  → http://bit.ly/node-yt-talks-qna\n\nTalk: Demystifying Memory Leaks in JavaScript\n\nAbstract: Today it is possible to write complex applications with only a handful of developers in a short time frame by relying upon Frameworks and tooling. But what happens when the application crashes with out of memory errors? How is it possible to guarantee fast response times? These problems are still considered difficult to solve. Let's dive into the Node.js internals and learn about profilers and the garbage collector. Understanding how the system works in depth let's you write code that is safer, faster and less error prone. Let's make sure you always provide the best experience for everyone. Yourself and your customer. Let us find that memory leak and fix it. \n\nThis event would not take place without the support of sponsors:\n\nPlatinum Sponsors\nFocus Reactive → https://focusreactive.com/\n\nGold Sponsors\nAWS Amplify → https://docs.amplify.aws/\nRetool → https://retool.com/\nEpsagon → https://epsagon.com/\nInfluxdata → https://www.influxdata.com/\nStackHawk → https://www.stackhawk.com/\nG2i → https://www.g2i.co/ \n\nSilver Sponsors\nAppSignal → https://appsignal.com/\nSailscasts → https://sailscasts.com/\n\nDiversity Sponsor\nPrisma → https://www.prisma.io/"
