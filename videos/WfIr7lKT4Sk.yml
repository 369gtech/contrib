# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - c++
    - craftsmanship
    - 'code design'
title: 'CppCon 2018: Timur Doumler & Dmitry Kozhevnikov “Parsing C++”'
language: English
recordingDate: 1539542183
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018\n—\nC++ is a notoriously hard language to parse. Its grammar is highly context-dependent and ambiguous, and cannot be parsed without semantic analysis and arbitrarily long lookahead. Not only programmers, but also compilers (and their authors) often struggle with interpreting certain C++ constructs correctly.\n\nThis talk sheds some light on the grammar of C++ and why parsing it is hard. We will discuss which of these problems are inherited from C, and which arise due to features unique to C++. We will also look at a reasonably easy-to-parse subset of C++ (and whether it ever occurs in real life). Most importantly, we will talk about why all this matters for the practical C++ developer, and not just for compiler writers. And of course, we will also show plenty of surprising, brain-twisting code snippets.\n\nThis talk is aimed at general C++ programmers and does not require any expert knowledge about parsing and semantic analysis.\n— \nTimur Doumler, JetBrains\n\nTimur Doumler works at JetBrains, where he develops the C++ frontend for CLion, the cross-platform C++ IDE. In the past he has spent much time working in the audio tech industry and has written code for the JUCE framework. Timur is an active member of the ISO C++ committee and passionate about clean code, good tools, and the evolution of the C++ language. He regularly speaks at conferences and enjoys C++ community work, currently serving as an organiser and program chair for the Audio Developer Conference and as moderator on includecpp.org.\n\nDmitry Kozhevnikov\nSoftware Developer, JetBrains\nDmitry works on C++ support in the CLion IDE by JetBrains, covering various aspects like the in-house C++ engine, inspections and refactoring engine, and clang integration.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
