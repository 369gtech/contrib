# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


title: 'GBForth: Using Forth to understand the Game Boy'
language: English
recordingDate: 1549740309
description: "by Tijn Kersjes and David Vázquez Púa\n\nAt: FOSDEM 2019\nhttps://video.fosdem.org/2019/K.4.601/retro_gbforth.webm\n\n\nDuring this talk we'll get a good understanding of Game Boy programming by reverse-engineering a ROM using Forth. We go beyond just decompiling the ROM to assembly and show how we created a cross-compiler that allows writing Game Boy games in Forth as well. You'll get to see how Forth interacts with the Game Boy hardware, and how the language can be extended to easily render sprites or play sounds for example. We show you how to use Forth to incrementally refactor Game Boy bytecode into higher levels of abstraction. No black boxes. No magic. This way you can understand and appreciate every layer of the hardware and CPU instructions one by one. A similar approach can help you understand other systems (NES comes to mind) and create a language that is more comfortable than ASM or C to work with. \n\nThe talk is accessible to developers without former Game Boy, Forth or compiler experience. \n\nTopics covered:\n- Go through the basics of Game Boy hardware\n- Explain how rendering graphics works on a Game Boy\n- Outline the challenges of working with the Game Boy memory\n- Show how to reverse-engineer a binary using Forth\n- Describe the process of writing the cross-compiler\n- Talk about using GBForth to write Game Boy games \n\nRoom: K.4.601\nScheduled start: 2019-02-02 12:25:00+01"
