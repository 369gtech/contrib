# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - startup
title: 'Structured Streams: A New Transport Abstraction'
recordingDate: 1196765856
description: "Google Tech Talks\nNovember, 27 2007\n\nInternet applications currently have a choice between\nstream and datagram transport abstractions. Datagrams\nefficiently support small transactions and streams are\nsuited for long-running conversations, but neither\nabstraction adequately supports applications like HTTP that\nexhibit a mixture of transaction sizes, or applications like\nFTP and SIP that use multiple transport instances.\nStructured Stream Transport (SST) enhances the traditional\nstream abstraction with a hierarchical hereditary structure,\nallowing applications to create lightweight child streams\nfrom any existing stream. Unlike TCP streams, these\nlightweight streams incur neither 3-way handshaking delays\non startup nor TIME-WAIT periods on close. Each stream\noffers independent data transfer and flow control, allowing\ndifferent transactions to proceed in parallel without\nhead-of-line blocking, but all streams share one congestion\ncontrol context. SST supports both reliable and best-effort\ndelivery in a way that semantically unifies datagrams with\nstreams and solves the classic &quot;large datagram&quot; problem,\nwhere a datagram's loss probability increases exponentially\nwith fragment count. Finally, an application can prioritize\nits streams relative to each other and adjust priorities\ndynamically through out-of-band signaling. A user-space\nprototype shows that SST is TCP-friendly to within 2%, and\nperforms comparably to a user-space TCP and to within 10% of\nkernel TCP on a WiFi network.\n\n\nSpeaker: Bryan Ford, PhD CS MIT (June 2008)\nPhD Advisor: Frans Kaashoek"
