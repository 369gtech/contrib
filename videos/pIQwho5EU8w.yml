# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: '"Simplifying Asynchronous Code With Scala Async" by Philipp Haller'
language: English
recordingDate: 1614437682
description: "Ever wished the compiler could make asynchronous programming easier? Enter Scala Async. Do asynchronous I/O like \"normal\" blocking I/O, program with Futures and Promises even more naturally! Scala Async makes it possible to \"suspend\" at arbitrary points in a block of regular Scala code, and to \"resume\" from that point later--all without blocking. This not only makes it possible to make concurrent code look sequential, it makes it possible to actually use even the most unfamiliar asynchronous libraries in a familiar blocking style. What’s more, not only does it come out-of-the-box seamlessly integrated with the Futures and Promises API of Scala 2.10, but you can also easily use it with any other event-driven Scala or Java library of your choice.\n\nPhilipp Haller\nTypesafe\n@philippkhaller\n\n\nPhilipp Haller has been a member of the Scala team since 2006. His research on concurrent programming with race-free actors in Scala has been published in leading conferences, winning a best paper award. He is the creator of Scala’s first actors library which inspired Akka, as well as a contributor to the Scala language, standard library, and tools. Co-author of the book \"Actors in Scala\", Philipp has been one of the lead designers of Scala’s new Futures API (SIP-14) as well as Scala Async. He holds a PhD in Computer Science from EPFL.\n\n\nRecorded at Strange Loop conference (https://thestrangeloop.com) in St. Louis, MO, Oct 2013."
