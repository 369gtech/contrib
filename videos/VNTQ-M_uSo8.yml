# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - testing
title: '"Agility & Robustness: Clojure spec" by Stuart Halloway'
language: English
recordingDate: 1474118575
description: "You can program with high agility and end up with a robust, maintainable program. This talk will show you how to use Clojure and the new spec library to write programs that behave as expected, meet operational requirements, and have the flexibility to accommodate change.\n\nWith Clojure, you can rapidly develop robust and reusable programs using interactive development at the REPL immutable data and pure functions code as data Clojure's new spec library augments these approaches. Developing with spec is declarative, predicative, layered, robust, and integrated with Clojure.\n\nspec is declarative. As with type systems in static languages, spec lets you make declarative statements that communicate and document data, function arguments, and returns.\n\nspec is predicative. You can declare predicates about data, about function arguments and returns, and even function semantics. This overlaps not only with type systems, but also with validations that are often done with costly bespoke tests and runtime checks.\n\nspec is layered. Spec does not require any specific workflow or program shape, and in particular is compatible with iterative and incremental development.\n\nspec supports robust programs via automatic generative testing. Given specifications, spec can write generative tests for you, generating a volume of tests limited only by your CPU time, not by what you are able to write and maintain by hand.\n\nspec is fully integrated with Clojure. As you develop your program, you have interactive access to spec-driven documentation, validation, destructuring, conformance checking, sample data, testing, and program instrumentation.\n\nStuart Halloway is a founder and President of Cognitect, Inc. He is a Clojure committer, and a developer of the Datomic database. Stuart has spoken at a variety of industry events, including StrangeLoop, Clojure/conj, EuroClojure, ClojureWest, SpeakerConf, QCon, GOTO, OSCON, RailsConf, RubyConf, JavaOne, and NFJS. Stuart has written a number of books and technical articles. Of these, he is most proud of Programming Clojure."
