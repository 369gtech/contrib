# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - ml
    - tensorflow
    - c++
    - performance
    - agile
    - python
title: 'CppCon 2017: Peter Goldsborough “A Tour of Deep Learning With C++”'
language: English
recordingDate: 1508870552
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017\n—\nDeep Learning is a subfield of artificial intelligence that employs deep neural network architectures and novel learning algorithms to achieve state of the art results in image classification, speech recognition, motion planning and other domains. While all machine learning algorithms are initially formulated in mathematical equations (the only programming language where single letter variable names are encouraged), they must eventually be translated into a computer program. Moreover, because deep neural networks can often be composed of many hundreds of millions of trainable parameters and operate on gigabytes of data, these computer programs have to be fast, lean, often distributed and squeeze every last ounce of performance out of modern CPUs, GPUs and even specialized hardware. This is synonymous with saying machine learning algorithms are usually implemented in C or C++ under the hood, even though libraries like TensorFlow, Torch or Caffe expose APIs in Python or Lua to ease the process of research and speed up iteration. This talk aims to break the single responsibility principle and do three things at once: \n\n1. Give a sweeping introduction to the state of the art in deep learning, \n2. Give examples of what it means to implement neural networks in C++, from an implementer's perspective, \n3. Give examples of building deep learning models in C++, from a researcher's perspective. \n\nHere, the distinction between building and implementing is that the former means stacking together high level modules to achieve some machine learning task, while the latter means actually writing the CPU or GPU kernels that make the magic happen. The goal of the talk is for every attendee to walk away with a general understanding of the state and challenges of the field and hopefully be in a position to implement and build their own deep learning models.\n— \nPeter Goldsborough: Software Engineer, Facebook\n\nI enjoy the intersection of blue-skies machine learning research and low-level infra engineering.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
