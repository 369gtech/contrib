# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - c++
title: 'CppCon 2017: Herb Sutter “Meta: Thoughts on generative C++”'
language: English
recordingDate: 1506638875
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017\n—\nTwo years ago, I started to focus on exploring ways that we might evolve the C++ language itself to make C++ programming both more powerful and simpler. The only way to accomplish both of those goals at the same time is by adding abstractions that let programmers directly express their intent—to elevate comments and documentation to testable code, and elevate coding patterns and idioms into compiler-checkable declarations. The work came up with several potential candidate features where judiciously adding some power to the language could simplify code dramatically, while staying true to C++'s core values of efficient abstraction, closeness to hardware, and the zero-overhead principle. \n\nThe first two potential candidate features from that work to be further developed and proposed for ISO C++ are the ＜=＞ unified comparison operator (minor) and what I've provisionally called \"metaclasses\" as a way to generatively write C++ types (major). This talk is about the latter, and includes design motivation, current progress, and some live online compiler demos using the prototype Clang-based compiler built by Andrew Sutton and hosted at godbolt.org.\n— \nHerb Sutter - Software architect, Microsoft\n\nHerb chairs the ISO C++ committee and is the primary author or co-author of a number of Standard C++ features, including nullptr, enum class, parallel algorithms, C++17 structured bindings, and the in-progress unified ＜=＞ comparison operator.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
