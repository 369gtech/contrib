# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Coding Challenge 162: Self-Avoiding Walk'
language: English
recordingDate: 1623351697
description: "It's finally time to attempt a Self-Avoiding Walk! In this video, I quickly visualize a simple JavaScript p5.js implementation of a self-avoiding walk. I then tackle the more complex problem of backtracking to find a solution to a space-filling self-avoiding walk. https://thecodingtrain.com/CodingChallenges/162-self-avoiding-walk.html\n\np5.js Web Editor Sketches:\n🕹️ Basic Self Avoiding Walk: https://editor.p5js.org/codingtrain/sketches/2_4gyDD_9\n🕹️ Self Avoiding Walk with Backtracking: https://editor.p5js.org/codingtrain/sketches/dRWS3A9nq\n🕹️ Self Avoiding Walk 3D: https://editor.p5js.org/codingtrain/sketches/D0ONOlCDT\n🕹️ Self Avoiding Walk with Bezier: https://editor.p5js.org/codingtrain/sketches/KFbX0NWgh\n🕹️ Self Avoiding Walk with Recursion: https://editor.p5js.org/codingtrain/sketches/UPxBk1YiB\n🕹️ Random Walk with Alpha: https://editor.p5js.org/codingtrain/sketches/IEw2RkDnJ\n\n🎥 Previous video: https://youtu.be/EvS_a921dBo?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH\n🎥 All videos: https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH\n\nLinks discussed in this video:\n🔗 Self Avoiding Walk (Wikipedia): https://en.wikipedia.org/wiki/Self-avoiding_walk\n🔗 The complexity of counting self-avoiding walks in subgraphs of two-dimensional grids and hypercubes: https://www.sciencedirect.com/science/article/pii/S030439750300080X\n🔗 The pivot algorithm: A highly efficient Monte Carlo method for the self-avoiding walk (sci-hub): https://sci-hub.st/10.1007/bf01022990\n\nOther videos mentioned in this video:\n🎥 Random Walker - Coding Challenge 52: https://youtu.be/l__fEY1xanY\n🎥 Minesweeper - Coding Challenge 71: https://youtu.be/LFU5ZlrR21E\n🎥 filter() - Array Functions: https://youtu.be/qmnH5MT_luk\n🎥 Maze Generator - Coding Challenge 10: https://youtu.be/HyK_Q5rrcr4\n🎥 Recursion - Coding Train 77: https://youtu.be/jPsZwrV9ld0\n🎥 A* Pathfinding Algorithm - Coding Challenge 51: https://youtu.be/aKYlikFAV4k\n🎥 3D Self Avoiding Walk - Coding Train Live (May 27, 2021): https://youtu.be/jlK1SJr-FBc?t=4353\n\nTimestamps:\n0:00 Choo choo! Welcome!\n1:05 Explain! How can we go about this?\n2:29 Code! Let's add a visited grid.\n6:25 Code! What are the options for movement now?\n10:34 Code! Let's check the edges.\n12:34 I could stop here but wait.\n13:30 Explain! How can we think about backtracking?\n15:15 Code! Let's make a spot class and a path variable.\n24:23 Code! Now backtracking!\n29:38 Whoops! Copying allOptions was a mistake.\n31:19 Code! Maybe we need an end condition.\n32:09 Yay! It worked.\n32:22 This could take awhile. Could it be improved?\n\n🚂 Website: http://thecodingtrain.com/\n👾 Share Your Creation! https://thecodingtrain.com/Guides/community-contribution-guide.html\n🚩 Suggest Topics: https://github.com/CodingTrain/Rainbow-Topics\n💡 GitHub: https://github.com/CodingTrain\n💬 Discord: https://discord.gg/hPuGy2g\n💖 Membership: http://youtube.com/thecodingtrain/join\n🛒 Store: https://standard.tv/codingtrain\n📚 Books: https://www.amazon.com/shop/thecodingtrain\n🖋️ Twitter: https://twitter.com/thecodingtrain\n📸 Instagram: https://www.instagram.com/the.coding.train/\n\n🎥 Coding Challenges: https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH\n🎥 Intro to Programming: https://www.youtube.com/playlist?list=PLRqwX-V7Uu6Zy51Q-x9tMWIv9cueOFTFA\n\n🔗 p5.js: https://p5js.org\n🔗 p5.js Web Editor: https://editor.p5js.org/\n🔗 Processing: https://processing.org\n\n📄 Code of Conduct: https://github.com/CodingTrain/Code-of-Conduct\n\nThis description was auto-generated. If you see a problem, please open an issue: https://github.com/CodingTrain/website/issues/new"
