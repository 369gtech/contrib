# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - ml
    - java
title: 'A Raspberry Pi and DeepLearning4J Brain That Plays Minecraft by Simon Ritter'
language: English
recordingDate: 1510225553
description: "According to Wikipedia, Minecraft is the second best-selling video game of all time. The original, PC-based version, written in Java is undoubtedly the most popular Java client application ever.\n\nThe creator of Minecraft, Mojang, was acquired by Microsoft in 2014 and recently Microsoft Labs announced a related project called Malmo. The Malmo platform is a sophisticated AI experimentation platform built on top of Minecraft and designed to support fundamental research in artificial intelligence.\n\nIn this session, we will look at how project Malmo was used in conjunction with the DeepLearning4J library and a cluster of Raspberry Pis to develop software in Java to play Minecraft without the need for a human.\n\nWe'll start with a brief introduction to the ideas of machine learning before moving on to the DeepLearning4J library that simplifies development of this type of code in Java. We’ll discuss the design of the Raspberry Pi cluster and the software developed before finishing with a demonstration of the Pi Brain playing Minecraft autonomously.\n\nSimon Ritter is the Deputy CTO of Azul Systems. Simon has been in the IT business since 1984 and holds a Bachelor of Science degree in Physics from Brunel University in the U.K.\n\nSimon joined Sun Microsystems in 1996 and has spent time working in both Java development and consultancy. Having moved to Oracle as part of the Sun acquisition, he managed the Java Evangelism team for the core Java platform and embedded Java. Now at Azul, he continues to help people understand Java as well as Azul’s JVM technologies and products. Simon has twice been awarded Java Rockstar status at JavaOne and is a Java Champion. He currently represents Azul on the JCP Executive Committee and on the Expert Group of JSR 379, Java SE 9."
