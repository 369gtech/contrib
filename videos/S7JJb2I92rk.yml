# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - .net
    - 'c#'
title: 'Сборка мусора (Garbage Collection, GC) .NET в C# - Учим Шарп #28'
language: Russian
recordingDate: 1550775249
description: "Сборка мусора (Garbage Collection, GC) .NET на примере языка программирования C#\n\nНа этом занятии мы узнаем, что такое сборщик мусора (garbage collector, gc) и он выполняет освобождение памяти, оберегая наши приложения от утечки. Узнаем, как выполняется сборка мусора (garbage collection), поколения (generation) объектов, а также придется чуть подробнее поговорить про ссылочные (reference type) и значимые (value type) типы, как они хранятся в памяти стека (stack) и управляемой кучи (heap). Изучим основные методы System.GC, такие как Collect, GetGeneration, GetTotalMemory и другие. Узнаем, что на самом деле делает оператор new.\n\nПодписывайтесь на информационные каналы курса, чтобы ничего не пропустить и не потерять информацию:\nЗакрытый чат для участников курса: https://vk.cc/8Ev4Gv \nРассылка с оповещениями в ВК: https://vk.cc/86Y7Pa\n\nПодписывайтесь на мои социальные сети, там много всего интересного и полезного: \nhttps://vk.com/codeblog\nhttps://tele.click/codeblog\nhttps://zen.yandex.ru/codeblog\n\nПоддержать канал: https://www.donationalerts.ru/r/shwanoff\n\nКстати, меня зовут Шванов Вадим, и я программист на языке C# уже больше 8 лет, а также я являюсь автором ресурсов для разработчиков CODE BLOG. На этом канале я рассказывают про IT, технологии и веду курс C# с нуля под названием Учим Шарп. В его рамках мы рассматриваем язык программирования c# с нуля, синтаксис, структуры данных, алгоритмы, паттерны проектирования и многое другое. Эти уроки c sharp подойдут для начинающих и для тех кто хочет подробнее изучить платформу .net и среду разработки visual studio. Для меня важно не только показать практическое применение языка си шарп и платформы dotnet, но и  объяснить базовые идеи программирования. Уроки с# выходят как минимум два раза в неделю в понедельник и четверг в 20-00. C# курс рассчитан на то, чтобы изучить программирование с нуля. Все занятия веду я сам - опытный программист c#. Разработка ведется в IDE visual studio c#. Подписывайтесь, впереди еще много интересного и полезного об it, программировании как для  начинающих, так и для более опытных программистов c#.\n\nВ этой и последующих статьях мы займемся исследованием сборщика мусора в .NET (Garbage Collector, GC), одного из основных механизмов, оказывающих существенное влияние на производительность приложений для .NET. Освобождая разработчиков от хлопот, связанных с освобождением памяти, сборщик мусора вводит другие проблемы, которые необходимо учитывать при разработке программ, производительность которых имеет большое значение.\n\nНазначение сборщика мусора\nСборка мусора - это высокоуровневая абстракция, избавляющая разработчиков от необходимости заботиться об освобождении управляемой памяти. В окружениях, снабженных механизмом сборки мусора, выделение памяти производится в момент создания объектов, а освобождение происходит, когда в программе исчезает последняя ссылка на объект. Кроме того, сборщик мусора предоставляет интерфейс финализации для неуправляемых ресурсов, находящихся за пределами управляемой динамической памяти, благодаря чему имеется возможность обеспечить выполнение кода, когда эти ресурсы окажутся не нужны.\n\nПри создании сборщика мусора в .NET преследовались две основные цели:\n\nизбавиться от ошибок и ловушек, связанных с управлением памятью вручную;\n\nобеспечить производительность операций управления памятью, равную или превышающую производительность ручных механизмов.\n\nВ существующих языках программирования и фреймворках используются различные стратегии управления памятью. Мы коротко исследуем две из них: управление на основе списка свободных блоков (реализацию которой можно найти в коллекции стандартных инструментов управления памятью языка C) и сборка мусора на основе подсчета ссылок.\n\nСборщик мусора, опирающийся на подсчет ссылок, связывает каждый объект с целочисленной переменной - счетчиком ссылок. В момент создания объекта счетчик ссылок инициализируется значением 1. Когда приложение создает новую ссылку на объект, его счетчик ссылок увеличивается на 1. Когда приложение удаляет ссылку на существующий объект, его счетчик ссылок уменьшается на 1. Когда счетчик ссылок достигает значения 0, объект можно уничтожить и освободить занимаемую им память.\nПодробный курс по языку программирования C#:\nhttps://www.youtube.com/watch?v=p9QxqrwkPbA&list=PLIIXgDT0bKw4OmiZ9yGmShKsY0XncViZ8\n\nПодробный курс по структурам данных на языке программирования C#:\nhttps://www.youtube.com/watch?v=hZYQmNJBsKM&list=PLIIXgDT0bKw4DB9toGU73ntyYIZV7aJi5\n\nПодробный курс по алгоритмам сортировки на языке C#:\nhttps://www.youtube.com/watch?v=PD1Nn4fHcts&list=PLIIXgDT0bKw4n6pwBjymd3wCPyQ3_SLMo\n\nРазговоры о программировании, мотивации, и ответы на IT вопросы:\nhttps://www.youtube.com/watch?v=cjjA6SQ_i3Y&list=PLIIXgDT0bKw7oKRr2c1n-e_dUgR8Aqdsi\n\n#программирование #программист #csharp #ityoutubersru #codeblog"
