# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Concurrency Patterns - Rainer Grimm - CppCon 2021'
language: English
recordingDate: 1639753350
description: "https://cppcon.org/\nhttps://github.com/CppCon/CppCon2020\n---\nThis session is part of the Software Design Track.\n\nThe main concern when you deal with concurrency is shared, mutable state or as Tony Van Eerd put it in his CppCon 2014 talk “Lock-free by Example”: “Forget what you learned in Kindergarten (i.e., stop Sharing).”\n\nI present in theory and praxis proven patterns such as thread-safe storage, strategized locking, thread-safe interface, or guarded suspension to deal with the enemies of thread-safe programming: shared state and mutation.\n\nTo synchronize and schedule member function invocations in a concurrent architecture, the classics such as active object, or monitor object provide valuable services.\n\n---\nRainer Grimm\n\nI've worked as a software architect, team lead, and instructor since 1999. In 2002, I created company-intern meetings for further education. I have given training courses since 2002. My first tutorials were about proprietary management software, but I began teaching Python and C++ soon after. In my spare time, I like to write articles about C++, Python, and Haskell. I also like to speak at conferences. I publish weekly on my English blog (https://www.modernescpp.com/) and the (https://www.grimm-jaud.de/index.php/blog), hosted by Heise Developer. Since 2016 he is an independent instructor giving seminars about modern C++ and Python. Rainer published several books in various languages to modern C++ and concurrency, C++20, and the C++ Core Guidelines, in particular. Due to his profession, Rainer always searches for the best way to teach modern C++\n---\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
