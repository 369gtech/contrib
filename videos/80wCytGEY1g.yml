# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - java
    - functional
title: 'Making Java more dynamic'
recordingDate: 1456224743
description: "(Recorded at Jfokus 2016. http://www.jfokus.com)\n\nMaking Java more dynamic\n\nWhile Java's strict type system is a great help for avoiding programming errors, it also takes away some of the flexibility that developers appreciate when using dynamic languages. By using runtime code generation, it is possible to bring back some flexibility back to the Java virtual machine. For this reason, runtime code generation is used by many state-of-the-art Java frameworks for implementing POJO-centric APIs but it also opens the door for assembling more modular applications. This presentation gives an overview on the various ways code generation and manipulation is currently used on the Java platform, both by library developers and end users. Furthermore, it discusses the up- and downsides of several code geeration libraries such as ASM, Javassist, cglib and Byte Buddy.\n\nRafael Winterhalter, Scienta\n\nRafael works as a software engineer in Oslo, Norway. He is a proponent of static typing and a JVM enthusiast with particular interests in code instrumentation, concurrency and functional programming. Rafael blogs about software development, regularly presents at conferences and was pronounced a Java One Rock Star. When coding outside of his work place, he contributes to a wide range of open source projects and often works on Byte Buddy, a library for simple runtime code generation for the Java virtual machine."
