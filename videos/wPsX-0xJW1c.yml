# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - elixir
    - phoenix
    - ux
    - testing
title: 'Ley Missailidis - Designing with Elixir - ElixirConf EU 2019'
language: English
recordingDate: 1556534701
description: "Ley Missailidis - Shipped Elixir/Phoenix irresponsibility early, lived to tell the tale\n\nDesigning with Elixir\n\nTalk in three words: People first design\n\nAbstract\nWhen making UI/UX decisions, there is a tendency to start with 'pie in the sky' designs. These then need to be realised or cut down. Although this is a valid way to work, there are alternatives. At Koan CI, Ley has found that starting from the user's point of view of the expectations the Erlang/Elixir system needs to deliver, enables his team to organise the top layers of the code with these in mind. Having the design of the interface layer in mind is beneficial to the quality of the design. It also increases the speed of delivery. Whether picking a single page app strategy or something else, this approach helps in  making those strategic calls.\n\nObjectives\nThis talk will go into API design and how that affects internal modules, EEX templates and when to use non-dynamic content, Channel usage, and Phoenix.LiveView. \n\nAudience\nElixir Developers that are working closely to the actual public interface (not simply the public interface to the module.)\n\nThe speaker \nLey Missailidis is a bon vivant and BEAM raconteur that has been building web applications for longer than he cares to admit.\nGithub: polymetis\nTwitter: @_polymetis_\n\nElixirConf EU\nWebsite: www.elixirconf.eu\nTwitter: www.twitter.com/elixirconfeu\nMail: info at elixirconfeu"
