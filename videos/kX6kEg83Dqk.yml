# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - perl
    - php
    - ruby
    - python
    - javascript
    - rust
title: 'Andrew Grangaard - "Readin'' Rust"'
language: English
recordingDate: 1561170452
description: "Let's read some rust!\n\nAre you a coder from a dynamic language (perl, python, ruby, php, Javascript, etc) who wants to dip her toes into staticly typed languages but doesn't know where to start?\n\nFor practitioners of dynamic OOP languages, statically typed systems languages can seem daunting and unapproachable. Doubly so for those of us who are self-taught hobbyists. We are left wondering about unfamiliar concepts like Compilation? Static Types? Memory management? Where are my objects?\n\nLet's step back and approach reading code, as a prerequisite for writing it.\n\nWe will walk through some code examples and compare the expected static syntax and idioms against dynamic examples.\nhow do I verbalize this code? What is the syntax?\nWhat is a type? What does it do for me?\nWhy should I care about memory?\nerror handling paradigm\nhow do I translate between OOP objects and structs?\nI'll handwave my way around the borrow checker and compiler to focus on reading and recognizing why values may be borrowed or copied.\nAt the end of this talk, I hope you'll be able to read static code and reason about its algorithm at a pseudo code level."
