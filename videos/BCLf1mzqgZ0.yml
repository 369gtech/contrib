# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'How to normalize your tables to improve data quality â€“ back to basics'
language: English
recordingDate: 1629305819
description: "The relational model is built on the principles of data normalization. This improves data quality by avoiding duplication and preventing data errors.\n\nThis video shows the problems that can occur when you store unnormalized data. It then walks through normal forms 1, 2, and 3. For each Chris discusses their criteria, how to fix your model to meet each form, and how this avoids further problems.\n\nHighlights from this session include:\n\n1:10 - Errors that can occur in unnormalized data\n3:00 - Overview of normal forms 1-3\n4:30 - First normal form\n6:10 - The problems with storing comma-separated lists\n11:00 - Converting comma-separated lists to columns\n14:30 - Avoiding duplicate rows with primary keys/unique constraints\n16:50 - Surrogate keys\n17:30 - Candidate keys\n19:30 - Converting comma-separated lists - rows or columns?\n32:20 - Functional dependencies\n34:10 - Second normal form\n36:20 - Foreign keys\n43:45 - Third normal form\n47:50 - Derived values - storing vs calculating at runtime\n51:30 - Using virtual columns to store formulas\n52:50 - Check constraints to keep stored derived values in sync\n55:15 - Quiz: is this design in 3NF?\n59:50 - Recap\n1:01:50 - Further reading"
