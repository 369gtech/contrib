# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - javascript
speaker:
    name: 'Daniel Shiffman'
    twitter: shiffman
    matches: [shiffman]
title: 'Live Stream #57 - Traveling Salesperson'
language: English
recordingDate: 1471014016
description: "This Live Stream is all about the classic \"computer science\" \"Traveling Salesperson Problem.\"  I tackle this challenge by comparing / contrasting brute force algorithms with other techniques.  My goal was to solve the TSP with a genetic algorithm, but I didn't get to it this session beyond a brief discussion at the end.\n\n8:43 - Introduction to today's challenge\n17:48 - Traveling Salesperson Pt.1\n41:19 - Traveling Salesperson Pt.2\n1:15:10 - Traveling Salesperson Pt.3\n1:42:34 - Traveling Salesperson Pt.4 (Will be continued next live stream)\n1:57:50 - Conclusion\n\nSupport this channel on Patreon: https://patreon.com/codingtrain\n\nSend me your questions and coding challenges!: https://github.com/CodingTrain/Rainbow-Topics\n\nContact: https://twitter.com/shiffman\n\nLinks discussed in this video:\nMDN Array Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\nTraveling Salesman on Wikipedia: https://en.wikipedia.org/wiki/Travelling_salesman_problem\nPermutation Algorithm Using Lexicographic Ordering: https://www.quora.com/How-would-you-explain-an-algorithm-that-generates-permutations-using-lexicographic-ordering\n\nSource Code for the Video Lessons: https://github.com/CodingTrain/Rainbow-Code\n\np5.js: https://p5js.org/\nProcessing: https://processing.org\n\nFor More Live Streams: https://www.youtube.com/playlist?list=PLRqwX-V7Uu6bxnFR6no70vlxxuxDEzflz\n\nFor More Coding Challenges: https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH\n\nHelp us caption & translate this video!\n\nhttp://amara.org/v/U5oj/"
