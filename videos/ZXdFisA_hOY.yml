# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: '.NET 5 REST API Tutorial - Build From Scratch With C#'
language: English
recordingDate: 1624457826
description: "Learn how to create a REST API end-to-end from scratch using the latest .NET 5 innovations and Visual Studio Code. The API will be written in C#.\n\nüíª Get the code: https://youtube.dotnetmicroservices.com/net5restapi-10\n\n‚úèÔ∏è Course developed by Julio Casal. Check out his channel: https://www.youtube.com/c/jcasalt\nüîó Julio's website: https://dotnetmicroservices.com\n\n‚≠êÔ∏è Course Contents ‚≠êÔ∏è\nGetting Started\n0:00:00 Introduction\n0:03:02 Creating the project\n0:04:01 Exploring the generated project files\n0:10:03 Trusting the self-signed certificate\n0:11:36 Exploring the default Swagger UI page\n0:12:30 Configuring Visual Studio Code settings\n\nEntity, Repository, Controller GET\n0:14:33 Introduction\n0:15:45 Adding an entity\n0:20:39 Ading an in-memory repository\n0:26:40 Creating the controller\n0:30:42 Implemeting GET all items\n0:33:37 Implemeting GET single item\n0:37:47 Returning a 404 NotFound status code\n\nDependency Injection, DTOSs\n0:39:57 Introduction\n0:41:23 What is dependency injection?\n0:46:14 Extracting the repository interface\n0:47:44 Injecting the repository into the controller\n0:48:53 Registering the repository as a singleton\n0:52:32 Adding a Data Transfer Object DTO\n0:55:46 Creating the AsDto extension method\n\nPOST, PUT, DELETE\n0:58:59 Introduction\n0:59:45 Implementing POST\n1:07:39 Adding validations via data annotations\n1:10:00 Implemeting PUT\n1:17:33 Implementing DELETE\n\nPersisting Entities with MongoDB\n1:20:46 Introduction\n1:24:44 Using Postman\n1:27:53 Creating a MongoDB repository\n1:29:42 Using the MongoDB.Driver NuGet package\n1:33:28 Implementing MongoDB Create\n1:33:57 Running the MongoDB Docker container\n1:38:47 Configuring MongoDB connection settings\n1:42:38 Registering the MongoClient singleton\n1:48:02 Testing the MongoDB integration\n1:50:04 Exploring the created database in VS Code\n1:52:45 Implemeting MongoDB Get, Update and Delete\n\nTasks, Async and Await\n2:02:27 Introduction\n2:06:46 Using the Async suffix\n2:09:04 Using tasks in the repository\n2:11:50 Using async and await\n2:14:28 Returning completed tasks\n2:18:16 Using tasks in the controller\n2:21:23 Testing async methods in Postman\n\nSecrets and Health Checks\n2:27:02 Introduction\n2:30:06 Enabling authentication in MongoDB\n2:33:36 Using the .NET Secret Manager\n2:36:40 Using the MongoDB credentials in the service\n2:40:00 Introduction to Health Checks\n2:42:28 Adding an endpoint for health checks\n2:44:46 Adding a MongoDB health check\n2:48:41 Adding checks for readiness and liveness\n2:53:51 Customizing the health check response\n2:58:59 Exploring other health check NuGet packages\n\nDocker\n3:00:44 Introduction\n3:08:28 What is Docker?\n3:17:54 Removing https redirection\n3:20:39 Generating a Dockerfile in VS Code\n3:30:40 Building the Docker image\n3:33:00 Adding a Docker network\n3:34:07 Running the containers in the Docker network\n3:40:36 Running the REST API in Docker\n3:42:02 Pushing the container image to Docker Hub\n3:46:02 Exploring the image in Docker Hub\n3:46:32 Pulling the image back to the local box\n\nKubernetes\n3:49:20 Introduction\n3:54:05 What is Kubernetes?\n4:04:06 Enabling a Kubernetes cluster in Docker Desktop\n4:06:12 Installing the Kubernetes extension for VS Code\n4:06:58 Declaring the REST API Kuberentes deployment\n4:14:35 Creating a secret in Kubernetes\n4:17:28 Declaring health probes\n4:19:14 Declaring the REST API Kubernetes service\n4:22:56 Creating the REST API resources in Kubernetes\n4:26:15 Declaring the MongoDB Kubernetes StatefulSet\n4:36:09 Declaring the MongoDB Kubernetes service\n4:38:27 Creating the MongoDB resources in Kubernetes\n4:40:42 Testing the REST API hosted in Kubernetes\n4:42:08 Exploring the Kubernetes self-healing capability\n4:46:04 Scaling Kubernetes pods\n4:47:38 Adding logs via ILogger\n4:52:04 Getting a new image version into Kubernetes\n4:53:23 Load balancing requests across pods\n\nUnit Testing and TDD\n4:56:23 Introduction\n4:57:04 What is unit testing?\n5:01:19 What is test driven development?\n5:04:25 Restructuring files and directories\n5:08:25 Creating the xUnit test project\n5:09:15 Building multiple projects in VS Code\n5:13:10 Adding NuGet packages for unit testing\n5:14:35 Testing GetItemAsync unexisting item\n5:18:35 Using the AAA pattern\n5:19:31 Stubbing dependencies via Moq\n5:26:52 Running tests in VS Code\n5:28:05 Using the .NET Core Test Explorer extension\n5:30:55 Testing GetItemAsync existing item\n5:38:01 Using FluentAssertions\n5:41:46 Testing GetItemsAsync\n5:45:41 Testing CreateItemAsync\n5:53:13 Testing UpdateItemAsync\n5:57:51 Testing DeleteItemAsync\n5:59:40 Refactoring and catching regressions\n6:10:50 Using TDD to test a yet to be created method\n6:19:07 Going back to green by fixing the failing test\n6:21:19 Testing the new controller method in Postman"
