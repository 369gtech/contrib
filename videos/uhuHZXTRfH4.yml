# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - security
    - testing
    - craftsmanship
    - tdd
    - architecture
title: 'CppCon 2017: Peter Sommerlad “Mocking Frameworks considered harmful”'
language: English
recordingDate: 1507930382
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017\n—\nSoftware development without test automation can no longer be considered professional. \nHowever, you might have existing code bases or want to rely on external libraries that may make writing effective and fast unit tests hard or even near to impossible. A typical work-around for these situations is to introduce test stubs for such external dependencies to make your code testable. \n\nSome propose to use mocking frameworks, such as GoogleMock, together with unit testing frameworks to ease the specification of the replacement objects. These mocking frameworks often come with their own domain-specific language (DSL) to describe the behavior and expected usage of the mock object. In addition to a learning curve, the DSLs often do not help much, when things do not work. The current lack of standardized reflection in addition requires macro trickery making fixing problems even harder. A second issue, is that existing code often must be prepared to suite the mocking frameworks interception mechanism to allow to inject the mock objects. Last but not least test-driven-development (TDD) together with the use of a mocking framework can lead to high coupling, that TDD usually strives to reduce. \n\n\nThis talk demonstrates \"classical\" mocking frameworks, shows the problems and demonstrates how Cevelop's Mockator approach can help refactoring existing code to get it under test and how a very simple plain C++ solution can be used instead of complicated mocking framework for unit tests with dependent code replaced by test stubs or mocks. \n\nOutline: \n* Introduction \n** Fowler's Whisky Warehouse - classic example for Mocking Frameworks in C++ \n* Feathers' Seams: Dependency Injection \n** Refactoring to Object Seams \n** Refactoring to Template Seams \n** Linker Seams \n** Preprocessor Seams as a last resort \n* Problem with \"classic\" Mocking Frameworks \n* Simpler Mocking with Mockator \n* Why and when you should not Mock \n\nWith a longer slot, more of the underlying test automation theory, based on xunitpatterns.com can be given. \n— \nPeter Sommerlad: IFS Institute for Software, Professor\n\nProf. Peter Sommerlad is director of IFS Institute for Software at FHO HSR Rapperswil where he inspired the C++ IDE Cevelop. Peter is co-author of the books POSA Vol.1 and Security Patterns. His goal is to make software simpler by Decremental Development: Refactoring software down to 10% its size with better architecture, testability and quality and functionality. Peter is a member of the C++ standardization committee, ACCU, ACM, IEEE Computer Society.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
