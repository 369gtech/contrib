# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - architecture
    - java
title: 'Getting Microservices and Legacy to Play Nicely Together'
language: English
recordingDate: 1571255576
description: "There are many opportunities to begin breaking down your monolithic applications one feature at a time, but other parts of your legacy portfolio are operating just fine and aren’t going anywhere. New microservices and legacy systems have to interoperate—and that's no easy task. One option is to rebuild everything, but that's costly, risky, and time-consuming. You could also integrate new services and legacy systems with APIs, but there are challenges there, too. Using a code-scanning tool to convert from, say, Cobol to Java, may just move the mess you had in Cobol to Java. At the end of the day, some of your legacy services are doing just fine, but to support new customer-facing capabilities and channels, you need to easily access their functionality and data. \n\nIn this session, you'll learn: \n\n- why common approaches to modernizations are costly, risky, and can fail to achieve the desired outcome of making code simpler and easier to maintain\n\n- how an event-driven architecture can be used to connect microservices to legacy systems\n\n- how to handle the nuances of an event-driven architecture solution that will need to be managed, such as how to handle PII\n\n- why events from legacy systems are not always easy to consume by new microservices, and what pattern can be used to address this\n\nSpeaker: Duston Mounts, Managing Director, APBG NA Lead, Accenture\nFilmed at SpringOne Platform 2019\nSlides: https://www.slideshare.net/Pivotal/getting-microservices-and-legacy-to-play-nicely-together-with-eventdriven-architectures/Pivotal/getting-microservices-and-legacy-to-play-nicely-together-with-eventdriven-architectures"
