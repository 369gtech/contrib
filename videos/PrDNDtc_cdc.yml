# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Emmanuelle Delescolle - Writing a python web framework in 2021'
language: English
recordingDate: 1633341661
description: "Writing a python web framework in 2021\n[EuroPython 2021 - Talk - 2021-07-29 - Optiver]\n[Online]\n\nBy Emmanuelle Delescolle\n\nDjango, Flask and Pyramid are among the most popular Python web frameworks and for good reasons.\n\nBut... Those projects are over 10 years old and tied to decisions made at the time of the first commit. The fact the web was a server-rendered world of request/response cycle is a big part in those decisions.\n\nToday's web has shifted with a special attention to API's and websockets. It still needs to care for the \"regular\" server-rendered page but it is not its only focus anymore!\n\nNot only that, but (well-documented) tools are available today that were not there 10 years ago.\n\nSo, if you wanted to write the next big webframefork in 2021, what tools and libraries would be at your disposal?\n\nSomewhat ironically, those 3 main frameworks I mentioned have given rise to, or at least inspired some, \"derivate\" standalone libraries like ORM's, or schema serializers that can be used by a third party framework.\n\nOther libraries have also spawned as ports from other languages and, finally, the python WSGI ecosystem (like middlewares) has also grown in that time frame.\n\nSo, is writing a python web framework in 2021 mostly a matter of picking up existing tools and putting them together? Let's take a closer look!\n\n\nLicense: This video is licensed under the CC BY-NC-SA 4.0 license: https://creativecommons.org/licenses/by-nc-sa/4.0/\nPlease see our speaker release agreement for details: https://ep2021.europython.eu/events/speaker-release-agreement/"
