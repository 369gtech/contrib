# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - storage
    - performance
    - web
    - react
    - javascript
title: 'Konrad Szydlo - Creating reactive components using ClojureScript React wrappers (Lambda Days 2016)'
recordingDate: 1459768331
description: "Slides and more info: http://www.lambdadays.org/lambdadays2016/konrad-szydlo\n\nFacebook React is taking the front-end development  by storm promising to simplify DOM manipulation and creating new possibilities for building large and fast applications with data that change over time. It’s not a surprise that in the ClojureScript landscape a number of React wrappers emerged. Combining React’s DOM processing with ClojureScript immutability and concurrency utilities give us even more powerful way to create view-manipulation heavy front-end application.  One of the most promising React wrappers in ClojureScript is Rum. While wrappers like Reagent or Om force you to use specific component model, Rum provides you with a way to build your own components or re-use prebuilt ones, all depending on your needs.\nWith Rum it’s possible to use different storage/data models for different components. You can use simple atoms (ClojureScript concurrency primitive), ajax/websockets callbacks,  core.async channels (CSP way) or DataScript – immutable database in a web browser..\n\nIn the presentation I’ll highlight main features of React and ClojureScript and how they are perfect fit for each other.  Next I will show simple examples of Rum components and how they provide less boiler plate code than standard JS React components. Finally I’ll show how Rum’s idea to support different component models allows us to create applications using different storage mechanisms. All depending on your needs without compromising performance or architectural design."
