# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - swift
    - ios
title: 'The Dawn of a New Error - Phil Nash'
recordingDate: 1569848118
description: "As a community we've tried many different ways to express, propagate and handle error conditions in our code over the years. Each seem to have different trade-offs, with none being perfect in all cases.\n\nIn C++ we adopted exceptions as the primary mechanism early on, and the standard library uses them extensively.\n\nYet many - 52% according to a Standard C++ Foundation survey - ban exceptions in all, or part, of their codebases!\n\nRecently there has been a lot of interest in using ADTs (Algebraic Data Types) such as `std::optional`, or the proposed `std::expected`, for error-handling. There are definitely advantages here, but we're still not quite there yet. Can we do better?\n\nThis presentation summarises the material from my earlier talk, \"Option(al) Is Not a Failure\", where I survey existing error-handling approaches and score them against each other, leading up to the new proposal, p0709r1, \"Zero-overhead deterministic exceptions\". We then dig into this proposal in more depth and look at the implications, considering also the supporting proposals, p1028 (std::error) and p1029 ([[move relocates]]) and others. We'll also look at experiences with similar mechanisms in other languages, notably Swift, to get an idea of how it might work out in practice.\n\nIn the end we should have a solid idea of which error handling strategy to use when, what's coming next, and how to approach code now that will play nicely in that possible future.\n\nSave the date for NDC TechTown 2020  (31st of August - 3rd of September)\n\nCheck out more of our talks at: \nhttps://ndctechtown.com/\nhttps://www.ndcconferences.com/"
