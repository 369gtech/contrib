# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - java
title: 'Как устроен процесс изменения платформы Java'
language: Russian
recordingDate: 1431259481
description: "Как шутят программисты, не бывает приложений без багов – бывают недостаточно протестированные. Любые Java-фреймворки, любая JDK от любого вендора, любые ОС и железо могут содержать различные баги, от чего ваше, пусть даже идеально написанное, Java-приложение может страдать различными спецэффектами. Компания Oracle, а точнее, её Java-подразделение пытается свести риски от этих спецэффектов к минимуму: регулярно выпускать апдейты, при этом тщательно следя за мультиплатформенностью, безопасностью, совместимостью, производительностью и т.д., а также, в особо тяжёлых случаях, втыкая в JDK специальные костыли, обходящие баги в ваших OC и железе. Поэтому апдейты платформы необходимы.\n\nПроцесс обновления Java пользователем выглядит обычно довольно просто: новая версия Java качается с сайта Oracle или OpenJDK и просто ставится вместо предыдущей. Более того, экосистема платформы устроена так, что позволяет с относительной лёгкостью сменить вендора Java! Но что за этим стоит?\n\nЧто мы, Java Platform Group, для этого делаем и сколько усилий тратим? Как вообще устроен процесс изменений платформы Java? Какие изменения допускаются в апдейтах, а какие – в новой версии платформы? По какому принципу нумеруются апдейты внутри одной версии? Зачем пользователям нужно обновлять старые версии платформы? Какие процессы и инструменты помогают инженерам Oracle управлять изменениями в платформе? Какие гарантии даёт Oracle, если вы используете Java от других вендоров? Обо всё этом вы узнаете из моего доклада."
