# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - elixir
    - scala
title: 'Felix Klock II - Rust: Safe Systems Programming with the Fun of FP'
recordingDate: 1390922778
description: "Code Mesh London is the best place in Europe for non-mainstream tech and programming languages. On 4-5 December 2013 over 50 inventors and originators of the most innovative languages and technologies of the moment shared their experience with 200 attendees. Topics included Scala, Haskell, Clojure, Erlang, Elixir, Julia and much more. See you at Code Mesh 2014! codemesh.io/\n\nAbout the talk:\nRust is a new programming language for developing reliable and efficient systems. It is designed to support concurrency and parallelism in building platforms that take full advantage of modern hardware. Its static type system is safe and expressive and it provides strong guarantees about isolation, concurrency execution and memory safety.\nRust combines powerful and flexible modern programming constructs with a clear performance model to make program efficiency predictable and manageable. One important way it achieves this is by allowing fine-grained control over memory allocation through contiguous records and stack allocation. This control is balanced with the absolute requirement of safety: Rust's type system and runtime guarantee the absence of data races, buffer overflow, stack overflow or access to uninitialized or deallocated memory.\n\nTalk objectives:\n\n- Provide an overview of Rust, as well as examples of how its static type system ensures stronger compile-time guarantees than that provided by C/C++ compilers\n\n- Describe how Rust supports a mixture of imperative procedural, concurrent actor-based, object-oriented and functional styles of programming."
