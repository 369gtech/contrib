# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - mobile
    - android
    - agile
title: 'Android Performance Patterns: Battery Performance 101'
language: English
recordingDate: 1420572806
description: "Battery is the most precious resource to Android users right now. The world is more mobile, but it’s frustrating when you can’t make it through a full day without needing to recharge your phone. And Sadly, for most developers, Battery Efficiency is the last thing on their minds.\n\nIn this video +Colt McAnlis introduces the basic concepts of Battery Performance on android, and points out a few simple pitfalls to avoid while writing your application.\n\nWatch more Android Performance Patterns here: http://goo.gl/3dBbse\n\nFull Video Transcript:\n\nBattery's the most precious\nresource to Android users right now.\n\nThe world is more mobile,\nbut it's frustrating when you can't make\nit through the day without needing a\nrecharge of your phone.\n\nAnd sadly for most\ndevelopers, battery efficiency is the last thing\non their minds.\n\nMy name is Colt McAnlis\ncanvas and the truth is that your app doesn't\nhave to be a battery hog.\n\nWith a few simple\nAPIs and tools you can have a fast, awesome\napplication that users love.\n\nBut let's take a step\nback for a second.\n\nHow bad is the state of\nbattery usage right now?\n\nWell, Purdue University did a\nstudy of the top apps and games for mobile devices, in which\nthey measured the battery draw of various\ntypes of actions.\n\nThey made a shocking discovery.\n\nOn average, only\nabout 25% to 30% of the battery used\nby these applications was dedicated to the core\nfunctions of the app,like drawing images, laying\nout news, or throwing birds across the screen.\n\nThe other 75% completely eaten up by uploading analytics,\nchecking location, and constantly polling the\nserver for ads to display.\n\nThis finding presents\nan interesting problem for developers.\n\nSee, these applications\nare effectively eating up their users'\nbattery for their benefit while only providing marginal\nfeatures to the users, which is tricky since at\nthe end of the day the user's happiness\nis directly linked to the success of\nthe application.\n\nSmart developers\nwill focus on finding a balance between\nthese two extremes by recognizing that they\ncan perform the same actions and draw less battery\nat the same time.\n\nFor example, waking up\nthe device from sleep has a battery cost\nassociated with it.\n\nSo conservative\nuse of wake locks, or rather smarter\nuse of wake locks, can help reduce battery drain.\n\nLikewise, some operations\ndon't have to happen right now.\n\nFor example, uploading\nsongs, recalculating storage, or resizing your photos\nshould probably not be done while the user is out\nin the middle of their holiday shopping, right?\n\nAnd network requests are\nanother big drain on battery.\n\nSee, each time you turn on\nyour phone's mobile radio it has to keep itself awake\nfor a few seconds in case a response packet comes in.\n\nOf course, needing to draw extra\nbattery just to stay awake.\n\nSo if you're polling\nan ad server every five seconds or so, you're going\nto be incurring the cost over and over and over again.\n\nThankfully Android has several\ntools to help you track down and fix these battery issues.\n\nFirstly, you can get by battery\ndata stats on the device by going to Settings,\nand then Battery, and then choosing the\napplication you're interested in.\n\nYou'll notice that the data\nreporting on this screen is mostly about how long\nyour device is awake, and its networking connectivity.\n\nAnd to dig deeper you can use\nthe battery historian tool to get a graphical\nview of how your app is using the battery over time.\n\nAnd once you've found\nyour app's issues, Android has several APIs\nthat can help you fix them.\n\nFor example, using\nthe jobscheduler API allows your application to\ndefer various types of work to a time when the\nbattery is better to be used, like\nwhen it's plugged in, or when it's connected\nto the Wi-Fi, or the next time it wakes\nup the device intentionally.\n\nSo if you're looking to\noptimize your application to be lean on battery\ncheck out the rest of the Android performance\npatterns resources to get more info on\nsaving every last piece of this precious\nresource for your users.\n\nSo as always, keep calm,\nprofile your code, and remember, perf matters."
