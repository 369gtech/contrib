# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
title: 'Threads and Locks must Go - Rainer Grimm - Meeting C++ 2017'
language: English
recordingDate: 1519722915
description: "Concurrency and Parallelism in C++17 & C++20\n\nWhat do threads, atomic variables, mutexes, and conditional variables have in common? They are the basic building blocks of any concurrent application in C++, which are even for the experienced C++ programmers a big challenge.\nTherefore, it's good that we get with C++17 and C++20 to new standards.\n\nWhat can we expect with C++17, what can we hope for with C++20?\n\nWith C++17, most of the standard template library algorithms will be in a sequential, parallel, and vectorized variant available. Three years later, we can look forward to transactional memory, significantly improved futures and coroutines. But these are just the highlights from the concurrent and parallel perspective. Thus there is the reasoned hope that in the future C++ abstractions such as transactional memory, futures and coroutines will be used and that threads, atomic variables, mutexes and condition variables will be degraded to implementation details."
