# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - .net
    - 'c#'
title: 'Атрибуты (Attribute) и Рефлексия (Reflection) .NET в C# - Учим Шарп #25'
recordingDate: 1549910832
description: "Атрибуты (Attribute) и Рефлексия (Reflection) .NET в языке программирования C#\n\nНа этом занятии мы узнаем что такое Атрибуты (Attribute) в языке программирования C#. Создадим свой собственный атрибут и научимся применять его на практике. А также познакомимся с понятием Рефлексия (Reflection) и научимся получать метаданные классов.\n\nПодписывайтесь на информационные каналы курса, чтобы ничего не пропустить и не потерять информацию:\nЗакрытый чат для участников курса: https://vk.cc/8Ev4Gv \nРассылка с оповещениями в ВК: https://vk.cc/86Y7Pa\n\nПодписывайтесь на мои социальные сети, там много всего интересного и полезного: \nhttps://vk.com/codeblog\nhttps://tele.click/codeblog\nhttps://zen.yandex.ru/codeblog\n\nПоддержать канал: https://www.donationalerts.ru/r/shwanoff\n\nКстати, меня зовут Шванов Вадим, и я программист на языке C# уже больше 8 лет, а также я являюсь автором ресурсов для разработчиков CODE BLOG. На этом канале я рассказывают про IT, технологии и веду курс C# с нуля под названием Учим Шарп. В его рамках мы рассматриваем язык программирования c# с нуля, синтаксис, структуры данных, алгоритмы, паттерны проектирования и многое другое. Эти уроки c sharp подойдут для начинающих и для тех кто хочет подробнее изучить платформу .net и среду разработки visual studio. Для меня важно не только показать практическое применение языка си шарп и платформы dotnet, но и  объяснить базовые идеи программирования. Уроки с# выходят как минимум два раза в неделю в понедельник и четверг в 20-00. C# курс рассчитан на то, чтобы изучить программирование с нуля. Все занятия веду я сам - опытный программист c#. Разработка ведется в IDE visual studio c#. Подписывайтесь, впереди еще много интересного и полезного об it, программировании как для  начинающих, так и для более опытных программистов c#.\n\nВ мире .NET рефлексией (reflection) называется процесс обнаружения типов во время выполнения. С применением служб рефлексии те же самые метаданные, которые отображает утилита ildasm.exe, можно получать программно в виде удобной объектной модели. Например, рефлексия позволяет извлечь список всех типов, которые содержатся внутри определенной сборки *.dll или *.ехе (или даже внутри файла *.netmodule если речь идет о многофайловой сборке), в том числе методов, полей, свойств и событий, определенных в каждом из них. Можно также динамически обнаруживать набор интерфейсов, которые поддерживаются данным типом, параметров, которые принимает данный метод, и других деталей подобного рода (таких как имена базовых классов, информация о пространствах имен, данные манифеста и т.д.).\n\nМногие классы, поддерживающие рефлексию, входят в состав прикладного интерфейса .NET Reflection API, относящегося к пространству имен System.Reflection. Как и в любом другом пространстве имен, в System.Reflection (которое поставляется в составе сборки mscorlib.dll) содержится набор взаимосвязанных типов. Ниже описаны некоторые наиболее важные из этих типов:\n\nAssembly\nВ этом абстрактном классе содержатся статические методы, которые позволяют загружать сборку, исследовать ее и производить с ней различные манипуляции\n\nAssemblyName\nЭтот класс позволяет выяснить различные детали, связанные с идентификацией сборки (номер версии, информация о культуре и т.д.)\n\nEventInfо\nВ этом абстрактном классе хранится информация о заданном событии\n\nFieldInfo\nВ этом абстрактном классе хранится информация о заданном поле\n\nMemberInfo\nЭтот абстрактный базовый класс определяет общее поведение для типов EventInfo, FieldInfo, MethodInfo и PropertyInfo\n\nMethodInfo\nВ этом абстрактном классе содержится информация по заданному методу\n\nModule\nЭтот абстрактный класс позволяет получить доступ к определенному модулю внутри многофайловой сборки\n\nParameterInfо\nВ этом классе хранится информация по заданному параметру\n\nPropertyInfо\nВ этом абстрактном классе хранится информация по заданному свойству\n\nЧтобы понять, каким образом использовать пространство имен System.Reflection для программного чтения метаданных .NET, необходимо сначала ознакомиться с классом System.Type.\n\nПодробный курс по языку программирования C#:\nhttps://www.youtube.com/watch?v=p9QxqrwkPbA&list=PLIIXgDT0bKw4OmiZ9yGmShKsY0XncViZ8\n\nПодробный курс по структурам данных на языке программирования C#:\nhttps://www.youtube.com/watch?v=hZYQmNJBsKM&list=PLIIXgDT0bKw4DB9toGU73ntyYIZV7aJi5\n\nПодробный курс по алгоритмам сортировки на языке C#:\nhttps://www.youtube.com/watch?v=PD1Nn4fHcts&list=PLIIXgDT0bKw4n6pwBjymd3wCPyQ3_SLMo\n\nРазговоры о программировании, мотивации, и ответы на IT вопросы:\nhttps://www.youtube.com/watch?v=cjjA6SQ_i3Y&list=PLIIXgDT0bKw7oKRr2c1n-e_dUgR8Aqdsi\n\n\n#программирование #программист #csharp #ityoutubersru #codeblog"
language: Russian
