# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Achieving Faas + Dapr + K8S technology integration, and build a new Alibaba Cloud Se... Zhao Qingjie'
language: English
recordingDate: 1639859203
description: "Don’t miss out! Join us at our next event: KubeCon + CloudNativeCon Europe 2022 in Valencia, Spain from May 17-20. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.\n\n实现 Faas + Dapr + K8S 技术融合，构建全新的阿里巴巴云无服务器研发系统 | Achieving Faas + Dapr + K8S technology integration, and build a new Alibaba Cloud Serverless R&D system - Zhao Qingjie, Alibaba\n\n随着云原生生态系统的不断发展，Kubernetes 已经成为了一种云操作系统。与此同时，无服务器是云计算下一个十年的发展主题这种声音越来越多，那么 Kubernetes 将如何更好地支持这种无服务器场景呢？如何使用 Kubernetes 生态系统更好地整合二者？尽管诸如 Kubernetes 原生和 Fission 一类基于 Kubernetes 的无服务器解决方案已经在行业内出现，但是其仍无法突破零还原和高密度 + 高频率创建等技术瓶颈。本次讨论主要介绍如何在阿里巴巴内部实现技术突破，以及如何实现现有应用的大规模迁移。1.FaaS 在 Kubernetes 上的瓶颈。2.如何突破节点瓶颈，实现单节点上 1200 个实例的高密度部署。3.如何打破性能瓶颈，实现 1w+/5s 的高频创建和删除。4.如何重复使用 Kubernetes 的生态能力，扩展 FaaS 的边界。5.如何快速大规模迁移现有应用的无服务器形式？\n\nWith the continuous development of the cloud-native ecosystem, Kubernetes has become a cloud operating system. At the same time, the assertion that serverless is the next decade of cloud computing is getting closer and closer, so how does Kubernetes better support the serverless scenario? How does one use the Kubernetes ecosystem to better integrate the two? Although serverless solutions based on kubernetes, such as Kubernetes native and Fission, have also appeared in the industry, they cannot break through technical bottlenecks such as zero reduction and high-density + high-frequency creation. This talk mainly introduces how to achieve technological breakthroughs within Alibaba and how to achieve large-scale migration of existing applications. 1. The bottleneck of FaaS on kubernetes 2. How to break through the node bottleneck and realize the high-density deployment of 1200 instances on a single node 3. How to break the performance bottleneck and realize the high frequency creation and deletion of 1w+/5s 4. How to reuse the ecological capabilities of kubernetes, Extend the boundary of FaaS 5. How to quickly migrate the serverless form of existing applications on a large scale."
