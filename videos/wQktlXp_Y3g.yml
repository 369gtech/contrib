# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - phoenix
    - devops
    - architecture
    - functional
speaker:
    name: 'Gene Kim'
    twitter: RealGeneKim
title: 'AMA #2 with Gene Kim: IT Revolution Book Club feat. The Unicorn Project'
language: English
recordingDate: 1579115535
description: "Here are the questions answered in this 90 minute Ask Me Anything with Gene Kim, author of The Unicorn Project. It was originally hosted on January 15, 2020.\n\n\n1. Why Dr. Eric referring to people as \"sensei”? Why does Erik forgot names? What’s the reasoning behind that choice?\n\n\n2. In my experience, that allows many engineering leaders who express love for DevOps but still adhere to matrix org structures believe that org structure is not a contributor to team/org success. I had lunch with a VP today who said as much, i.e., a matrix org in which dev managers allocate team members to different projects is as effective as a dedicated, autonomous product team org. I would love to see concepts from, e.g., Project to Product and Team Topologies be made more explicit in DORA/IT Revolution publications.\n\n\n\n3. Who was the real Brent or Maxine or Dr. Eric?\n\n\n\n4. I’m wondering if anyone has done a similar evolution of the DataHub transforms and Narwhal.  Would you be willing to help me get the basics of the architectural approach you applied?\n\n\n\n5. We (the rebels) were inspired by The Phoenix Project to do continual deployments on physical products, inside our full scale manufacturing plant. Do you know of anyone who is doing, have tried or considered something similar? It would be nice to trade experience.\n\n\n\n6. What ways can an architect increase flow?\n\n\n\n7. What are your thoughts on developer productivity teams?\n\n\n\n8. What do you suppose the origin of the ancient, powerful order is given that it exists in so many organizations?\n\n\n\n9. Do you know about some unsuccessful feature freezes and what might have characterized those vs the successful ones?\n\n\n\n10. What are some ways you would recommend to  convert Executive Management to the rebellion?\n\n\n\n11. Having looked across the industry are there any signs/signals that represent a likely show-stopper for transformations? What are the lead dominos that have to fall before one can pull off the mindset change?\n\n\n\n12. Do you have any suggestions on ways to quantify value of having a feature freeze, or after a feature freeze quantifying the value of what was accomplished? How about any suggestions on typical/general items to prioritize first for a feature freeze that would make the biggest difference?\n\n\n\n13. What are the inflection points in an organization where considering a distinguished engineer role makes sense?\n\n\n\n14. To what measure would you agree that Organisation and Architecture are a mirror of each other? This makes it difficult that if you want to address either you have to address both. Tech Debt needs to be addressed with the Operational and Organisational debts that go with it. — Same question for accelerating DevOps with rearchitecting in Monolithic environments. Getting the code of 200 devs to merge and build without issues is difficult. Breaking down into smaller services / smaller teams is a way of accelerating the devops practices in my view (and a path to Microservices too). Is there a max team size to Service that you would recommend?\n\n\n\n15. What do you think the geographic distribution of devops maturity is in the US? Any tips on finding local elite or high performing organizations to learn from?\n\n\n\n16. As a highly introverted person, I find remote-first as an IT strategy extremely appealing. How does it change the Devops formula? Any suggestions on successfully meshing the two?\n\n\n\n17. Any advice on making a low performing devops organization appealing to individual contributors with experience from high performing organizations?\n\n\n\n18. Can Gene speak more about the principle of Locality?  That’s a new term to me and I’m wondering where it came from and where I can learn more about it in terms of software.\n\n\n\n19. Can you help suggest ways to stop rewarding heroics? In the book we see people working overtime and performing heroics to fix problems, get releases in, etc. It starts to become a pattern and what gets recognition. Any thing you've seen that could work to reward no issues, non event releases?\n\n\n\n20. Maxine was awarded the “Lifetime Achievement Award to Maxine Chambers for Abolishing TEP-LARB,” and I’ve seen enough dysfunctional Technical Governance structures to cheer her along with everyone else.  But the LARB was set up with honourable objectives, so if not through an ARB, how are those objectives best achieved?\n\n\n\n21. As you are an advocate for functional programming and it is clear how it is better in most scenarios, my question is: are there any exceptions? Meaning, have you seen situations where you'd recommend solving with imperative programming instead, because it would either be faster or take less memory than with functional programming, and if so, which one?\n\n\n\n22. Where does one find an Erik?  Wondering how does one get progress at the grassroots level when one doesn't have the air cover/backing at the executive level, like Maxine and Bill had with Erik covering them with Steve and Dick."
