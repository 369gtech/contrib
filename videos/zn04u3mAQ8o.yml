# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - ux
    - architecture
title: 'DrupalCon Nashville 2018: Weather.com''s Project Moonracer - Decoupled User Interfaces'
recordingDate: 1523447013
description: "The most common decoupled Drupal architectures have Drupal acting as a passive datastore for front-end consumers - a system whose relationship with the frontend is limited to acting as a content API. \_In this model, dynamic configuration changes to the presentation layer are handled almost exclusively by developers in code, which removes much of the configurability expected by experienced Drupal site maintainers. \_Likewise these architectures emphasize Drupal for its content management and editorial interface, which may be itself somewhat limited in some use cases from a UI/UX perspective.\n\nDuring the course of an ongoing decoupling project for weather.com, the team found that the lack of page configurability was a distinct pain point for site administrators and product owners. They had grown accustomed to being able to modify not just content, but entire page layouts themselves using Panels. \_This functionality was lost in the traditional decoupled architecture.\n\nTo meet this challenge, the weather.com team built Project Moonracer, a Drupal 8-based solution that allowed for the direct modification of page configuration on a completely decoupled front-end by developing a unique set of data models to move page configuration back into the hands of the site owners. \_Additionally, the editorial interface itself was decoupled from Drupal, allowing for a completely unique configuration management experience while allowing Drupal to shine as a data modeller, content repository and user authentication hub.\n\nIn this session, learn how the weather.com team implemented this architecture and see a brief demonstration of the Page Management System UI and API layers. We will speak to design considerations in the interface and the data models, modules and tools employed, and lessons learned from this implementation for others contemplating Drupal as a content component of a decoupled site ecosystem, ending with an exploration of how this model could inform other decoupled editorial paradigms. \_\n\nWhile this session will cover with some detail concepts of API design, data modelling and decoupled site architecture, it should be of interest to anyone who is familiar with decoupled site architectures as well as anyone interested in next-generation editorial experience possibilities. \_Attendees of the session will leave with a greater understanding of the decoupled UI problem space as a whole, specific API and UI considerations and lessons learned from our experience and a glimpse into some possible futures of editorial interfaces in an increasingly decoupled world."
