# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - scala
    - functional
title: 'f(by) 2020: How to grasp functors and monads and don''t even notice it, Henadz Varantsou'
language: English
recordingDate: 1582192810
description: "f(by) 2020\nScala track\n\nHow to grasp functors and monads and don't even notice it - Henadz Varantsou @Insferatu\n\nMain abstractions from category theory, such as functors and monads, are mentioned and used quite often for writing programs in fuctional style.\nNevertheless most of the guides and articles explain concepts of functor and monads purely from practical point of view, showing only which methods must be implemented and which laws these implementations must obey but missing the part where all of this come from.\nThis might cause troubles with reading and understanding code which relies on these concepts heavily.\nIn this talk I'm going to explain what is the essense of functor and monad from the category theory point of view and what is the profit of using them in functional programming (Scala code examples included).\n\nGeneral Partner - Evolution Gaming https://eng.evolutiongaming.com/"
