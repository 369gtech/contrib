# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
title: 'CppCon 2019: Rainer Grimm “Atomics, Locks, and Tasks (part 2 of 2)”'
language: English
recordingDate: 1570431603
description: "http://CppCon.org\n—\nDiscussion & Comments: https://www.reddit.com/r/cpp/\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019\n—\nThe history of concurrent programming in C++ is short. It began in 2011. At first peek, C++11, and later C++-standards support only the abstractions for library developers but not for application developers. \nBut the second view gives more details. Using the right techniques and the right abstraction make it possible to use the concurrent features safely. \n\nThis class shows you the safe way: \n\n- How you can use atomics for simple jobs. \n- How locks help to master shared state without the inherent danger of mutexes. \n- How tasks are a significant improvement to threads and are part of the future and not of the past. Tasks allow you to \n* share state without the need of synchronisation. \n* manage values, notifications, and exceptions in a concurrent environment. \n* create producer/consumer workflows without the highly error-prone condition variables. \n- How to use concurrency in a declarative style with the parallel STL.\n— \nRainer Grimm\nTrainer, Modernes c++\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
