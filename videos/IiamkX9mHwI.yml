# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - 'distributed systems'
    - cloud
    - testing
speaker:
    name: 'Uncle Bob'
    twitter: unclebobmartin
title: 'Florin Coros - Decide between In-Process or Inter-Processes Communication at Deploy Time'
language: English
recordingDate: 1501691860
description: "Florin Coros is a passionate software architect and developer who has been working for more than 10 years in a wide variety of business applications using Microsoft technologies. He is particularly interested in distributed applications, code design and unit testing. He has an increased interest in software quality and he strongly believes in quality driven products. As one of the fans of Uncle Bob he values his saying: “the only way to go fast is to go well”.\n\nFlorin is the author of onCodeDesing.com, his technical blog, where he shares his experiences and ideas about effective code design.\n\nCurrently, Florin works in Cluj-Napoca, Romania. As part of iQuarc he helps different companies with training, coaching and consulting. He is also a partner atInifiniSwiss, a small and high quality software development services provider, where he puts in practice the principles he values.\n\nTalk Summary \n\nOne of the challenges of designing distributed systems is to decide which of the services that compose the application are loaded in the same process and communicate directly and which should be deployed on different boxes and use inter-process communication. Sometimes, we cannot anticipate this at all and we’d want the flexibility to change it based on usage metrics collected while the system is running in production.\n\nIn this session we will learn, from real life projects experience, how we can achieve the flexibility of deciding only at deploy time, without changing the code, on which of our services communicate in same process and which use inter-process communication.\n\nWe will achieve this using the iQuarc.AppBoot library, which is an abstraction over a Dependency Injection Container and provides support for modular applications. During the session we will start coding an infrastructure for such an application, inspired from real life projects which, later on, could be evolved to accommodate the specific needs of a real application. We will address the On-Premises scenario for .NET applications and, at the same time, the code we’re going to write can be adapted for the cloud scenario."
