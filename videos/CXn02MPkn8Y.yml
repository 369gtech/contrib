# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - career
    - c++
    - react
title: 'CppCon 2018: Arthur O''Dwyer “Concepts As She Is Spoke”'
language: English
recordingDate: 1540537200
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018\n—\nThe last time the keyword `concept` appeared in the C++ Standard's working draft was July 2009, two years before the release of C++11. Now, in September 2018, two years before the expected release of C++20, the working draft once again contains something called \"Concepts\" — something very different from what was there before, and — so far — much more conservative than the Concepts TS (formerly known as \"Concepts Lite\"). \nWhat should the forward-looking C++ programmer do and know about Concepts in C++2a? Arthur will attempt to puzzle it all out. What is a \"Concept\" and why should we care? What is the current syntax for defining and using concepts? What compilers support C++2a concepts syntax today, and how do I enable it? How does it affect name-mangling? What are \"atomic constraints,\" \"disjunctive clauses,\" and \"subsumption\"? What good are value concepts and template concepts? What is the difference between a \"requires clause\" and a \"Requires element\"? What is this \"terse syntax\" we've been hearing about, and why is it controversial? What is \"Giraffe_case\" and should I use it? Can I use the \"requires\" keyword without Concepts? \nThis material will be presented from an outsider's perspective, which means you can expect Arthur to say at least a few wrong things; and the shelf life of this material will be short, as C++2a Concepts are very much in flux right now. Still, if you want to get caught up on (or in) the Concepts discussion, this might be the place for you.\n— \nArthur O'Dwyer\n\nArthur O'Dwyer started his career writing pre-C++11 compilers for Green Hills Software; he currently writes C++14 for Akamai Technologies. Arthur is the author of \"Colossal Cave: The Board Game,\" \"Mastering the C++17 STL\" (the book), and \"The STL From Scratch\" (the training course). He is occasionally active on the C++ Standards Committee and has a blog mostly about C++.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
