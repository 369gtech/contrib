# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - kanban
    - agile
    - scala
title: 'Rafał Pokrywka - Disillusionment by visualization in Agile software development'
recordingDate: 1394181027
description: "Bio:\n\nI'm a founder of VirtusLab -- Krakow based software house where we are working with interesting technologies such as Scala to build useful software. I've been involved in various projects within fields such as natural language processing, data mining, stock trading, workflow and business process automation and a few more. Previously to starting my own company I had a chance to build test automation solution within quite big corporation -- that is IBM. I'm constantly looking for an effective approach to software development with the use of lightweight methodologies such as Lean-Kanban. I actually try to do that working on PhD Thesis under similar topic at AGH University of Science and Technology in Kraków. I co-founded Krakow Scala User Group and ScalaCamp series of meeetings. You can find me on Twitter: @rafalpokrywka or LinkedIn.\n\n\nPresentation:\nDisillusionment by visualization in Agile software development\nLanguage: PL/EN\n\nThere is a growing number of failed software projects that have been managed using some kind of Agile software development methodology. There is also a growing number of dissatisfied team members and stakeholders involved in agile development. What's more missed deadlines and budgets are sometimes justified by saying: \"well&hellip we are Agile we can't predicts everything\". Obviously there is something wrong here. The question is: do we, agile teams, look realistically into the process of making good software? In my opinion that's not the case and we can blame the tendency to oversimplify software development. The consequence is that we usually underestimate complexity of the job and fall in our own trap. That's the point where problems are just starting. This talk should induce agile teams to get real in their software development by visualization of the process and by embracing its complexity. All that in the context of Kanban methodology."
