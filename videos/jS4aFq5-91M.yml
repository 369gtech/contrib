# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'JavaScript Programming - Full Course'
language: English
recordingDate: 1624293735
description: "Learn JavaScript from scratch by solving over a hundred different coding challenges. Go here for the interactive browser version: https://scrimba.com/learn/learnjavascript\n\n‚≠êÔ∏è Code ‚≠êÔ∏è\nTwo versions:\nüîó Interactive version: https://scrimba.com/learn/learnjavascript\nüîó GitHub repo: https://github.com/scrimba/learn-javascript\n\n‚úèÔ∏è Created by Per Harald Borgen. Per on Twitter: https://twitter.com/perborgen\n\n00:00 Intro\n03:41 Passenger counter app\n04:39 Setting up file\n07:42 Create variable\n12:27 Mathematical operations\n16:16 Reassigning & incrementing\n19:23 Adding button\n21:41 onclick event listener\n25:10 Using functions to write less code\n28:48 First function\n29:34 Function that logs sum\n32:25 Function that increments\n34:23 Increment on clicks\n36:35 Display count\n41:53 Document Object Model\n43:47 Display count w/ innerText\n44:30 Create save button\n46:40 What is string?\n48:16 First string variable\n52:00 Log greeting to console\n53:18 Strings vs. Numbers\n56:07 Render welcome message\n58:10 Improve message w/ string concatenation\n1:00:28 Use plus equal for count\n1:00:57 Create save feature\n1:05:38 Debugging online\n1:09:31 Set count to 0\n1:12:28 Recap\n1:15:47 Variables practice\n1:17:42 Concatenate strings\n1:18:43 Incrementing & decrementing\n1:20:56 Strings & numbers\n1:22:35 Rendering error message\n1:25:52 Calculator challenge\n‚Äã\nBuild Blackjack Game \n1:31:27 Build Blackjack game\n1:32:27 Add firstCard, secondCard, & sum\n1:33:23 If...else conditionals\n1:39:08 if...else statement\n1:42:05 if/else...if/else statement\n1:45:28 if...else statement for our game\n1:47:32 hasBlackJack variable\n1:49:38 isAlive variable\n1:51:27 Practice boolean conditions\n1:54:55 Add message variable\n1:58:20 Link stylesheet\n2:00:56 Add basic styling\n2:05:19 Make start button work\n2:11:13 Display message\n2:13:48 Display sum\n2:19:36 Display cards\n2:21:34 New card button\n2:25:16 Add to sum when newCard is clicked\n2:28:36 Rename startGame function\n2:30:52 Solving our cards problem w/ array\n2:34:12 Arrays intro\n2:39:30 Array indexes\n2:43:50 Arrays w/ multiple data types\n2:46:12 Adding & removing items from arrays\n2:50:35 Creating cards array\n2:51:43 Push new card to array\n2:53:05 Counting\n2:57:10 Loops\n3:00:37 For loops & arrays\n3:04:23 First array-based for loop\n3:05:55 For loops, arrays, & DOM\n3:08:55 Use loop to render cards\n3:11:16 Avoid hard-coding values\n3:12:51 Returning values\n3:17:54 Use function to set card values\n3:21:05 Generating random numbers w/ Math.random()\n3:25:24 Math.random() * 6\n3:27:11 Flooring number w/ Math.floor()\n3:28:40 Create dice\n3:30:23 Completing dice function\n3:33:04 Make getRandomCard() work\n3:36:00 getRandomNumber function\n3:39:06 Assign values in startGame function\n3:41:52 Card feature is broken\n3:42:54 Logical AND operator\n3:46:39 Logical operators\n3:48:47 logical OR operator\n3:51:52 Only trigger newCard() if you're allowed to\n3:53:23 Object sneak peek\n3:58:02 Objects\n4:02:47 Create first object\n4:06:08 Store player data\n4:08:48 Methods on object\n4:10:50 Recap\n4:15:17 Objects & functions\n4:17:21 if else\n4:20:13 Loops & arrays\n4:22:21 push, pop, unshift, shift challenge\n4:25:50 Logical operators\n4:27:50 Rock papers scissors\n4:30:52 Sorting fruits\n\nBuild Chrome Extension \n4:33:54 Build Chrome Extension\n4:38:30 Add button & input tag\n4:40:06 Style button & input tag\n4:47:28 Make input button work w/ onclick\n4:48:49 Refactor to addEventListener\n4:51:11 addEventListener()\n4:52:58 Refactoring\n4:54:25 Create myLeads array & inputEl\n4:56:49 Using let & const\n5:00:11 Push to myLeads array\n5:01:24 Push value from input field\n5:03:56 Use for loop to log out leads\n5:05:38 Create unordered list\n5:07:39 Render leads in unordered list\n5:11:22 How to render li elements w/ innerHTML\n5:13:01 innerHTML\n5:14:34 More innerHTML practice\n5:16:26 Render li elements w/ innerHTML\n5:17:37 Use createElement() & append() instead of innerHTML\n5:21:16 Improving performance of our app\n5:24:37 Create render function\n5:26:40 Clear input field\n5:28:47 Add a tag\n5:35:53 Template strings\n5:35:54 Write template string\n5:36:28 Make template string more dynamic\n5:37:12 Template strings on multiple lines\n5:41:03 Refactor app to use template string\n5:42:19 Style list\n5:46:13 Preparing deployment\n5:51:08 Deploying Chrome Extension\n5:53:40 What is localStorage?\n5:56:45 First localStorage\n6:00:38 Storing arrays in localStorage\n6:07:05 Save leads\n6:09:36 Get leads\n6:13:31 Truthy & falsy values\n6:21:28 Guess expression: truthy or falsy?\n6:23:52 Checking localStorage before rendering\n6:27:33 Style delete button\n6:30:52 Make delete button work\n6:35:12 How function parameters can improve our code\n6:41:09 Write function parameter\n6:44:40 Functions w/ multiple params\n6:47:54 Numbers as function params\n6:49:40 Arguments vs Params\n6:53:06 Arrays as params\n6:55:02 Refactor renderLeads() to use parameter\n6:56:46 Create tabBtn\n7:00:07 Save tab url\n7:02:46 Get current tab\n7:07:09 Use Chrome API to get tab\n7:13:32 Deploy final version\n7:15:48 Recap\n7:21:34 Practice\n7:41:55 Outro"
