# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
title: 'CppCon 2017: Pablo Halpern “Allocators: The Good Parts”'
language: English
recordingDate: 1509408695
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017\n—\nMemory allocators have a bad rap. Sure, they give us control, sometimes vital control, over how and where memory is allocated, but they seem so hard to use correctly. The allocator model that was first standardized in C++98 was put in place to solve a different problem; despite being called \"allocators,\" control over memory allocation was, at best, a secondary consideration. Changes in C++11 and C++17 corrected many of the flaws, at the cost of complexity in the specification. If only there were a user manual and tutorial for allocators, much of that complexity would fall away and could be ignored. This talk strives to be that user manual and tutorial, intended to focus your attention on the important parts of modern allocators, and leaving most of the legacy stuff from 1998 behind. We will look at the easiest way to design a class that uses allocators, and walk through the creation of a real, useful allocator. In the process, I will introduce features in C++17 that can easily be adapted for use with today's C++11 and C++14 standard libraries. My goal is to make allocators approachable, so that you can use them appropriately in your own work.\n— \nPablo Halpern: Intel\n\nPablo Halpern has been programming in C++ since 1989 and has been a member of the C++ Standards Committee since 2007. His work with allocators began at Bloomberg LP, where he developed an appreciation for the simple and powerful allocator model in use there. In 2005, he started writing standards proposals to add the benefits of the Bloomberg Allocator model into the C++ allocator model. After Bloomberg, Pablo worked on C++ extensions for parallelism at Cilk Arts, Inc., and continued that work at Intel Corp after Intel acquired Cilk Arts in 2009. His currently work at Intel is on compiler technology for new processor architectures and he continues to focus on exploiting hardware parallelism through compiler technology, language extensions, and libraries. In the standards committees, he promotes adoption of parallel and vector constructs into the C++ and C standards, as well as continued improvements to the allocators. He lives with his family in southern New Hampshire, USA. When not working on compilers and parallel programming, he enjoys studying the viola, skiing, snowboarding, and watching opera.\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
