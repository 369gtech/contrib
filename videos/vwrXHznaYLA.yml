# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - c++
title: 'CppCon 2016: Arthur O''Dwyer “Template Normal Programming (part 1 of 2)”'
language: English
recordingDate: 1475122516
description: "http://CppCon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016\n—\nWhat is \"template normal programming\"? It's template metaprogramming without so much of the \"meta\" part! During this talk, I promise not to mention SFINAE, or recursion, or standard type traits. We'll focus on the common scenarios \"I think this code could benefit from templates, but I don't understand how to organize it;\" \"I can't get anything to compile without errors;\" and \"My coworker wrote some template code and I don't understand any of it.\" \n\nIn Part I of the talk, we'll start with function templates and class templates, then explain variable templates (new in C++14) and template aliases (new in C++11). We'll do a deep dive into template type deduction; then talk about full and partial specialization; and finish up with an example that motivates the final feature of C++11 template syntax, explicit instantiation.\n\nIn Part II of the talk, we'll begin by demystifying tag dispatch and traits classes; discuss situations in which you have to add disambiguating \"template\" or \"typename\" keywords (and why); and do a deep dive into the rules of what gets instantiated when and where. We'll revisit template type deduction just long enough to explain how it works for variadic templates; and explain two common template idioms — the Curiously Recurring Template Pattern and the Mixin Pattern.\nTime permitting, we'll finish by exploring the big new features of templates according to the C++17 Draft Standard:\n- template\n- type deduction for class template constructors\n- explicit deduction guides\n--\nArthur O'Dwyer worked for many years at Green Hills Software, making the world's most optimizing C and C++ compilers. Now he works at Mixpanel in San Francisco, where he organizes a monthly C++ meetup.\n--\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
