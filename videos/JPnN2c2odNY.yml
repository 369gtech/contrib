# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - craftsmanship
title: 'Fred Tingaud “How to Refactor Millions of Line of Code Without Alienating your Colleagues”'
language: English
recordingDate: 1571209204
description: "http://CppCon.org\n—\nDiscussion & Comments: https://www.reddit.com/r/cpp/\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019\n—\nAt first look, Clang-Tidy looks like a convenient static analysis tool. But it is actually the emerged part of an incredible iceberg that can change the way software developers work on big projects.\nUsing the extension API provided by clang tooling, you can design custom tools that will allow you to get rid of bad patterns or API mistakes in your code that were historically considered \"too deep-rooted to fix\". Through concrete examples we will see what these custom tools can do and how this could impact your everyday job as software maintainers.\nBut wielding such powerful tools can be hard! And working on big projects also means you are likely working in an ecosystem with a lot of other developers. What happens when each time these colleagues try to sync their repository they find out one of your refactorings completely changed the API they were calling in their local work? We will see the difficulties and pitfalls one can encounter when developing and using clang based refactoring tools and how to avoid or reduce them.\n— \nFred Tingaud\nPrincipal software engineer, Murex\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
