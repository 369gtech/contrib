# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

title: 'Vesa Karvonen: What is my state?'
recordingDate: 1497428771
description: "Computers are all about state.  You click a button and something changes in the memory of your computer or even across the network.  Shortly after, often without perceivable delay, your screen is updated.  Perhaps the spelling of a word was corrected or maybe a flight was reserved.\n\nConsidering the pervasiveness of state it may be surprising that most programming languages offer only limited abstractions for dealing with state. Local variables and fields in objects are typically not treated as first-class citizens: they cannot be returned from functions or passed as parameters.  There is no built-in support for observing, composing, or decomposing state.  There is no support for dealing with state that cannot be accessed synchronously.  Yet, state is one of the most common sources of bugs: state changes and something, a piece of local state, inside your application goes out of sync.\n\nIn this talk I will discuss a number of simple abstractions for dealing with state in the context of programming reactive user interfaces.  With the right abstractions programming with state can be fun.  State can be made first-class. It can be composed, decomposed, and made observable.  Storage of state can be decided flexibly and state can be shared across components simply and with ease.  Never again does your UI go out of sync!"
