# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - cloud
    - testing
    - architecture
    - java
title: 'Split That Monolith: a Java on Cloud Foundry Story'
language: English
recordingDate: 1498578240
description: "Split That Monolith: a Java on Cloud Foundry Story [I] - Michele Mancioppi & Tim Gerlach, SAP SE    \n\nThey say: \"If you are smart, start with a monolith.\" Justly so.\n\nAnd then, as the popularity of the service increases, and workload with it, it often comes the phase: \"If you want to scale, split that monolith already.\"\n\nIn this talk aimed at developers and architects, the SAP Cloud Platform Performance Team details the many steps of splitting a complicated Java monolith on Cloud Foundry based on its workload and how this evolves over time. How the requirements, APIs and SLAs evolve with the process. How other programming languages, components and backing services get added to the mix. And, of course, what the final, scalable architecture looks like.\n\nTim Gerlach\nSAP SE\nHeidelberg, Deutschland\nTwitter Tweet\nTim is part of the SAP Cloud Platform Performance Team, where he devotes himself to finding out and consult others on best practices for testing and development on Cloud Foundry. Driven by passion for sharing knowledge and for excellent software, Tim is also a trainer for Microservices and Continuous Deployment at SAP: whatever it takes to help other developers to make the best out of the SAP Cloud Platform.\n\nMichele Mancioppi\nSAP SE\nSenior Developer\nGermany\nWebsitesap.com\nMichele is a performance and development expert in the SAP Cloud Platform Performance Team. His daily business revolves around making good cloud software: deep-diving into cloud applications with performance, resilience or scalability issues. Mentoring development teams for improving their cloud engineering skills. Improving cloud monitoring technology and its usage. Coding (and, whenever possible, open-sourcing) tools to improve the life of cloud developers on Cloud Foundry. Because life is too short for bad cloud software."
