# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

title: 'Michael Sperber - Concurrent ML  - The One That Got Away - Code Mesh 2017'
language: English
recordingDate: 1517489464
description: "How should we write concurrent, reactive applications? In Go, you might say, using its abstractions for channels. Channels are a big win over old-school programming using locks, and an improvement over simple futures.\n\nHowever, the epitome of elegance and functionality in concurrent programming is a mostly-forgotten system called Concurrent ML (CML) from the late 1980s. CML, despite its name, is not tied to ML and fortunately survives in a few language implementations to this day. CML programs are a singular pleasure to both read and write, and also easy to get correct. CML generalizes channels to events, making CML abstractions inherently composable.\n\nThis talk showed how you can benefit from Concurrent ML today, and look beyond to the connections to Erlang, Goroutines, and modern Reactive Programming implementations.\n\nMore details on website: http://www.codemesh.io/codemesh2017/michael-sperber"
