# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

title: 'GNU poke, an extensible editor for structured binary data'
recordingDate: 1569071636
description: "https://media.ccc.de/v/ASG2019-127-gnu-poke-an-extensible-editor-for-structured-binary-data\n\n\n\nGNU poke is a new interactive editor for binary data.  Not limited to editing basic entities such as bits and bytes, it provides a full-fledged procedural, interactive programming language designed to describe data structures and to operate on them.\n\nGNU poke is a new interactive editor for binary data.  Not limited to editing basic entities such as bits and bytes, it provides a full-fledged procedural, interactive programming language designed to describe data structures and to operate on them.  Once a user has defined a structure for binary data (usually matching some file format) she can search, inspect, create, shuffle and modify abstract entities such as ELF relocations, MP3 tags, DWARF expressions, partition table entries, and so on, with primitives resembling simple editing of bits and bytes.  The program comes with a library of already written descriptions (or \"pickles\" in poke parlance) for many binary formats.\n\nGNU poke is useful in many domains.  It is very well suited to aid in the development of programs that operate on binary files, such as assemblers and linkers.  This was in fact the primary inspiration that brought me to write it: easily injecting flaws into ELF files in order to reproduce toolchain bugs.  Also, due to its flexibility, poke is also very useful for reverse engineering, where the real structure of the data being edited is discovered by experiment, interactively.  It is also good for the fast development of prototypes for programs like linkers, compressors or filters, and it provides a convenient foundation to write other utilities such as diff and patch tools for binary files.\n\nThis talk (unlike Gaul) is divided into four parts.  First I will introduce the program and show what it does: from simple bits/bytes editing to user-defined structures.  Then I will show some of the internals, and how poke is implemented.  The third block will cover the way of using Poke to describe user data, which is to say the art of writing \"pickles\".  The presentation ends with a status of the project, a call for hackers, and a hint at future works.\n\nJose E. Marchesi\n\nhttps://cfp.all-systems-go.io/ASG2019/talk/BKXVJQ/"
