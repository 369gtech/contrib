# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - java
title: 'Azul''s Real-Time Profiling & Monitoring (RTPM) Tool'
recordingDate: 1202986316
description: "Google Tech Talks\nFebruary, 13 2008\n\nABSTRACT\n\nI present an unscripted live demo of RTPM, Azul's profiling\n& monitoring tool (meaning: I'll take suggestions from the audience on\nwhat buttons to push during the demo). JVM's routinely collect a lot\nof very useful information internally and the Azul engineers were long\nfrustrated that this information was not readily available outside the\nVM: with RTPM it now is.\n\nAzul works with some of the largest Java programs around. We\nroutinely debug performance problems in programs with hundreds of\nrunning threads (not just runnable threads) using garbage-collected\nheaps with 100's of gigabytes. RTPM is a big selling point with our\ncustomers, and our secret weapon for telling you what your program is\ndoing.\n\n * Always-on (low overhead) everything\n * All stats viewable from standard web browers\n * Contended monitors, i.e. &quot;hot locks&quot; - and call stacks for\nthreads blocked on the lock\n * Live counts of all sys-calls, i/o, file caches, RPC's, native calls \n * Live stats on GC: heap size, GC cycle times, generation sizes, \napp pause times, app allocation rates, etc \n * Live stats of live stuff in the heap; \n * Aggregate \"points-to\" on all heap objects. Suspect a leak? By\nlooking at the suspicious objects' points-to data you can quickly\nzero-in on the root of the leak. \n * Live hot-code profiling \n * JIT asm dumps, annotated with live hardware perf counters \n * Live stack traces of running threads (in 1-line-per Java call\nformat, or 1-line-per-Java-local) \n * \"Peek\" into the live heap, much like a debugger can - straight\nfrom live stack trace dumps \n * Surf around the loaded class hierarchy, or the JIT'd code or all\nHotSpot flags or... \n * Works with 1000's of runnable threads \n * Works with 100's of Gigabyte heaps\n\nSpeaker: Cliff Click (Azul Systems)"
