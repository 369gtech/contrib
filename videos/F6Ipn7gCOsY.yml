# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - c++
    - containers
title: 'Back to Basics: Concurrency - Arthur O''Dwyer - CppCon 2020'
language: English
recordingDate: 1602025209
description: "https://cppcon.org/\nhttps://github.com/CppCon/CppCon2020\n---\nOne of C++11's flagship features was the introduction of std::thread, along with a complete suite of synchronization primitives and useful patterns such as thread-safe static initialization. In this session, we'll motivate C++11's threading model and explain how to use std::thread effectively. We'll compare and contrast the C++11 synchronization primitives (mutex, condition variable, reader-writer lock, and once-flag) as well as the primitives that are new in C++20 (semaphore, latch, and barrier). In particular, we'll show how to make a mutex and a condition variable work together.\nWhen using threads, it's important to avoid shared mutable state. We'll show how to tame that state via the \"blue/green deployment\" pattern, and briefly discuss how to use std::future and std::async to safely handle threads that produce answers.\nAttendees will leave this session with a strong grasp on \"multithreading tactics\" in C++11 and beyond.\n\n---\nArthur O'Dwyer is the author of \"Mastering the C++17 STL\" (Packt 2017) and of professional training courses such as \"Intro to C++,\" \"Classic STL: Algorithms, Containers, Iterators,\" and \"The STL From Scratch.\" (Ask me about training your new hires!) Arthur is occasionally active on the C++ Standards Committee and has a blog mostly about C++. He is also the author of \"Colossal Cave: The Board Game,\" an avid club juggler, and the recipient of four\n\n---\nStreamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk\nevents@digital-medium.co.uk"
