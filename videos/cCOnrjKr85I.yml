# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - ml
title: '#bbuzz 17: Raam Rosh Hai - How to build a recommendation system overnight'
language: English
recordingDate: 1497535427
description: "Further information: https://berlinbuzzwords.de/17/session/how-build-recommendation-system-overnight\n\nYour CEO runs up to you looking scared. Your competitors are recommending related articles based on context and machine learning and the current ML system keeps crashing.\n\nOur embedded iframe is inside popular news sites with millions of articles and thousands of concurrent visitors, The systemâ€™s uptime should at least match these well established companies. You have to fix it, now.\nWhat do you do? Run? Convince the CEO that Machine Learning and Natural Language Processing are passing trends? Or do you reach for open source tools and set out to do something better than your competitors in just a few days?\n\nWe went for the third option; using Elasticsearch, as the heart of this system.\n\nElasticsearch dynamic templating was used for mappings which support specific types like geopoints and dates but still let users dynamically add fields and events.\n\nWe wanted simplicity and reliability in an embarrassingly parallel system, and implemented a reactive streams system. This let us build an asynchronous recommendation engine caching recommendation results in the background so they can be promptly served when asked by the frontend, This has proven resilient enough to give us sleep, simple enough to be maintainable and flexible enough to serve millions of users while keeping costs low.\n\nThese kind of scenarios happen on a daily basis; I will demonstrate how the right design decisions got the product out of the door on time, kept management happy and kept us engineers sane despite the time pressures involved. If you are tired of those nightly dinner \"\"treats\"\" here's a solution.\n\nSpeaker:\nRaam Rosh Hai\nhttps://twitter.com/raam86"
