# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - performance
    - python
title: 'Lidi Zheng, Pau Freixes - gRPC Python, C Extensions, and AsyncIO'
language: English
recordingDate: 1600947600
description: "\"gRPC Python, C Extensions, and AsyncIO\nEuroPython 2020 - Talk - 2020-07-24 - Microsoft\nOnline\n\nBy Lidi Zheng, Pau Freixes\n\nGoal - Encourage Python developers to understand C extensions by sharing gRPC Python’s practice, and advocate the adoption of AsyncIO.\n\nPrerequisite\n- Understand thread vs. process;\n- Interested in asynchronous programming.\n\ngRPC Brief\n- What’s gRPC Core? And what is gRPC Python?\n\nCython To The Rescue\n- Why we picked Cython among all other available tools (e.g., pybind11, ctypes)\n- Debuggability: pdb &amp; gdb\n\nThe GIL Friction\n- How to delegate work to C extension\n- How to make multithreading work\n\nAsyncIO Topic\n- Not blocking the loop, the main headache.\n- Non-blocking I/O solution 1: replacing C libraries’ I/O operations\n- Non-blocking I/O solution 2: dedicated background poller thread\n- Performance improvement (10k - 20k for client, 4k - 16k for server)\n\nMigration to AsyncIO\n- Tolerate multithreading and AsyncIO in the same application\n- Make both API co-existable in the same application\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/\n\n    \""
