# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - architecture
    - 'f#'
speaker:
    name: 'Scott Wlaschin'
    twitter: scottwlaschin
title: 'Domain Modeling Made Functional - Scott Wlaschin'
recordingDate: 1506326676
description: "Statically typed functional programming languages encourage a very different way of thinking about types. The type system is your friend, not an annoyance, and can be used in many ways that might not be familiar to OO programmers.\n\nTypes can be used to represent the domain in a fine-grained, self documenting way. And in many cases, types can even be used to encode business rules so that you literally cannot create incorrect code. You can then use the static type checking almost as an instant unit test â€” making sure that your code is correct at compile time.\n\nIn this talk, we'll look at some of the ways you can use types as part of a domain driven design process, with some simple real world examples in F#. No jargon, no maths, and no prior F# experience necessary."
