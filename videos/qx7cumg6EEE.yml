# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - cloud
    - aws
    - testing
    - python
title: 'James Saryerwinnie - Debugging Your Code with Data Visualization'
language: English
recordingDate: 1535664157
description: "Debugging Your Code with Data Visualization\n[EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]]\n[Edinburgh, UK]\n\nBy James Saryerwinnie\n\nLet's face it.  Sometimes our code just isn't working how we expect it to work.\nWhen this happens, we fall back to our trusty tools to help us\ndebug: pdb, the logging module, or even simple print statements.  But sometimes\nthat just isn't enough, we still can't figure out why our code is broken.\nWe need something more.\n\nThere are a number of fantastic libraries in python for\ncreating data visualizations.  These libraries are commonly used for\nanalyzing and visualizing large sets of data, but don't see as much\nusage when it comes to helping us write and debug our code.\n\nWhat if we could combine the two?  What if we could leverage data\nvisualization tools to understand what our program is doing?  Sometimes, by\nseeing a visual representation of what our code is doing, it becomes much\neasier to understand why our code is not working.  We don't need to create\npublication quality graphs and charts, we just need to generate quick, one-off\nvisualizations to understand what our code is doing.  What we want is the \"data\nvisualization\" equivalent to print() statements.\n\nTo help illustrate this point, I will walk through some of the hardest\nbugs I've had to track down while working on projects such as the AWS CLI and\nboto3, the AWS SDK for Python.  For each bug, I'll show you how I was able to\nleverage data visualization techniques to troubleshoot and fix these bugs.\nCome learn how to debug more efficiently by leveraging data visualization.\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/"
