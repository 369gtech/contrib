# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - 'code design'
    - 'c#'
title: 'Konrad Kokosa. High-performance code design patterns in C#. .NET Fest 2019'
language: Russian
recordingDate: 1579871026
description: "The talk from .NET Fest conference in Kyiv, Ukraine.\nPresentation: https://prodotnetmemory.com/slides/PerformancePatterns/#1\nFb: https://www.facebook.com/dotNETFest/\nWebsite: http://dotnetfest.com/\n\n\nMore and more effort is being seen in .NET ecosystem put into the performance. Quite often we are seeing a new benchmark or blog post about memory allocations being reduced or overall throughput is increased. But how all this is achieved? Can any common code patterns be recognized, named and summarized in a modern C#, at the times of C# 8.0 and .NET Core 3.0/.NET 5? Can we provide a kind of Gang Of Four \"design patterns\" counterpart in the context of performance? As I believe so, in this talk a propose such a list of patterns, altogether with the rationale behind them and practical use cases. Please, feel invited to the world of common ways of using stackallocs, Span of T, pipelines, parallel processing and more."
