# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
title: 'Debug info in optimized code - how far can we go? Improving LLVM debug info with function entry val…'
language: English
recordingDate: 1549827586
description: "Debug info in optimized code - how far can we go? Improving LLVM debug info with function entry values\nby Nikola Prica and Djordje Todorovic\n\nAt: FOSDEM 2019\nhttps://video.fosdem.org/2019/K.4.201/llvm_debug.webm\n\n\nSoftware release products are compiled with optimization level –O2 and higher. Such products might produce a core-file that is used for investigating cause of problem that produced it. First thing from which we start debug analysis is call-trace from a crash. In such traces most of the parameters are reported as optimized out due to variety of reasons. Some of parameters are really optimized out, but some of their locations could be calculated. Expert software developers are able to find what values parameters had at function entry point by using the technique that requires searching those values in disassembly of caller frame at place of that particular function call. Automation of such technique is described by DWARF 5 specifications and it is already implemented in GCC and GDB since 2011. The goal of this paper is to present ideas, implementation and problems that we encountered while we were working on this feature in LLVM. We will also show the improvement by presenting recovered parameters in some of the call-traces. This feature should improve debugging of optimized code built with LLVM by recovering optimized-out function parameters. \n\nRoom: K.4.201\nScheduled start: 2019-02-03 11:15:00+01"
