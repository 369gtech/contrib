# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - testing
    - 'code design'
    - architecture
title: 'Why Domain-Driven Design and Reactive Programming?'
language: English
recordingDate: 1474065125
description: "Enterprise software development is hard.\n\nA poorly designed enterprise software application can result in exorbitant costs and overall project failure. Traditional approaches have had difficulty with promoting good design practices, resulting in applications that don’t meet the needs of the business and are costly and difficult to change. Ultimately, this severely limits the value of these applications.\n\nDomain-Driven Design (DDD) and Reactive Programming are design patterns that address these issues head on. Both approaches address application development complexity by breaking your big problems into smaller problems.\n\nDDD puts the focus on the core business domain ensuring that the highest business value areas are addressed first. DDD operates on the premise that your business needs will change, and your applications need to change accordingly. Working closely together, your business domain experts and technical team can deliver apps that evolve with your business.\n\nReactive Programming promotes simplicity by focusing on only a few important concepts. It reduces the complexity of building a big application by viewing it as a collection of smaller applications that respond to events. The stream of events that occur as part of your business operations can instantly trigger responses from the application, making Reactive Programming real-time, interactive, and engaging.\n\nIn this webinar, we will answer five key questions:\n\nWhat causes software projects to lack well-designed domains?\nWhat is a good domain model and how does it help with reducing complexity?\nWhat is the Reactive model and how does it help developers solve complex application and integration problems?\nHow can you use these techniques to reduce time-to-market and improve quality as you build software that is more flexible, more scalable, and more tightly aligned to business goals?\nHow can in-memory data grids like open source Apache Geode and GemFire (Pivotal’s product based on Apache Geode) fit with these modern concepts?\n\nSpeakers: Vaughn Vernon, Wes Williams"
