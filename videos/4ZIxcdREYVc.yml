# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - python
title: 'Víctor Terrón - Kung Fu al amanecer con itertools'
recordingDate: 1470419338
description: "Víctor Terrón - Kung Fu al amanecer con itertools\n[EuroPython 2016]\n[19 July 2016]\n[Bilbao, Euskadi, Spain]\n(https://ep2016.europython.eu//conference/talks/kung-fu-al-amanecer-con-itertools)\n\nEl módulo itertools es una de las piedras angulares de la programación\navanzada en Python. Esta charla proporciona consejos prácticos del\nálgebra de iteradores que pueden aplicarse de forma inmediata.\nDescubrir el módulo itertools supone arrancar el velo de nuestros\nojos, y una vez usadas funciones como `repeat()`, `takewhile()`,\n`dropwhile()` o `product()` no hay marcha atrás — es imposible volver\nal mundo de los meros mortales donde las soluciones son más complejas\ny necesitan más memoria.\n\n-----\n\nEl módulo itertools es una de las piedras angulares de la programación\navanzada en Python. Parte de la biblioteca estándar, nos ofrece un\nálgebra de iteradores que permite encadenar abstracciones de forma\nelegante, haciendo posibles soluciones sencillas a la par que más\neficientes en su consumo de memoria.\n\nEl objetivo de esta charla es el de, ante todo, proporcionar consejos\ny lecciones claras que puedan aplicarse de forma inmediata.\nIlustrándolo con numerosos ejemplos, los asistentes abandonarán la\ncharla habiendo asimilado como mínimo varios conceptos que mejorarán\nindiscutible e irremediablemente su código. El énfasis se hará en\nmostrar casos específicos en los que una solución tradicional puede\nser mejorada una y otra vez con funciones del módulo itertools.\n\nSupongamos, por ejemplo, que queremos alternar indefinidamente entre\ndos valores: -1 y 1. El recién iniciado utilizaría una variable cuyo\nvalor iría modificando a cada paso y el usuario medio quizás optaría\npor un generador infinito. Ambas soluciones dignas y honorables, pero\nque palidecen ante la maestría del artista marcial que que tan sólo\nnecesita `itertools.cycle()`. Porque el módulo itertools es así: una\nvez caído el velo de nuestros ojos y descubiertas funciones como\n`repeat()`, `takewhile()`, `dropwhile()` o `product()`, no hay marcha\natrás. En esta charla vamos a aprender a reconocer cuándo pueden ser\nusadas, proporcionándonos en una única línea lo que para los meros\nmortales supone mucho más trabajo."
