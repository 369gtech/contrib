# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - 'code design'
    - python
    - java
title: 'Design Patterns: Python vs Java'
language: English
recordingDate: 1535562503
description: "Software design is hard. That's why we invented design patterns. Design patterns abstract common approaches to problem solving into generic approaches that can be modified to suit the application at hand.\n\nMany of the design patterns in common use today are inspired by static object-oriented Enterprise languages like Java. These languages have a feature set that is somewhat more restrictive than Python's, and many design patterns are built to provide elegant ways around these restrictions.\n\nDesign patterns, like Dependency Injection, and the Visitor Pattern arise from restrictions on how you can pass code around at runtime. Other patterns, like Iterators, have been replaced by first-class language features of their own.\n\nAnd some patterns, like Threads just never worked at all.\n\nIn this talk, we'll build up several design patterns, and then look at the Python features that make each pattern unnecessary. In doing so, you'll get a view into idiomatically translating code into Python, and a greater understanding of design decisions users of other languages need to make.\n\nEVENT:\n\nPyOhio 2018\n\nSPEAKER:\n\nChristopher Neugebauer\n\nPERMISSIONS:\n\nOriginal video was published with the Creative Commons Attribution license (reuse allowed).\n\nCREDITS:\n\nOriginal video source: https://www.youtube.com/watch?v=dg-Vm9W3Tlc"
