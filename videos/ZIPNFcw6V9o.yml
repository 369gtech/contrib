# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - perl
    - php
    - c++
    - lisp
    - java
title: 'Back To Basics: Lambda Expressions - Barbara Geller & Ansel Sermersheim - CppCon 2020'
language: English
recordingDate: 1601319611
description: "https://cppcon.org/\nhttps://github.com/CppCon/CppCon2020\n---\nLambdas were first introduced into C++ with the release of the groundbreaking C++11 standard. New capabilities like generic lambda expressions and generalized captures were added in C++14. A few years ago, with the release of C++17, additional new features like constexpr lambda expressions were added. With the new release of C++20 even more features will added, some of which may change the way lambda expressions are used.\n\nThere are several parts to a lambda expression and in order to use them efficiently and effectively, you really need to master all the pieces. Do you know when to capture by value or capture by reference? Can the lifetime of variables be altered by a lambda expression? What are the ways to pass a lambda expression and is this a good idea? Our goal is to answer these questions and talk about the constraints lifted with each new version of C++. Multiple examples will be shown to illustrate what can be done with lambda expressions.\n\nDuring this presentation developers will have the opportunity to learn or review the fundamentals about lambda expressions by studying the terminology. Once someone clearly understands the difference between a function object, function pointer, functor, and anonymous function, we have a great foundation for lambda expressions. We will be able to use our knowledge to reason about generalized captures and what it really means to capture \"this\".\n\n---\nBarbara Geller\nCopperSpice\nCofounder\n\nI am an independent consultant with over twenty-five years of experience as a programmer and software developer. I have worked with numerous smaller companies developing in-house applications. I have also designed and developed Windows applications for several vertical markets including medical billing, transportation, and construction.\n\nMy degree is in Electrical Engineering from Cal Poly Pomona with additional studies in Computer Science.\n\nI am a Co-founder of CopperSpice, a C++ library derived from the existing Qt framework. I designed the Diamond Editor, a cross-platform programmers editor using the CopperSpice libraries. I have programmed in C++, Qt, Visual Objects, Clipper, PHP, and Java.\n\nAnsel Sermersheim\nCopperSpice\nCofounder\n\nI have been working as a programmer for nearly twenty years. My degree is in Computer Science from Cal Poly San Luis  Obispo. I have transitioned to independent consulting and I am currently working on a project for RealtyShares in San Francisco.\n\nCo-founder of CopperSpice, a C++ GUI library.\nCo-founder of DoxyPress, a C++ application for generating documentation.\nDeveloper of the open source libraries: libGuarded, CsSignal and CsString.\n\nI have programmed in C++, C, Lisp, Java, and Perl, with extensive knowledge in TCP/IP and mutilthreaded design. I am an  avid follower of the C++ standard. Speaker at CppCon 2015, CppNow 2016, CppNow 2017, and several ACCU Bay Area meetings.\n\n---\nStreamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk\nevents@digital-medium.co.uk"
