# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - c++
    - performance
title: 'CppCon 2015: Howard Hinnant “A C++14 approach to dates and times"'
language: English
recordingDate: 1445249518
description: "http://www.Cppcon.org\n—\nPresentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2015\n—\nA new date and date/time library designed for C++14 is presented. This library stresses ease of use, easy-to-read code, catching common errors at compile time, and uncompromising run-time performance.\n\nThe design starts with the C++11 std::chrono library, and extends it into the realm of calendars, giving a seamless experience built upon chrono::system_clock::time_point, the durations you already know such as chrono::hours and nanoseconds. Functionality that allows easy and efficient conversions between the std::chrono types and year/month/day - hh::mm::ss data structures is presented.\n\nWhen dates (and times) are known at compile-time (e.g. leap second transitions), all computations are available at compile time (constexpr). When only parts of a date are known at compile time, run-time efficiencies are still gained by compile-time computing parts of the date.\n\nThe syntax of the library is built around a few easy-to-learn rules, and strictly checked at compile time. This makes it easy to learn, and very forgiving for the novice.\n— \nLead author of several C++11 features including: move semantics, unique_ptr, , and . Coming in C++14: .Homepage is http://howardhinnant.github.io (never seem to have time to make it look pretty).Lead author on two open source projects: A std::lib implementation: http://libcxx.llvm.org An Itanium ABI implementation: http://libcxxabi.llvm.orgWebsite: http://howardhinnant.github.io\n—\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com"
