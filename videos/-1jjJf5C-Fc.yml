# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - storage
    - security
    - testing
    - java
title: 'The Checker Framework In Action By Werner Dietl and  Michael Ernst'
language: English
recordingDate: 1492075446
description: "Are you tired of null pointer exceptions, unintended side effects, SQL injections, concurrency errors, mistaken equality tests, and other run-time errors? Are your users tired of them in your code? This presentation shows you how to guarantee, at compile time, that these runtime exceptions cannot occur. You have nothing to lose but your bugs!\n\nThe Checker Framework provides more than a dozen pluggable type systems that are ready to use, including nullness, immutability, and concurrency type-checkers. These type systems have found hundreds of bugs in well-tested open source code, including from Oracle, Google, Apache, etc., and even when other tools like FindBugs gave the code a clean bill of health. The Checker Framework also enables you to create your own new pluggable type system for Java.\n\nThis short presentation is primarily a demo that concretely shows you the tool in action, helping you to understand how it works and whether it is right for you. You will leave the demo understanding the concepts of pluggable type-checking and ready to use it to improve your code.\n\nThe tool is freely available at http://CheckerFramework.org/. You have nothing to lose but your bugs!\n\nWerner Dietl is an assistant professor at the University of Waterloo in Canada. His goal is to provide developers with sound help in eliminating defects. He combines theoretical results with practical tools so developers can create high-quality, trustworthy software and reduce the enormous impact of software defects.\n\nMichael D. Ernst is a Professor in the Computer Science & Engineering department at the University of Washington.\n\nErnst's research aims to make software more reliable, more secure, and easier (and more fun!) to produce. His primary technical interests are in software engineering, programming languages, type theory, security, program analysis, bug prediction, testing, and verification. Ernst's research combines strong theoretical foundations with realistic experimentation, with an eye to changing the way that software developers work.\n\nMore information is available at his homepage: http://homes.cs.washington.edu/~mernst/."
