# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'Keynote:  Excel meets Lambda - Andy Gordon, Simon Peyton Jones | Lambda Days 2021'
language: English
recordingDate: 1614664682
description: "This video was recorded at virtual Lambda Days conference, which took place on 16-19th February 2021 - https://www.lambdadays.org/lambdadays2021\n\nMore great virtual tech conferences - https://codesync.global​ \n\n---\n\nKeynote:  Excel meets Lambda \nby Andy Gordon, Simon Peyton Jones\n\n\nABSTRACT\nThe world’s most widely used programming language is a purely functional language! It’s called Excel. No mutable cells, assignment statements, or sequencing; just pure functions and immutable values. But, despite its phenomenal success, considered as a functional programming language, Excel’s formulas constitute a very limited language: it is largely restricted to scalar values, and you can’t write new user-defined functions.   Until now. Excel has just released LAMBDA, in its full higher-order glory, just as Alonzo Church defined it in the 1930s. That’s pretty exciting, because now you can define new functions, which can call other lambda-defined functions, to arbitrary depth, and even recursively. It represents a qualitative change not an incremental one: Excel just became Turing-complete.   In this talk we’ll tell you some things you may not know about Excel’s existing formula language, we’ll describe the journey that led a few geeks at Microsoft Research Cambridge to influence one of the most widely used programs in history, and we’ll show you some other ideas we’ve been playing around with.  Lambda Days indeed!\n\n\n---\nSPEAKER - Andy Gordon\nHead of Calc Intelligence, Microsoft Research \nAndy’s research is on programming languages: their principles, logic, usability, and trustworthiness. His work has had impact on several best-in-class programming languages, including refinement types for security in F*. Today, he leads the Calc Intelligence team doing research on end-user programming, especially in spreadsheets.\n\nAs a research manager, Andy strives for a diverse and inclusive team. He and his team collaborate closely with the Excel product group. Features such as LAMBDA and Calc.ts, arising from their mission to enhance Excel as a programming language, ship now in production to millions of customers.\n\n\nSPEAKER - Simon Peyton Jones\nLead designer of the Glasgow Haskell Compiler, Principal researcher at Microsoft Research \nSimon has been a researcher at Microsoft Research in Cambridge, England since Sept 1998. He's also an Honorary Professor of the Computing Science Department at Glasgow University, where he was a professor during 1990-1998.  Simon is interested in the design, implementation, and application of lazy functional languages. In practical terms, that means he spends most of his time on the design and implementation of the language Haskell. In particular, much of his work is focused around the Glasgow Haskell Compiler, and its ramifications.  Simon is chair of Computing at School, the group at the epicentre of the reform of the national curriculum for Computing in England. Computer science is now a foundational subject, alongside maths and natural science, that every child learns from primary school onwards (background here).\n---\n\nLambda Days\nWebsite: https://www.lambdadays.org​\nTwitter: https://twitter.com/LambdaDays​"
