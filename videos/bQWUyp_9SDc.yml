# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - java
    - hibernate
title: 'JDK IO 2018 - Vlad Mihalcea - High-Performance Hibernate'
recordingDate: 1535355086
description: "Video recording of a presentation given at JDK IO conference in Copenhagen in June 2018 at the IT-University organized by the Danish Java User Group - Javagruppen.\n\nhttps://jdk.io/jdk-io-2018/speakers/207-vlad-mihalcea\n\nHigh-Performance Hibernate\n\nSpeaker: Vlad Mihalcea\n\nHibernate is the most popular JPA provider and knowing its inner-workings can make the difference between a high-performance enterprise application and one that barely crawls.\n\nThis presentation goes through the most common performance bottlenecks issues like exotic mappings, too much flushing, inappropriate queries, JDBC batch updates misuse, and suboptimal result set fetching.\n\nAside from common anti-patterns, I will also present some very useful Hibernate features like the enhanced identifier generators, caching strategies, and state-of-the-art connection management and monitoring.\n\nReason:\n\nI've been answering over 1200 questions about Hibernate on StackOverflow, and this made me realize that Hibernate is still a very difficult topic for many application developers.\n\nFor this reason, I decided to write 100 articles about Hibernate on my blog (http://vladmihalcea.com/tutorials/hibernate/), as well as a book about High-Performance Java Persistence (https://leanpub.com/high-performance-java-persistence).\n\nwhat are the best identifier generators to use\n\nwhat mappings are not suitable for a data-intensive application\n\nhow statement batching can be enabled and what can compromise its usage\n\nflushing best practices\n\ncaching best practices and gotchas"
