# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

title: 'OML4Py features: Using third-party Python packages from Python, SQL and REST'
language: English
recordingDate: 1634676483
description: "Join us on this Office Hours for Oracle Machine Learning on Autonomous Database, where Sherry LaMonica, Principal Member of Technical Staff at Oracle Machine Learning team will explain how to use third-party Python packages from Python, SQL and REST via OML4Py.\n\nSo you want to deploy your Python scripts to production in the database environment. With Oracle Machine Learning for Python, you can invoke user-defined functions on database-spawned and controlled Python engines using embedded Python execution. An added benefit is the ability to easily leverage data-parallel and task-parallel invocation aided by the database environment. Join this session to learn about the options for working with third-party packages with OML4Py, both on premises and in Autonomous Database, from the Python, SQL and REST APIs.\n\nThe Oracle Machine Learning product family supports data scientists, analysts, developers, and IT to achieve data science project goals faster while taking full advantage of the Oracle platform.\n01:05 Goals for today\n01:24 Third-Party Packages\n02:02 Should I use a third-party Python Package on database data?\n03:05 Performance characteristics for open-source Python packages with Embedded Python Execution\n03:47 Which third-party packages can be used with OML4Py\n04:27 Package Management - using pip\n05:29 Package Management - using virtualenv\n06:45 Embedded Python Execution - Introduction\n08:05 Embedded Python Execution - Benefits\n09:02 OML4Py Interfaces for Embedded Python Execution\n09:26 Embedded Python Execution - functions via Python and SQL\n10:58 Embedded Python Execution - functions via REST interface\n11:25 Which OML4Py interface should I use for Embedded Python Execution?\n12:09 Script Repository and datastore\n13:11 Functions for managing scripts\n13:54 OML4Py Datastore\n14:45 Functions for managing datastore objects\n15:26 Parallelism\n16:43 Parallelism - Embedded Python Execution - Python interface\n17:21 Parallelism - Embedded Python Execution - SQL interface\n17:52 Interfaces for Embedded Python Execution - Python\n18:30 Interfaces for Embedded Python Execution - SQL\n19:08 Interfaces for Embedded Python Execution - REST\n20:08 Demo\n28:29 Q&A"
