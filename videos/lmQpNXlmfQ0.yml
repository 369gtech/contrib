# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - unix
title: 'Flickerfree boot Seamless boot for UEFI systems'
language: English
recordingDate: 1549825789
description: "by Hans de Goede\n\nAt: FOSDEM 2019\nhttps://video.fosdem.org/2019/K.4.401/flickerfree.webm\n\n\nPresentation on the recent \"flickerfree\" boot work, where the goal is to go from the firmware splashscreen/logo to the GUI in one fluid experience without any modesets (causing the screen to blank) or transitions to text-mode. Topics discussed during the presentation are: \n\n\nThe changes made to each of the involved components\nThe upstream status of these changes\nSteps to take to enable this\n\nA typical UEFI boot of a Linux system looks like this:\n* firmware shows a boot logo\n* shim loads, clears the screen\n* grub loads, shows a text menu\n* kernel efifb loads, clears the screen, may show a bunch of text messages\n* kernel drm/kms driver loads\n* bootsplash (plymouth) loads\n* GUI loads \n\nWhere the kms driver, plymouth and GUI load all may do a modeset resulting in the display loosing signal for a while. The constant screen clearing, various text-messages and the modesets all result in a quite restless boot experience. \n\nMy latest project at Red Hat is fixing all this so that we go straight from the logo shown into the GUI, while still being able to show error messages at all stages if necessary. \n\nDuring this presentation I describe:\n* The changes made to each of the involved components\n* The upstream status of these changes\n* Steps to take to enable this \n\nBenefits to the eco-system: \n\n1) A nicer boot experience for all Linux systems makes Linux more user-friendly and will hopefully lead to wider boot experience \n\n2) Customized embedded systems can already offer a similar experience by disabling the kernel's fbcon driver. There are 2 downsides to the current solutions:\n2.1) They are per project customizations, there is no standard way to do this,\n2.2) Without fbcon, no text output is possible at all and if something causes the GUI to not load there is no way to show a message to the end user (who will not have serial console access). \n\nMy work offers a standardized way to achieve the desired boot experience while keeping fbcon enabled so that error messages can be shown at any stage if necessary. \n\nRoom: K.4.401\nScheduled start: 2019-02-02 16:00:00+01"
