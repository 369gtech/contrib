# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata


tags:
    - cloud
    - ux
    - containers
    - kubernetes
    - testing
title: 'Deep Dive: Cloud Provider SIG - Chris Hoge, OpenStack Foundation & Jago Macleod, Google'
language: English
recordingDate: 1544937069
description: "Deep Dive: Cloud Provider SIG - Chris Hoge, OpenStack Foundation & Jago Macleod, Google \n\nThe long term goal of SIG Cloud Provider is to promote a vendor neutral ecosystem for our community. New vendors providing support for Kubernetes should feel equally empowered to do so as any of today’s existing cloud providers. More importantly, SIG Cloud Provider is focused on ensuring a consistent and high-quality user experience across providers. The SIG acts as a central group for developing the Kubernetes project in a way that ensures all providers share common privileges and responsibilities. As Kubernetes transitions from building all binaries necessary to create and run a Kubernetes cluster, to a new world in which Cloud Providers must supply some additional artifacts (Cloud Controller Manager, e.g.) to most effectively run, one area of concern is around how to manage the build and release process effectively. This deep dive session will be a working session to brainstorm how to manage this effectively. Questions for consideration include: - whether and how to include Cloud Provider e2e tests in the suite of release blocking tests for OSS Kubernetes - how to communicate to end users whether they need and how to obtain additional artifacts - how to manage optional addons and extensions in the validation of Kubernetes (e.g., CoreDNS on Kubernetes on N Cloud Providers), when those ecosystem projects evolve on their own release schedules. Session will begin with suggesting and voting on issues of highest level of interest and urgency, and then open discussion on 3 - 5 topics. Recommended for those working on ecosystem projects, those interested in build and release, and those currently working on Cloud Provider implementations. \n\nTo learn more:  https://sched.co/HEfa"
