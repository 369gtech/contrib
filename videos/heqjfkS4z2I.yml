# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

category: conference
tags:
    - web
    - angular
    - mobile
    - android
    - ios
    - testing
    - architecture
    - javascript
    - kotlin
    - java
    - spring
    - functional
title: 'KotlinConf 2018 - Closing Panel'
language: English
recordingDate: 1539262813
description: "Recording brought to you by American Express https://americanexpress.io/kotlin-jobs\nClosing panel with members of JetBrains and Community \n\n0:00 Introductions\n5:00 When can we expect 1.3, and can you talk about the goals after 1.3?\n6:00 There were so many Kotlin/Native talks, when will Kotlin for JVM abandoned?\n6:52 Is there any chance for Angular supporting Kotlin (or the other way around)?\n9:10 What is your favourite language feature (exluding extensions)? Least favourite language feature? \n14:40 What are the chances of Kotlin and Flutter?\n15:40 Jake: you've worked with Rx a lot in the past, and now you're apparently quite into coroutines, so which one would you choose out of the two?\n17:25 Kotlin is skewed towards Java developers. What's the community for total beginners? What's the commitment to flatten out the learning curve for newbie programmers?\n18:00 Kotlin/Native concurrency and memory model: aren't you worried that it will see slow adoption, because of how it's different from what people are used on iOS (and even the JVM, where threads and shared mutable state is quite widespread)?\n19:50 Will there be a Kotlin for GPU programming?\n20:35 Venkat: As someone who's worked with Rx, Futures, coroutines, what's your opinion of each, when would you use which one? Coroutines all the way or no?\n21:35 Are there plans to invest more time and resources in Dokka?\n22:30 How did you come up with the idea of Kotlin in this world where there were so many existing programing languages?\n24:20 I'm a beginner to programming, what's your advice to people who have new ideas and are afraid of working on them and then failing?\n25:40 Jake: You've worked on OkHttp, Retrofit, Dagger, etc. What are you planning to work on in the future?\n27:00 Is there an official/preferred way of unit testing Kotlin code that has non-open classes without using powermock or PowerMockito?\n28:30 Android devs: How have coroutines impacted your architecture, or how do you think it'll change it going forward?\n31:45 How do we get more people in academia to get started with Kotlin?\n34:00 Why can't the type system represent a double optional type?\n35:25 Kotlin has JVM, JS, Native support, what's the next platform?\n36:30 Is Spring Fu a replacement for Spring Boot?\n39:50 With the Kotlin Gradle DSL becoming stable, plugin developers will start supporting the Kotlin DSL. Will there be a solution for the case when the Java, Groovy and Kotlin compile steps have cyclic dependencies on each other? This currently needs hacky workarounds.\n41:35 What about adding dependency injection to Kotlin on a language level? Are there any planned improvements for testing Kotlin code pragmatically?\n42:25 Type classes?\n43:00 Will we ever have a choice for internal visibility by default? Would be useful in projects with many modules.\n44:00 What is preventing Kotlin from TIOBE top 20?\n46:30 How many of you are using functional programming (especially Arrow) in Android applications? What's your advice for getting started with it?\n54:25 When will we have a multiplatform file API in the Kotlin standard library?\n55:00 What were your pain points when adopting Kotlin within JetBrains (outside the actual Kotlin team, on other products)?\n56:30 How many JetBrains products use Kotlin in production?\n57:50 What was the hardest Kotlin concept you've had to explain to somebody?\n\nThank you to user zsmb for the timestamps."
