# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - scrum
    - kanban
    - agile
title: 'Сергей Прохоренко, Вячеслав Москаленко, Масштабируем Agile: Выбираем Scrum или Kanban?'
recordingDate: 1445113628
description: "«Скрам для разработки сложных и долгосрочных инициатив, Канбан для выполнения потоковых задач» – довольно упрощенная формула, которую до сих пор многие используют по умолчанию, но иногда её приходится тестировать и обосновывать. Были исключения, когда формула не срабатывала для команды IT поддержки, так же, как и для разработки не всегда подходил Скрам.\n\nВыбор методологии часто является спорным и даже, иногда, \"религиозным\" вопросом. Но все-таки, есть ли какие-то очевидные критерии выбора «Скрам или Канбан»? Зачем тратить время и силы на внедрение методологии Скрам, если все равно процесс упростится и от Скрама останется только доска!\n\nЭту важную мысль мы попробовали донести до нашего клиента – крупного инвестбанка, когда Luxoft Agile Practice была приглашена провести масштабную трансформацию подразделения 80+ человек. Для этого подразделения клиент выступил с инициативой по созданию выделенной команды для L3-поддержки, при этом изначально был скептически настроен по отношению к Канбан. Основным аргументом против Канбан было отсутствие волшебной практики \"коммитмента\" на \"скоуп\". То есть, как ни странно, клиент настаивал на Скраме из-за нежелания меняться в своем plan-driven подходе.\n\nСпустя почти 2 года от начала глобальной трансформации, L3-гильдия, использующая чистый Канбан, является одной из самых эффективных команд в программе. Сейчас, в общем пространстве появляются новые команды, новые Канбан-доски, так же как и новые Скрам-доски. Главное, чего удалось добиться в этой программе – при масштабировании проектная команда понимает критерии выбора «Канбан или Скрам» глубже чем простой шаблон - \"Скрам для разработки, Канбан для поддержки\".\n\nВячеслав Москаленко расскажет много интересных деталей, связанных с критерием выбора Скрам или Канбан в рамках одной программы. Также поделится своим опытом в переводе команд на гибкие методологии."
