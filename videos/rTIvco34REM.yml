# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - storage
    - performance
title: 'PostgreSQL at low level: stay curious!'
language: English
recordingDate: 1569070066
description: "https://media.ccc.de/v/ASG2019-117-postgresql-at-low-level-stay-curious-\n\n\n\nHave you ever encountered a transient performance issue, that was hard to\ninvestigate only from the database point of view? On top of how many layers of\nabstraction your database is working? What is the difference between running\nyour database on a bare metal, VM or inside a container?\n\nPostgreSQL does not work in the vacuum, it heavily relies on functionality\nprovided by an underlying platform. And sometimes to answer these questions\nabove one needs to step back and look at a problem not only from a database\npoint of view. In this talk we will discuss how to achieve that, how to tame\nsuch tools as strace, perf or eBPF to troubleshoot intricate issues and stay\ncurious.\n\nHave you ever encountered a transient performance issue, that was hard to\ninvestigate only from the database point of view? On top of how many layers of\nabstraction your database is working? What is the difference between running\nyour database on a bare metal, VM or inside a container?\n\nPostgreSQL does not work in the vacuum, it heavily relies on functionality\nprovided by an underlying platform. And sometimes to answer these questions\nabove one needs to step back and look at a problem not only from a database\npoint of view. In this talk we will discuss how to achieve that, how to tame\nsuch tools as strace, perf or eBPF to troubleshoot intricate issues and stay\ncurious.\n\nDmitrii Dolgov\n\nhttps://cfp.all-systems-go.io/ASG2019/talk/AXPVZ3/"
