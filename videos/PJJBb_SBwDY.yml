# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - cloud
title: 'Hacking Terraform for fun and profit'
language: English
recordingDate: 1597561437
description: "by Anton Babenko\n\nAt: FOSDEM 2020\nhttps://video.fosdem.org/2020/UD2.120/terraform.webm\n\nUsing Terraform is often simple, extending it to do what YOU want, can be challenging (or “impossible”). Want to manage unsupported resources? Maintain lots of resources? Integrate non-integrable? The talk is an advanced guide about HOW to extend, integrate and execute Terraform to get things DONE.\nIf you’ve been using Terraform just by following the official documentation, you are not getting all from it.\n\n\nAs soon as one cloud provider announces a new service or a feature, you dream that Terraform has zero-day support for it. Well, it is not always like this, and I will show what we can do about it.\n\n\nAre you using Terraform and keep asking yourself why I should copy-paste so much? What if you need to manage more than a dozen resources with Terraform (e.g., hundreds of GitHub repositories with permissions, or hundreds of IAM users and their permissions)? How can I use Terraform to manage absolutely ANY type of resource? What is beyond Terraform modules? What is a really dynamic module and what Terraform 0.12 will help us with?\n\n\nLet's see the advanced and very unusual solutions of how Terraform can be extended, integrated, executed, or merely hacked to get the job done with the help of external open-source services and integrations.\n\nRoom: UD2.120 (Chavanne)\nScheduled start: 2020-02-01 14:30:00"
