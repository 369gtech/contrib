# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - c++
    - 'code design'
    - agile
    - ruby
    - java
speaker:
    name: 'Robert C. Martin'
    twitter: unclebobmartin
title: 'YOW! West 2016 Dave Cheney - SOLID Go Design'
recordingDate: 1467602144
description: "In his book, Agile Design Patterns (Pearson, 2002), Robert C. Martin introduces the SOLID design principals as cornerstones for the construction of software that amenable to change.\n\nPart of a larger set of design principals1, the SOLID principals are closely associated with object oriented languages like C++, Java, C#, and more recently Ruby. And although they span different eras, all these languages share the same class structured, inheritance based foundations.\n\nGo is one of a set of new languages that eschew inheritance, instead preferring the mantra of composition. Does this mean that Go programs do not follow the SOLID design principals, or even that Go is not an object oriented language?\n\nIn this talk I will explore the five core SOLID design patterns, discuss their applicability to Go programmers, and explain that while Go programs are not inheritance or class based, they adhere strongly to Martin’s principals. The audience will learn how well structured Go applications naturally follow the SOLID principals, leading to code which is loosely coupled, highly reusable, and inherently maintainable.\n\nhttp://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod\n\nDavid is a programmer and author from Sydney Australia. For his day job, David works at Canonical, where he has been developing software in Go for the last four years.\n\nDavid is also a long time contributor to the Go project and organises the Sydney Go Users’ group.\n\nFor more on YOW! West, visit http://west.yowconference.com.au"
