# Contribution guide: https://github.com/watch-devtube/contrib

# speaker:
#   name: _____
#   twitter: _____ # mandatory twitter handle; must not include @

# tags: [____, _____, _____]

tags:
    - unix
    - cloud
    - embedded
title: 'Multiple Birds with One Linux, IoT in the Automotive Space'
recordingDate: 1548401313
description: "Malini Bhandaru\n\nhttps://2019.linux.conf.au/schedule/presentation/165/\n\nThe OBD-II [1] interface on automobiles today provides access to a rich set of real time vehicle drive data using a pluggable device [2, 3], such as speed, acceleration, braking, GPS co-ordinates, miles driven, fuel consumption, part wear and tear, just to name a few.  Imagine what you can do for fun or profit, possibly launch a service to locate your car in a large parking lot, to track your, nay teenagerâ€™s, driving habits, help city planning make driving safer, deploy a driving-based insurance discount program, manage a fleet of vehicles, or provide consumer report style feedback/assessment on early stage autonomous vehicles such as number of times and circumstances under which human intervention was necessary.\r\n\r\nLet us take a closer look at three classes of applications requiring different data handling, both with respect to privacy and volume, and how we might support them. Consider for the first application, Driver-Profile, an insurance style application, where the aggregation service in the cloud requires tracking vehicle-ID, driver-ID, miles driven, speed, acceleration, hard breaking, and areas driven among other things. A second application, Smart-City, that wants to identify traffic bottlenecks and danger zones in various city limits, identified by regions where a vehicle crawls or the driver needed to slam the brakes. For the third application, Car-Profile, the goal is to identify which cars, manufacturer plus model, is involved in the most speeding incidences.  Within the above contexts we demonstrate data extraction, manipulation (masking, dropping, classifying), and transmission (periodically or in aggregate) to various end-points.  We shall implement these in the car, aka edge, using the Function-as-a-Service [4] construct. At the data center, based on the service, additional data sources will be combined to obtain the desired insights. \r\n\r\nIn this talk we bring Automotive IoT to the forefront, demonstrating how Linux on the device/ edge, along intermediate points up into the data center/cloud work together to create a platform to deliver new services to enrich our lives. In true open source style, we shall share the code, to jump start further explorations.\r\n\r\n\r\nReferences: \r\n1. https://en.wikipedia.org/wiki/On-board_diagnostics \r\n2. https://www.moj.io \r\n3. http://zubie.com\r\n4. https://www.openfaas.com/\n\nlinux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/\n\n#linux.conf.au #linux #foss #opensource"
